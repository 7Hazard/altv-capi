
/**
 * THIS HEADER IS AUTOGENERATED
 * Sat Jan 11 11:41:27 2020

 * 
 * Source implementation for alt:V C API
 */


#include "altv-capi-sourcedefs.hpp"

using namespace alt;

CAPI void alt_VectorLayout_float_3_free(struct alt_VectorLayout_float_3* ptr)
{
    delete (class alt::VectorLayout<float, 3> *)ptr;
}

CAPI struct alt_VectorLayout_float_3* alt_VectorLayout_float_3_Create()
{
    return (struct alt_VectorLayout_float_3*)new alt::VectorLayout<float, 3>();
}

CAPI struct alt_VectorLayout_float_3* alt_VectorLayout_float_3_Create_1(float* _elements)
{
    return (struct alt_VectorLayout_float_3*)new alt::VectorLayout<float, 3>(*(const alt::VectorLayout<float, 3>::Element (*)[3])_elements);
}

CAPI struct alt_VectorLayout_float_3* alt_VectorLayout_float_3_Create_2(float* el)
{
    return (struct alt_VectorLayout_float_3*)new alt::VectorLayout<float, 3>(*(const alt::VectorLayout<float, 3>::Element *)el);
}

CAPI float* alt_VectorLayout_float_3_Access_size_t(struct alt_VectorLayout_float_3* _instance, unsigned long long key)
{
    return (float*)&((alt::VectorLayout<float, 3> *)_instance)->operator[]((std::size_t)key);
}

CAPI float* alt_VectorLayout_float_3_Access_size_t_1(struct alt_VectorLayout_float_3* _instance, unsigned long long key)
{
    return (float*)&((alt::VectorLayout<float, 3> *)_instance)->operator[]((std::size_t)key);
}

CAPI struct alt_VectorLayout_float_3* alt_VectorLayout_float_3_Create_3(struct alt_VectorLayout_float_3* _p0)
{
    return (struct alt_VectorLayout_float_3*)new alt::VectorLayout<float, 3>(*(const alt::VectorLayout<float, 3> *)_p0);
}

CAPI struct alt_VectorLayout_float_3* alt_VectorLayout_float_3_Create_4(struct alt_VectorLayout_float_3* _p0)
{
    return (struct alt_VectorLayout_float_3*)new alt::VectorLayout<float, 3>(*(alt::VectorLayout<float, 3> *)_p0);
}

CAPI void alt_VectorLayout_float_3_Assign_constVectorLayout_float_3Ref(struct alt_VectorLayout_float_3* _instance, struct alt_VectorLayout_float_3* _p0)
{
    ((alt::VectorLayout<float, 3> *)_instance)->operator=(*(const alt::VectorLayout<float, 3> *)_p0);
}

CAPI void alt_VectorLayout_float_3_Assign_VectorLayout_float_3RefRef(struct alt_VectorLayout_float_3* _instance, struct alt_VectorLayout_float_3* _p0)
{
    ((alt::VectorLayout<float, 3> *)_instance)->operator=(*(alt::VectorLayout<float, 3> *)_p0);
}

CAPI void alt_VectorLayout_float_4_free(struct alt_VectorLayout_float_4* ptr)
{
    delete (class alt::VectorLayout<float, 4> *)ptr;
}

CAPI struct alt_VectorLayout_float_4* alt_VectorLayout_float_4_Create()
{
    return (struct alt_VectorLayout_float_4*)new alt::VectorLayout<float, 4>();
}

CAPI struct alt_VectorLayout_float_4* alt_VectorLayout_float_4_Create_1(float* _elements)
{
    return (struct alt_VectorLayout_float_4*)new alt::VectorLayout<float, 4>(*(const alt::VectorLayout<float, 4>::Element (*)[4])_elements);
}

CAPI struct alt_VectorLayout_float_4* alt_VectorLayout_float_4_Create_2(float* el)
{
    return (struct alt_VectorLayout_float_4*)new alt::VectorLayout<float, 4>(*(const alt::VectorLayout<float, 4>::Element *)el);
}

CAPI float* alt_VectorLayout_float_4_Access_size_t(struct alt_VectorLayout_float_4* _instance, unsigned long long key)
{
    return (float*)&((alt::VectorLayout<float, 4> *)_instance)->operator[]((std::size_t)key);
}

CAPI float* alt_VectorLayout_float_4_Access_size_t_1(struct alt_VectorLayout_float_4* _instance, unsigned long long key)
{
    return (float*)&((alt::VectorLayout<float, 4> *)_instance)->operator[]((std::size_t)key);
}

CAPI struct alt_VectorLayout_float_4* alt_VectorLayout_float_4_Create_3(struct alt_VectorLayout_float_4* _p0)
{
    return (struct alt_VectorLayout_float_4*)new alt::VectorLayout<float, 4>(*(const alt::VectorLayout<float, 4> *)_p0);
}

CAPI struct alt_VectorLayout_float_4* alt_VectorLayout_float_4_Create_4(struct alt_VectorLayout_float_4* _p0)
{
    return (struct alt_VectorLayout_float_4*)new alt::VectorLayout<float, 4>(*(alt::VectorLayout<float, 4> *)_p0);
}

CAPI void alt_VectorLayout_float_4_Assign_constVectorLayout_float_4Ref(struct alt_VectorLayout_float_4* _instance, struct alt_VectorLayout_float_4* _p0)
{
    ((alt::VectorLayout<float, 4> *)_instance)->operator=(*(const alt::VectorLayout<float, 4> *)_p0);
}

CAPI void alt_VectorLayout_float_4_Assign_VectorLayout_float_4RefRef(struct alt_VectorLayout_float_4* _instance, struct alt_VectorLayout_float_4* _p0)
{
    ((alt::VectorLayout<float, 4> *)_instance)->operator=(*(alt::VectorLayout<float, 4> *)_p0);
}

CAPI void alt_Vector_float_3_VectorLayout_float_3_free(struct alt_Vector_float_3_VectorLayout_float_3* ptr)
{
    delete (class alt::Vector<float, 3, class alt::VectorLayout<float, 3> > *)ptr;
}

CAPI struct alt_Vector_float_3_VectorLayout_float_3* alt_VectorLayout_float_3_to_alt_Vector_float_3_VectorLayout_float_3(struct alt_VectorLayout_float_3* from)
{
    return (alt_Vector_float_3_VectorLayout_float_3*)static_cast<alt::Vector<float, 3, alt::VectorLayout<float, 3> >*>((alt::VectorLayout<float, 3>*)from);
}

CAPI struct alt_VectorLayout_float_3* alt_Vector_float_3_VectorLayout_float_3_to_alt_VectorLayout_float_3(struct alt_Vector_float_3_VectorLayout_float_3* from)
{
    return (alt_VectorLayout_float_3*)static_cast<alt::VectorLayout<float, 3>*>((alt::Vector<float, 3, alt::VectorLayout<float, 3> >*)from);
}

CAPI struct alt_Vector_float_3_VectorLayout_float_3* alt_Vector_float_3_VectorLayout_float_3_Create()
{
    return (struct alt_Vector_float_3_VectorLayout_float_3*)new alt::VectorLayout<float, 3>();
}

CAPI struct alt_Vector_float_3_VectorLayout_float_3* alt_Vector_float_3_VectorLayout_float_3_Create_1(float* _elements)
{
    return (struct alt_Vector_float_3_VectorLayout_float_3*)new alt::VectorLayout<float, 3>(*(const alt::VectorLayout<float, 3>::Element (*)[3])_elements);
}

CAPI struct alt_Vector_float_3_VectorLayout_float_3* alt_Vector_float_3_VectorLayout_float_3_Create_2(float* el)
{
    return (struct alt_Vector_float_3_VectorLayout_float_3*)new alt::VectorLayout<float, 3>(*(const alt::VectorLayout<float, 3>::Element *)el);
}

CAPI float* alt_Vector_float_3_VectorLayout_float_3_Access_size_t(struct alt_Vector_float_3_VectorLayout_float_3* _instance, unsigned long long key)
{
    return (float*)&static_cast<alt::VectorLayout<float, 3> *>((alt::Vector<float, 3, alt::VectorLayout<float, 3> > *)_instance)->operator[]((std::size_t)key);
}

CAPI float* alt_Vector_float_3_VectorLayout_float_3_Access_size_t_1(struct alt_Vector_float_3_VectorLayout_float_3* _instance, unsigned long long key)
{
    return (float*)&static_cast<alt::VectorLayout<float, 3> *>((alt::Vector<float, 3, alt::VectorLayout<float, 3> > *)_instance)->operator[]((std::size_t)key);
}

CAPI struct alt_Vector_float_3_VectorLayout_float_3* alt_Vector_float_3_VectorLayout_float_3_Create_3(struct alt_VectorLayout_float_3* _p0)
{
    return (struct alt_Vector_float_3_VectorLayout_float_3*)new alt::VectorLayout<float, 3>(*(const alt::VectorLayout<float, 3> *)_p0);
}

CAPI struct alt_Vector_float_3_VectorLayout_float_3* alt_Vector_float_3_VectorLayout_float_3_Create_4(struct alt_VectorLayout_float_3* _p0)
{
    return (struct alt_Vector_float_3_VectorLayout_float_3*)new alt::VectorLayout<float, 3>(*(alt::VectorLayout<float, 3> *)_p0);
}

CAPI void alt_Vector_float_3_VectorLayout_float_3_Assign_constVectorLayout_float_3Ref(struct alt_Vector_float_3_VectorLayout_float_3* _instance, struct alt_VectorLayout_float_3* _p0)
{
    static_cast<alt::VectorLayout<float, 3> *>((alt::Vector<float, 3, alt::VectorLayout<float, 3> > *)_instance)->operator=(*(const alt::VectorLayout<float, 3> *)_p0);
}

CAPI void alt_Vector_float_3_VectorLayout_float_3_Assign_VectorLayout_float_3RefRef(struct alt_Vector_float_3_VectorLayout_float_3* _instance, struct alt_VectorLayout_float_3* _p0)
{
    static_cast<alt::VectorLayout<float, 3> *>((alt::Vector<float, 3, alt::VectorLayout<float, 3> > *)_instance)->operator=(*(alt::VectorLayout<float, 3> *)_p0);
}

CAPI struct alt_Vector_float_3_VectorLayout_float_3* alt_Vector_float_3_VectorLayout_float_3_Create_5()
{
    return (struct alt_Vector_float_3_VectorLayout_float_3*)new alt::Vector<float, 3, alt::VectorLayout<float, 3> >();
}

CAPI struct alt_Vector_float_3_VectorLayout_float_3* alt_Vector_float_3_VectorLayout_float_3_Create_6(float* _elements)
{
    return (struct alt_Vector_float_3_VectorLayout_float_3*)new alt::Vector<float, 3, alt::VectorLayout<float, 3> >(*(const float (*)[3])_elements);
}

CAPI struct alt_Vector_float_3_VectorLayout_float_3* alt_Vector_float_3_VectorLayout_float_3_Create_7(struct alt_VectorLayout_float_3* layout)
{
    return (struct alt_Vector_float_3_VectorLayout_float_3*)new alt::Vector<float, 3, alt::VectorLayout<float, 3> >(*(const alt::Vector<float, 3, alt::VectorLayout<float, 3> >::Layout *)layout);
}

CAPI float alt_Vector_float_3_VectorLayout_float_3_LengthSqr(struct alt_Vector_float_3_VectorLayout_float_3* _instance)
{
    return (float)((alt::Vector<float, 3, alt::VectorLayout<float, 3> > *)_instance)->LengthSqr();
}

CAPI float alt_Vector_float_3_VectorLayout_float_3_Length(struct alt_Vector_float_3_VectorLayout_float_3* _instance)
{
    return (float)((alt::Vector<float, 3, alt::VectorLayout<float, 3> > *)_instance)->Length();
}

CAPI struct alt_Vector_float_3_VectorLayout_float_3* alt_Vector_float_3_VectorLayout_float_3_Create_8(struct alt_Vector_float_3_VectorLayout_float_3* _p0)
{
    return (struct alt_Vector_float_3_VectorLayout_float_3*)new alt::Vector<float, 3, alt::VectorLayout<float, 3> >(*(const alt::Vector<float, 3, alt::VectorLayout<float, 3> > *)_p0);
}

CAPI struct alt_Vector_float_3_VectorLayout_float_3* alt_Vector_float_3_VectorLayout_float_3_Create_9(struct alt_Vector_float_3_VectorLayout_float_3* _p0)
{
    return (struct alt_Vector_float_3_VectorLayout_float_3*)new alt::Vector<float, 3, alt::VectorLayout<float, 3> >(*(alt::Vector<float, 3, alt::VectorLayout<float, 3> > *)_p0);
}

CAPI void alt_Vector_float_3_VectorLayout_float_3_Assign_constVector_float_3_VectorLayout_float_3Ref(struct alt_Vector_float_3_VectorLayout_float_3* _instance, struct alt_Vector_float_3_VectorLayout_float_3* _p0)
{
    ((alt::Vector<float, 3, alt::VectorLayout<float, 3> > *)_instance)->operator=(*(const alt::Vector<float, 3, alt::VectorLayout<float, 3> > *)_p0);
}

CAPI void alt_Vector_float_3_VectorLayout_float_3_Assign_Vector_float_3_VectorLayout_float_3RefRef(struct alt_Vector_float_3_VectorLayout_float_3* _instance, struct alt_Vector_float_3_VectorLayout_float_3* _p0)
{
    ((alt::Vector<float, 3, alt::VectorLayout<float, 3> > *)_instance)->operator=(*(alt::Vector<float, 3, alt::VectorLayout<float, 3> > *)_p0);
}

CAPI void alt_Vector_float_4_VectorLayout_float_4_free(struct alt_Vector_float_4_VectorLayout_float_4* ptr)
{
    delete (class alt::Vector<float, 4, class alt::VectorLayout<float, 4> > *)ptr;
}

CAPI struct alt_Vector_float_4_VectorLayout_float_4* alt_VectorLayout_float_4_to_alt_Vector_float_4_VectorLayout_float_4(struct alt_VectorLayout_float_4* from)
{
    return (alt_Vector_float_4_VectorLayout_float_4*)static_cast<alt::Vector<float, 4, alt::VectorLayout<float, 4> >*>((alt::VectorLayout<float, 4>*)from);
}

CAPI struct alt_VectorLayout_float_4* alt_Vector_float_4_VectorLayout_float_4_to_alt_VectorLayout_float_4(struct alt_Vector_float_4_VectorLayout_float_4* from)
{
    return (alt_VectorLayout_float_4*)static_cast<alt::VectorLayout<float, 4>*>((alt::Vector<float, 4, alt::VectorLayout<float, 4> >*)from);
}

CAPI struct alt_Vector_float_4_VectorLayout_float_4* alt_Vector_float_4_VectorLayout_float_4_Create()
{
    return (struct alt_Vector_float_4_VectorLayout_float_4*)new alt::VectorLayout<float, 4>();
}

CAPI struct alt_Vector_float_4_VectorLayout_float_4* alt_Vector_float_4_VectorLayout_float_4_Create_1(float* _elements)
{
    return (struct alt_Vector_float_4_VectorLayout_float_4*)new alt::VectorLayout<float, 4>(*(const alt::VectorLayout<float, 4>::Element (*)[4])_elements);
}

CAPI struct alt_Vector_float_4_VectorLayout_float_4* alt_Vector_float_4_VectorLayout_float_4_Create_2(float* el)
{
    return (struct alt_Vector_float_4_VectorLayout_float_4*)new alt::VectorLayout<float, 4>(*(const alt::VectorLayout<float, 4>::Element *)el);
}

CAPI float* alt_Vector_float_4_VectorLayout_float_4_Access_size_t(struct alt_Vector_float_4_VectorLayout_float_4* _instance, unsigned long long key)
{
    return (float*)&static_cast<alt::VectorLayout<float, 4> *>((alt::Vector<float, 4, alt::VectorLayout<float, 4> > *)_instance)->operator[]((std::size_t)key);
}

CAPI float* alt_Vector_float_4_VectorLayout_float_4_Access_size_t_1(struct alt_Vector_float_4_VectorLayout_float_4* _instance, unsigned long long key)
{
    return (float*)&static_cast<alt::VectorLayout<float, 4> *>((alt::Vector<float, 4, alt::VectorLayout<float, 4> > *)_instance)->operator[]((std::size_t)key);
}

CAPI struct alt_Vector_float_4_VectorLayout_float_4* alt_Vector_float_4_VectorLayout_float_4_Create_3(struct alt_VectorLayout_float_4* _p0)
{
    return (struct alt_Vector_float_4_VectorLayout_float_4*)new alt::VectorLayout<float, 4>(*(const alt::VectorLayout<float, 4> *)_p0);
}

CAPI struct alt_Vector_float_4_VectorLayout_float_4* alt_Vector_float_4_VectorLayout_float_4_Create_4(struct alt_VectorLayout_float_4* _p0)
{
    return (struct alt_Vector_float_4_VectorLayout_float_4*)new alt::VectorLayout<float, 4>(*(alt::VectorLayout<float, 4> *)_p0);
}

CAPI void alt_Vector_float_4_VectorLayout_float_4_Assign_constVectorLayout_float_4Ref(struct alt_Vector_float_4_VectorLayout_float_4* _instance, struct alt_VectorLayout_float_4* _p0)
{
    static_cast<alt::VectorLayout<float, 4> *>((alt::Vector<float, 4, alt::VectorLayout<float, 4> > *)_instance)->operator=(*(const alt::VectorLayout<float, 4> *)_p0);
}

CAPI void alt_Vector_float_4_VectorLayout_float_4_Assign_VectorLayout_float_4RefRef(struct alt_Vector_float_4_VectorLayout_float_4* _instance, struct alt_VectorLayout_float_4* _p0)
{
    static_cast<alt::VectorLayout<float, 4> *>((alt::Vector<float, 4, alt::VectorLayout<float, 4> > *)_instance)->operator=(*(alt::VectorLayout<float, 4> *)_p0);
}

CAPI struct alt_Vector_float_4_VectorLayout_float_4* alt_Vector_float_4_VectorLayout_float_4_Create_5()
{
    return (struct alt_Vector_float_4_VectorLayout_float_4*)new alt::Vector<float, 4, alt::VectorLayout<float, 4> >();
}

CAPI struct alt_Vector_float_4_VectorLayout_float_4* alt_Vector_float_4_VectorLayout_float_4_Create_6(float* _elements)
{
    return (struct alt_Vector_float_4_VectorLayout_float_4*)new alt::Vector<float, 4, alt::VectorLayout<float, 4> >(*(const float (*)[4])_elements);
}

CAPI struct alt_Vector_float_4_VectorLayout_float_4* alt_Vector_float_4_VectorLayout_float_4_Create_7(struct alt_VectorLayout_float_4* layout)
{
    return (struct alt_Vector_float_4_VectorLayout_float_4*)new alt::Vector<float, 4, alt::VectorLayout<float, 4> >(*(const alt::Vector<float, 4, alt::VectorLayout<float, 4> >::Layout *)layout);
}

CAPI float alt_Vector_float_4_VectorLayout_float_4_LengthSqr(struct alt_Vector_float_4_VectorLayout_float_4* _instance)
{
    return (float)((alt::Vector<float, 4, alt::VectorLayout<float, 4> > *)_instance)->LengthSqr();
}

CAPI float alt_Vector_float_4_VectorLayout_float_4_Length(struct alt_Vector_float_4_VectorLayout_float_4* _instance)
{
    return (float)((alt::Vector<float, 4, alt::VectorLayout<float, 4> > *)_instance)->Length();
}

CAPI struct alt_Vector_float_4_VectorLayout_float_4* alt_Vector_float_4_VectorLayout_float_4_Create_8(struct alt_Vector_float_4_VectorLayout_float_4* _p0)
{
    return (struct alt_Vector_float_4_VectorLayout_float_4*)new alt::Vector<float, 4, alt::VectorLayout<float, 4> >(*(const alt::Vector<float, 4, alt::VectorLayout<float, 4> > *)_p0);
}

CAPI struct alt_Vector_float_4_VectorLayout_float_4* alt_Vector_float_4_VectorLayout_float_4_Create_9(struct alt_Vector_float_4_VectorLayout_float_4* _p0)
{
    return (struct alt_Vector_float_4_VectorLayout_float_4*)new alt::Vector<float, 4, alt::VectorLayout<float, 4> >(*(alt::Vector<float, 4, alt::VectorLayout<float, 4> > *)_p0);
}

CAPI void alt_Vector_float_4_VectorLayout_float_4_Assign_constVector_float_4_VectorLayout_float_4Ref(struct alt_Vector_float_4_VectorLayout_float_4* _instance, struct alt_Vector_float_4_VectorLayout_float_4* _p0)
{
    ((alt::Vector<float, 4, alt::VectorLayout<float, 4> > *)_instance)->operator=(*(const alt::Vector<float, 4, alt::VectorLayout<float, 4> > *)_p0);
}

CAPI void alt_Vector_float_4_VectorLayout_float_4_Assign_Vector_float_4_VectorLayout_float_4RefRef(struct alt_Vector_float_4_VectorLayout_float_4* _instance, struct alt_Vector_float_4_VectorLayout_float_4* _p0)
{
    ((alt::Vector<float, 4, alt::VectorLayout<float, 4> > *)_instance)->operator=(*(alt::Vector<float, 4, alt::VectorLayout<float, 4> > *)_p0);
}

CAPI void alt_Vector_float_3_PointLayout_free(struct alt_Vector_float_3_PointLayout* ptr)
{
    delete (class alt::Vector<float, 3, class alt::PointLayout> *)ptr;
}

CAPI struct alt_Vector_float_3_PointLayout* alt_PointLayout_to_alt_Vector_float_3_PointLayout(struct alt_PointLayout* from)
{
    return (alt_Vector_float_3_PointLayout*)static_cast<alt::Vector<float, 3, alt::PointLayout>*>((alt::PointLayout*)from);
}

CAPI struct alt_PointLayout* alt_Vector_float_3_PointLayout_to_alt_PointLayout(struct alt_Vector_float_3_PointLayout* from)
{
    return (alt_PointLayout*)static_cast<alt::PointLayout*>((alt::Vector<float, 3, alt::PointLayout>*)from);
}

CAPI struct alt_Vector_float_3_PointLayout* alt_Vector_float_3_PointLayout_Create()
{
    return (struct alt_Vector_float_3_PointLayout*)new alt::PointLayout();
}

CAPI struct alt_Vector_float_3_PointLayout* alt_Vector_float_3_PointLayout_Create_1(float _x, float _y, float _z)
{
    return (struct alt_Vector_float_3_PointLayout*)new alt::PointLayout((float)_x, (float)_y, (float)_z);
}

CAPI struct alt_Vector_float_3_PointLayout* alt_Vector_float_3_PointLayout_Create_2(float* elements)
{
    return (struct alt_Vector_float_3_PointLayout*)new alt::PointLayout(*(const float (*)[3])elements);
}

CAPI float* alt_Vector_float_3_PointLayout_Access_size_t(struct alt_Vector_float_3_PointLayout* _instance, unsigned long long key)
{
    return (float*)&static_cast<alt::PointLayout *>((alt::Vector<float, 3, alt::PointLayout> *)_instance)->operator[]((std::size_t)key);
}

CAPI float* alt_Vector_float_3_PointLayout_Access_size_t_1(struct alt_Vector_float_3_PointLayout* _instance, unsigned long long key)
{
    return (float*)&static_cast<alt::PointLayout *>((alt::Vector<float, 3, alt::PointLayout> *)_instance)->operator[]((std::size_t)key);
}

CAPI struct alt_Vector_float_3_PointLayout* alt_Vector_float_3_PointLayout_Create_3(struct alt_PointLayout* _p0)
{
    return (struct alt_Vector_float_3_PointLayout*)new alt::PointLayout(*(const alt::PointLayout *)_p0);
}

CAPI struct alt_Vector_float_3_PointLayout* alt_Vector_float_3_PointLayout_Create_4(struct alt_PointLayout* _p0)
{
    return (struct alt_Vector_float_3_PointLayout*)new alt::PointLayout(*(alt::PointLayout *)_p0);
}

CAPI void alt_Vector_float_3_PointLayout_Assign_constPointLayoutRef(struct alt_Vector_float_3_PointLayout* _instance, struct alt_PointLayout* _p0)
{
    static_cast<alt::PointLayout *>((alt::Vector<float, 3, alt::PointLayout> *)_instance)->operator=(*(const alt::PointLayout *)_p0);
}

CAPI void alt_Vector_float_3_PointLayout_Assign_PointLayoutRefRef(struct alt_Vector_float_3_PointLayout* _instance, struct alt_PointLayout* _p0)
{
    static_cast<alt::PointLayout *>((alt::Vector<float, 3, alt::PointLayout> *)_instance)->operator=(*(alt::PointLayout *)_p0);
}

CAPI struct alt_Vector_float_3_PointLayout* alt_Vector_float_3_PointLayout_Create_5()
{
    return (struct alt_Vector_float_3_PointLayout*)new alt::Vector<float, 3, alt::PointLayout>();
}

CAPI struct alt_Vector_float_3_PointLayout* alt_Vector_float_3_PointLayout_Create_6(float* _elements)
{
    return (struct alt_Vector_float_3_PointLayout*)new alt::Vector<float, 3, alt::PointLayout>(*(const float (*)[3])_elements);
}

CAPI struct alt_Vector_float_3_PointLayout* alt_Vector_float_3_PointLayout_Create_7(struct alt_PointLayout* layout)
{
    return (struct alt_Vector_float_3_PointLayout*)new alt::Vector<float, 3, alt::PointLayout>(*(const alt::Vector<float, 3, alt::PointLayout>::Layout *)layout);
}

CAPI float alt_Vector_float_3_PointLayout_LengthSqr(struct alt_Vector_float_3_PointLayout* _instance)
{
    return (float)((alt::Vector<float, 3, alt::PointLayout> *)_instance)->LengthSqr();
}

CAPI float alt_Vector_float_3_PointLayout_Length(struct alt_Vector_float_3_PointLayout* _instance)
{
    return (float)((alt::Vector<float, 3, alt::PointLayout> *)_instance)->Length();
}

CAPI struct alt_Vector_float_3_PointLayout* alt_Vector_float_3_PointLayout_Create_8(struct alt_Vector_float_3_PointLayout* _p0)
{
    return (struct alt_Vector_float_3_PointLayout*)new alt::Vector<float, 3, alt::PointLayout>(*(const alt::Vector<float, 3, alt::PointLayout> *)_p0);
}

CAPI struct alt_Vector_float_3_PointLayout* alt_Vector_float_3_PointLayout_Create_9(struct alt_Vector_float_3_PointLayout* _p0)
{
    return (struct alt_Vector_float_3_PointLayout*)new alt::Vector<float, 3, alt::PointLayout>(*(alt::Vector<float, 3, alt::PointLayout> *)_p0);
}

CAPI void alt_Vector_float_3_PointLayout_Assign_constVector_float_3_PointLayoutRef(struct alt_Vector_float_3_PointLayout* _instance, struct alt_Vector_float_3_PointLayout* _p0)
{
    ((alt::Vector<float, 3, alt::PointLayout> *)_instance)->operator=(*(const alt::Vector<float, 3, alt::PointLayout> *)_p0);
}

CAPI void alt_Vector_float_3_PointLayout_Assign_Vector_float_3_PointLayoutRefRef(struct alt_Vector_float_3_PointLayout* _instance, struct alt_Vector_float_3_PointLayout* _p0)
{
    ((alt::Vector<float, 3, alt::PointLayout> *)_instance)->operator=(*(alt::Vector<float, 3, alt::PointLayout> *)_p0);
}

CAPI void alt_PointLayout_free(struct alt_PointLayout* ptr)
{
    delete (class alt::PointLayout *)ptr;
}

CAPI struct alt_PointLayout* alt_PointLayout_Create()
{
    return (struct alt_PointLayout*)new alt::PointLayout();
}

CAPI struct alt_PointLayout* alt_PointLayout_Create_1(float _x, float _y, float _z)
{
    return (struct alt_PointLayout*)new alt::PointLayout((float)_x, (float)_y, (float)_z);
}

CAPI struct alt_PointLayout* alt_PointLayout_Create_2(float* elements)
{
    return (struct alt_PointLayout*)new alt::PointLayout(*(const float (*)[3])elements);
}

CAPI float* alt_PointLayout_Access_size_t(struct alt_PointLayout* _instance, unsigned long long key)
{
    return (float*)&((alt::PointLayout *)_instance)->operator[]((std::size_t)key);
}

CAPI float* alt_PointLayout_Access_size_t_1(struct alt_PointLayout* _instance, unsigned long long key)
{
    return (float*)&((alt::PointLayout *)_instance)->operator[]((std::size_t)key);
}

CAPI struct alt_PointLayout* alt_PointLayout_Create_3(struct alt_PointLayout* _p0)
{
    return (struct alt_PointLayout*)new alt::PointLayout(*(const alt::PointLayout *)_p0);
}

CAPI struct alt_PointLayout* alt_PointLayout_Create_4(struct alt_PointLayout* _p0)
{
    return (struct alt_PointLayout*)new alt::PointLayout(*(alt::PointLayout *)_p0);
}

CAPI void alt_PointLayout_Assign_constPointLayoutRef(struct alt_PointLayout* _instance, struct alt_PointLayout* _p0)
{
    ((alt::PointLayout *)_instance)->operator=(*(const alt::PointLayout *)_p0);
}

CAPI void alt_PointLayout_Assign_PointLayoutRefRef(struct alt_PointLayout* _instance, struct alt_PointLayout* _p0)
{
    ((alt::PointLayout *)_instance)->operator=(*(alt::PointLayout *)_p0);
}

CAPI void alt_PointPaddedLayout_free(struct alt_PointPaddedLayout* ptr)
{
    delete (class alt::PointPaddedLayout *)ptr;
}

CAPI struct alt_PointPaddedLayout* alt_PointLayout_to_alt_PointPaddedLayout(struct alt_PointLayout* from)
{
    return (alt_PointPaddedLayout*)static_cast<alt::PointPaddedLayout*>((alt::PointLayout*)from);
}

CAPI struct alt_PointLayout* alt_PointPaddedLayout_to_alt_PointLayout(struct alt_PointPaddedLayout* from)
{
    return (alt_PointLayout*)static_cast<alt::PointLayout*>((alt::PointPaddedLayout*)from);
}

CAPI struct alt_PointPaddedLayout* alt_PointPaddedLayout_Create()
{
    return (struct alt_PointPaddedLayout*)new alt::PointLayout();
}

CAPI struct alt_PointPaddedLayout* alt_PointPaddedLayout_Create_1(float _x, float _y, float _z)
{
    return (struct alt_PointPaddedLayout*)new alt::PointLayout((float)_x, (float)_y, (float)_z);
}

CAPI struct alt_PointPaddedLayout* alt_PointPaddedLayout_Create_2(float* elements)
{
    return (struct alt_PointPaddedLayout*)new alt::PointLayout(*(const float (*)[3])elements);
}

CAPI float* alt_PointPaddedLayout_Access_size_t(struct alt_PointPaddedLayout* _instance, unsigned long long key)
{
    return (float*)&static_cast<alt::PointLayout *>((alt::PointPaddedLayout *)_instance)->operator[]((std::size_t)key);
}

CAPI float* alt_PointPaddedLayout_Access_size_t_1(struct alt_PointPaddedLayout* _instance, unsigned long long key)
{
    return (float*)&static_cast<alt::PointLayout *>((alt::PointPaddedLayout *)_instance)->operator[]((std::size_t)key);
}

CAPI struct alt_PointPaddedLayout* alt_PointPaddedLayout_Create_3(struct alt_PointLayout* _p0)
{
    return (struct alt_PointPaddedLayout*)new alt::PointLayout(*(const alt::PointLayout *)_p0);
}

CAPI struct alt_PointPaddedLayout* alt_PointPaddedLayout_Create_4(struct alt_PointLayout* _p0)
{
    return (struct alt_PointPaddedLayout*)new alt::PointLayout(*(alt::PointLayout *)_p0);
}

CAPI void alt_PointPaddedLayout_Assign_constPointLayoutRef(struct alt_PointPaddedLayout* _instance, struct alt_PointLayout* _p0)
{
    static_cast<alt::PointLayout *>((alt::PointPaddedLayout *)_instance)->operator=(*(const alt::PointLayout *)_p0);
}

CAPI void alt_PointPaddedLayout_Assign_PointLayoutRefRef(struct alt_PointPaddedLayout* _instance, struct alt_PointLayout* _p0)
{
    static_cast<alt::PointLayout *>((alt::PointPaddedLayout *)_instance)->operator=(*(alt::PointLayout *)_p0);
}

CAPI struct alt_PointPaddedLayout* alt_PointPaddedLayout_Create_5()
{
    return (struct alt_PointPaddedLayout*)new alt::PointPaddedLayout();
}

CAPI struct alt_PointPaddedLayout* alt_PointPaddedLayout_Create_6(float x, float y, float z)
{
    return (struct alt_PointPaddedLayout*)new alt::PointPaddedLayout((float)x, (float)y, (float)z);
}

CAPI struct alt_PointPaddedLayout* alt_PointPaddedLayout_Create_7(float* elements)
{
    return (struct alt_PointPaddedLayout*)new alt::PointPaddedLayout(*(const float (*)[3])elements);
}

CAPI void alt_RotationLayout_free(struct alt_RotationLayout* ptr)
{
    delete (class alt::RotationLayout *)ptr;
}

CAPI struct alt_RotationLayout* alt_RotationLayout_Create(float _roll, float _pitch, float _yaw)
{
    return (struct alt_RotationLayout*)new alt::RotationLayout((float)_roll, (float)_pitch, (float)_yaw);
}

CAPI struct alt_RotationLayout* alt_RotationLayout_Create_1()
{
    return (struct alt_RotationLayout*)new alt::RotationLayout();
}

CAPI struct alt_RotationLayout* alt_RotationLayout_Create_2(float* elements)
{
    return (struct alt_RotationLayout*)new alt::RotationLayout(*(const float (*)[3])elements);
}

CAPI float* alt_RotationLayout_Access_size_t(struct alt_RotationLayout* _instance, unsigned long long key)
{
    return (float*)&((alt::RotationLayout *)_instance)->operator[]((std::size_t)key);
}

CAPI float* alt_RotationLayout_Access_size_t_1(struct alt_RotationLayout* _instance, unsigned long long key)
{
    return (float*)&((alt::RotationLayout *)_instance)->operator[]((std::size_t)key);
}

CAPI void alt_RotationLayout_Normalize(struct alt_RotationLayout* _instance)
{
    ((alt::RotationLayout *)_instance)->Normalize();
}

CAPI struct alt_RotationLayout* alt_RotationLayout_Create_3(struct alt_RotationLayout* _p0)
{
    return (struct alt_RotationLayout*)new alt::RotationLayout(*(const alt::RotationLayout *)_p0);
}

CAPI struct alt_RotationLayout* alt_RotationLayout_Create_4(struct alt_RotationLayout* _p0)
{
    return (struct alt_RotationLayout*)new alt::RotationLayout(*(alt::RotationLayout *)_p0);
}

CAPI void alt_RotationPaddedLayout_free(struct alt_RotationPaddedLayout* ptr)
{
    delete (class alt::RotationPaddedLayout *)ptr;
}

CAPI struct alt_RotationPaddedLayout* alt_RotationLayout_to_alt_RotationPaddedLayout(struct alt_RotationLayout* from)
{
    return (alt_RotationPaddedLayout*)static_cast<alt::RotationPaddedLayout*>((alt::RotationLayout*)from);
}

CAPI struct alt_RotationLayout* alt_RotationPaddedLayout_to_alt_RotationLayout(struct alt_RotationPaddedLayout* from)
{
    return (alt_RotationLayout*)static_cast<alt::RotationLayout*>((alt::RotationPaddedLayout*)from);
}

CAPI struct alt_RotationPaddedLayout* alt_RotationPaddedLayout_Create(float _roll, float _pitch, float _yaw)
{
    return (struct alt_RotationPaddedLayout*)new alt::RotationLayout((float)_roll, (float)_pitch, (float)_yaw);
}

CAPI struct alt_RotationPaddedLayout* alt_RotationPaddedLayout_Create_1()
{
    return (struct alt_RotationPaddedLayout*)new alt::RotationLayout();
}

CAPI struct alt_RotationPaddedLayout* alt_RotationPaddedLayout_Create_2(float* elements)
{
    return (struct alt_RotationPaddedLayout*)new alt::RotationLayout(*(const float (*)[3])elements);
}

CAPI float* alt_RotationPaddedLayout_Access_size_t(struct alt_RotationPaddedLayout* _instance, unsigned long long key)
{
    return (float*)&static_cast<alt::RotationLayout *>((alt::RotationPaddedLayout *)_instance)->operator[]((std::size_t)key);
}

CAPI float* alt_RotationPaddedLayout_Access_size_t_1(struct alt_RotationPaddedLayout* _instance, unsigned long long key)
{
    return (float*)&static_cast<alt::RotationLayout *>((alt::RotationPaddedLayout *)_instance)->operator[]((std::size_t)key);
}

CAPI void alt_RotationPaddedLayout_Normalize(struct alt_RotationPaddedLayout* _instance)
{
    static_cast<alt::RotationLayout *>((alt::RotationPaddedLayout *)_instance)->Normalize();
}

CAPI struct alt_RotationPaddedLayout* alt_RotationPaddedLayout_Create_3(struct alt_RotationLayout* _p0)
{
    return (struct alt_RotationPaddedLayout*)new alt::RotationLayout(*(const alt::RotationLayout *)_p0);
}

CAPI struct alt_RotationPaddedLayout* alt_RotationPaddedLayout_Create_4(struct alt_RotationLayout* _p0)
{
    return (struct alt_RotationPaddedLayout*)new alt::RotationLayout(*(alt::RotationLayout *)_p0);
}

CAPI struct alt_RotationPaddedLayout* alt_RotationPaddedLayout_Create_5()
{
    return (struct alt_RotationPaddedLayout*)new alt::RotationPaddedLayout();
}

CAPI struct alt_RotationPaddedLayout* alt_RotationPaddedLayout_Create_6(float roll, float pitch, float yaw)
{
    return (struct alt_RotationPaddedLayout*)new alt::RotationPaddedLayout((float)roll, (float)pitch, (float)yaw);
}

CAPI struct alt_RotationPaddedLayout* alt_RotationPaddedLayout_Create_7(float* elements)
{
    return (struct alt_RotationPaddedLayout*)new alt::RotationPaddedLayout(*(const float (*)[3])elements);
}

CAPI void alt_ViewMatrixLayout_free(struct alt_ViewMatrixLayout* ptr)
{
    delete (class alt::ViewMatrixLayout *)ptr;
}

CAPI struct alt_ViewMatrixLayout* alt_ViewMatrixLayout_Create()
{
    return (struct alt_ViewMatrixLayout*)new alt::ViewMatrixLayout();
}

CAPI struct alt_ViewMatrixLayout* alt_ViewMatrixLayout_Create_1(struct alt_Vector_float_4_VectorLayout_float_4* _rows)
{
    return (struct alt_ViewMatrixLayout*)new alt::ViewMatrixLayout(*(const alt::ViewMatrixLayout::Row (*)[4])_rows);
}

CAPI struct alt_ViewMatrixLayout* alt_ViewMatrixLayout_Create_2(struct alt_Vector_float_4_VectorLayout_float_4* row)
{
    return (struct alt_ViewMatrixLayout*)new alt::ViewMatrixLayout(*(const alt::ViewMatrixLayout::Row *)row);
}

CAPI struct alt_ViewMatrixLayout* alt_ViewMatrixLayout_Create_3(float* elements)
{
    return (struct alt_ViewMatrixLayout*)new alt::ViewMatrixLayout(*(const alt::ViewMatrixLayout::Element (*)[16])elements);
}

CAPI struct alt_ViewMatrixLayout* alt_ViewMatrixLayout_Create_4(struct alt_Vector_float_4_VectorLayout_float_4* _right, struct alt_Vector_float_4_VectorLayout_float_4* _up, struct alt_Vector_float_4_VectorLayout_float_4* _forward, struct alt_Vector_float_4_VectorLayout_float_4* _pos)
{
    return (struct alt_ViewMatrixLayout*)new alt::ViewMatrixLayout(*(const alt::Vector4f *)_right, *(const alt::Vector4f *)_up, *(const alt::Vector4f *)_forward, *(const alt::Vector4f *)_pos);
}

CAPI struct alt_Vector_float_4_VectorLayout_float_4* alt_ViewMatrixLayout_Access_size_t(struct alt_ViewMatrixLayout* _instance, unsigned long long key)
{
    return (alt_Vector_float_4_VectorLayout_float_4*)&((alt::ViewMatrixLayout *)_instance)->operator[]((std::size_t)key);
}

CAPI struct alt_Vector_float_4_VectorLayout_float_4* alt_ViewMatrixLayout_Access_size_t_1(struct alt_ViewMatrixLayout* _instance, unsigned long long key)
{
    return (alt_Vector_float_4_VectorLayout_float_4*)&((alt::ViewMatrixLayout *)_instance)->operator[]((std::size_t)key);
}

CAPI void alt_String_free(struct alt_String* ptr)
{
    delete (class alt::String *)ptr;
}

CAPI struct alt_String* alt_String_Create(unsigned long long _size, char fill)
{
    return (struct alt_String*)new alt::String((alt::Size)_size, (char)fill);
}

CAPI struct alt_String* alt_String_Create_1(char* _data, unsigned long long size)
{
    return (struct alt_String*)new alt::String((const char *)_data, (alt::Size)size);
}

CAPI struct alt_String* alt_String_Create_2()
{
    return (struct alt_String*)new alt::String();
}

CAPI struct alt_String* alt_String_Create_3(char* _str)
{
    return (struct alt_String*)new alt::String((const char *)_str);
}

CAPI struct alt_String* alt_String_Create_5(struct alt_String* that)
{
    return (struct alt_String*)new alt::String(*(const alt::String *)that);
}

CAPI struct alt_String* alt_String_Create_6(struct alt_String* that)
{
    return (struct alt_String*)new alt::String(*(alt::String *)that);
}

CAPI char* alt_String_Access_uint64_t(struct alt_String* _instance, unsigned long long key)
{
    return (char*)&((alt::String *)_instance)->operator[]((alt::Size)key);
}

CAPI char alt_String_Access_uint64_t_1(struct alt_String* _instance, unsigned long long key)
{
    return (char)((alt::String *)_instance)->operator[]((alt::Size)key);
}

CAPI void alt_String_Assign_constStringRef(struct alt_String* _instance, struct alt_String* that)
{
    ((alt::String *)_instance)->operator=(*(const alt::String *)that);
}

CAPI void alt_String_Assign_StringRefRef(struct alt_String* _instance, struct alt_String* that)
{
    ((alt::String *)_instance)->operator=(*(alt::String *)that);
}

CAPI void alt_String_Resize(struct alt_String* _instance, unsigned long long new_size)
{
    ((alt::String *)_instance)->Resize((alt::Size)new_size);
}

CAPI _Bool alt_String_IsEmpty(struct alt_String* _instance)
{
    return (_Bool)((alt::String *)_instance)->IsEmpty();
}

CAPI char* alt_String_GetData(struct alt_String* _instance)
{
    return (char*)((alt::String *)_instance)->GetData();
}

CAPI char* alt_String_GetData_1(struct alt_String* _instance)
{
    return (char*)((alt::String *)_instance)->GetData();
}

CAPI unsigned long long alt_String_GetSize(struct alt_String* _instance)
{
    return (unsigned long long)((alt::String *)_instance)->GetSize();
}

CAPI _Bool alt_String_Equals_String(struct alt_String* _instance, struct alt_String* that)
{
    return (_Bool)((alt::String *)_instance)->operator==(*(alt::String*)that);
}

CAPI _Bool alt_String_NotEquals_String(struct alt_String* _instance, struct alt_String* that)
{
    return (_Bool)((alt::String *)_instance)->operator!=(*(alt::String*)that);
}

CAPI char* alt_String_CStr(struct alt_String* _instance)
{
    return (char*)((alt::String *)_instance)->CStr();
}

CAPI void alt_StringView_free(struct alt_StringView* ptr)
{
    delete (class alt::StringView *)ptr;
}

CAPI struct alt_StringView* alt_StringView_Create(char* _data, unsigned long long _size)
{
    return (struct alt_StringView*)new alt::StringView((const char *)_data, (alt::Size)_size);
}

CAPI struct alt_StringView* alt_StringView_Create_1()
{
    return (struct alt_StringView*)new alt::StringView();
}

CAPI struct alt_StringView* alt_StringView_Create_2(char* _str)
{
    return (struct alt_StringView*)new alt::StringView((const char *)_str);
}

CAPI struct alt_StringView* alt_StringView_Create_4(struct alt_String* _str)
{
    return (struct alt_StringView*)new alt::StringView(*(const alt::String *)_str);
}

CAPI _Bool alt_StringView_IsEmpty(struct alt_StringView* _instance)
{
    return (_Bool)((alt::StringView *)_instance)->IsEmpty();
}

CAPI char* alt_StringView_GetData(struct alt_StringView* _instance)
{
    return (char*)((alt::StringView *)_instance)->GetData();
}

CAPI unsigned long long alt_StringView_GetSize(struct alt_StringView* _instance)
{
    return (unsigned long long)((alt::StringView *)_instance)->GetSize();
}

CAPI char alt_StringView_Access_uint64_t(struct alt_StringView* _instance, unsigned long long key)
{
    return (char)((alt::StringView *)_instance)->operator[]((alt::Size)key);
}

CAPI _Bool alt_StringView_Equals_StringView(struct alt_StringView* _instance, struct alt_StringView* that)
{
    return (_Bool)((alt::StringView *)_instance)->operator==(*(alt::StringView*)that);
}

CAPI _Bool alt_StringView_NotEquals_StringView(struct alt_StringView* _instance, struct alt_StringView* that)
{
    return (_Bool)((alt::StringView *)_instance)->operator!=(*(alt::StringView*)that);
}

CAPI struct alt_String* alt_StringView_To_String(struct alt_StringView* _instance)
{
    return (alt_String*)new class alt::String(((alt::StringView *)_instance)->operator String());
}

CAPI char* alt_StringView_CStr(struct alt_StringView* _instance)
{
    return (char*)((alt::StringView *)_instance)->CStr();
}

CAPI struct alt_StringView* alt_StringView_Create_6(struct alt_StringView* _p0)
{
    return (struct alt_StringView*)new alt::StringView(*(const alt::StringView *)_p0);
}

CAPI struct alt_StringView* alt_StringView_Create_7(struct alt_StringView* _p0)
{
    return (struct alt_StringView*)new alt::StringView(*(alt::StringView *)_p0);
}

CAPI void alt_StringView_Assign_constStringViewRef(struct alt_StringView* _instance, struct alt_StringView* _p0)
{
    ((alt::StringView *)_instance)->operator=(*(const alt::StringView *)_p0);
}

CAPI void alt_StringView_Assign_StringViewRefRef(struct alt_StringView* _instance, struct alt_StringView* _p0)
{
    ((alt::StringView *)_instance)->operator=(*(alt::StringView *)_p0);
}

CAPI void alt_RGBA_free(struct alt_RGBA* ptr)
{
    delete (struct alt::RGBA *)ptr;
}

CAPI struct alt_RGBA* alt_RGBA_Create()
{
    return (struct alt_RGBA*)new alt::RGBA();
}

CAPI struct alt_RGBA* alt_RGBA_Create_1(unsigned char _r, unsigned char _g, unsigned char _b, unsigned char _a)
{
    return (struct alt_RGBA*)new alt::RGBA((uint8_t)_r, (uint8_t)_g, (uint8_t)_b, (uint8_t)_a);
}

CAPI void alt_Array_RefBase_RefStore_constIMValue_free(struct alt_Array_RefBase_RefStore_constIMValue* ptr)
{
    delete (class alt::Array<class alt::RefBase<class alt::RefStore<const class alt::IMValue> > > *)ptr;
}

CAPI struct alt_Array_RefBase_RefStore_constIMValue* alt_Array_RefBase_RefStore_constIMValue_Create()
{
    return (struct alt_Array_RefBase_RefStore_constIMValue*)new alt::Array<alt::RefBase<alt::RefStore<const alt::IMValue> > >();
}

CAPI struct alt_Array_RefBase_RefStore_constIMValue* alt_Array_RefBase_RefStore_constIMValue_Create_1(struct alt_RefBase_RefStore_constIMValue* _data, unsigned long long _size)
{
    return (struct alt_Array_RefBase_RefStore_constIMValue*)new alt::Array<alt::RefBase<alt::RefStore<const alt::IMValue> > >((const alt::RefBase<alt::RefStore<const alt::IMValue> > *)_data, (alt::Size)_size);
}

CAPI struct alt_Array_RefBase_RefStore_constIMValue* alt_Array_RefBase_RefStore_constIMValue_Create_2(unsigned long long _size, struct alt_RefBase_RefStore_constIMValue* fill)
{
    return (struct alt_Array_RefBase_RefStore_constIMValue*)new alt::Array<alt::RefBase<alt::RefStore<const alt::IMValue> > >((alt::Size)_size, *(const alt::RefBase<alt::RefStore<const alt::IMValue> > *)fill);
}

CAPI struct alt_Array_RefBase_RefStore_constIMValue* alt_Array_RefBase_RefStore_constIMValue_Create_3(struct alt_Array_RefBase_RefStore_constIMValue* that)
{
    return (struct alt_Array_RefBase_RefStore_constIMValue*)new alt::Array<alt::RefBase<alt::RefStore<const alt::IMValue> > >(*(const alt::Array<alt::RefBase<alt::RefStore<const alt::IMValue> > > *)that);
}

CAPI struct alt_Array_RefBase_RefStore_constIMValue* alt_Array_RefBase_RefStore_constIMValue_Create_4(struct alt_Array_RefBase_RefStore_constIMValue* that)
{
    return (struct alt_Array_RefBase_RefStore_constIMValue*)new alt::Array<alt::RefBase<alt::RefStore<const alt::IMValue> > >(*(alt::Array<alt::RefBase<alt::RefStore<const alt::IMValue> > > *)that);
}

CAPI void alt_Array_RefBase_RefStore_constIMValue_Assign_constArray_RefBase_RefStore_constIMValueRef(struct alt_Array_RefBase_RefStore_constIMValue* _instance, struct alt_Array_RefBase_RefStore_constIMValue* that)
{
    ((alt::Array<alt::RefBase<alt::RefStore<const alt::IMValue> > > *)_instance)->operator=(*(const alt::Array<alt::RefBase<alt::RefStore<const alt::IMValue> > > *)that);
}

CAPI void alt_Array_RefBase_RefStore_constIMValue_Assign_Array_RefBase_RefStore_constIMValueRefRef(struct alt_Array_RefBase_RefStore_constIMValue* _instance, struct alt_Array_RefBase_RefStore_constIMValue* that)
{
    ((alt::Array<alt::RefBase<alt::RefStore<const alt::IMValue> > > *)_instance)->operator=(*(alt::Array<alt::RefBase<alt::RefStore<const alt::IMValue> > > *)that);
}

CAPI void alt_Array_RefBase_RefStore_constIMValue_Push(struct alt_Array_RefBase_RefStore_constIMValue* _instance, struct alt_RefBase_RefStore_constIMValue* el)
{
    ((alt::Array<alt::RefBase<alt::RefStore<const alt::IMValue> > > *)_instance)->Push(*(const alt::RefBase<alt::RefStore<const alt::IMValue> > *)el);
}

CAPI unsigned long long alt_Array_RefBase_RefStore_constIMValue_GetSize(struct alt_Array_RefBase_RefStore_constIMValue* _instance)
{
    return (unsigned long long)((alt::Array<alt::RefBase<alt::RefStore<const alt::IMValue> > > *)_instance)->GetSize();
}

CAPI unsigned long long alt_Array_RefBase_RefStore_constIMValue_GetCapacity(struct alt_Array_RefBase_RefStore_constIMValue* _instance)
{
    return (unsigned long long)((alt::Array<alt::RefBase<alt::RefStore<const alt::IMValue> > > *)_instance)->GetCapacity();
}

CAPI struct alt_RefBase_RefStore_constIMValue* alt_Array_RefBase_RefStore_constIMValue_Access_uint64_t(struct alt_Array_RefBase_RefStore_constIMValue* _instance, unsigned long long key)
{
    return (alt_RefBase_RefStore_constIMValue*)&((alt::Array<alt::RefBase<alt::RefStore<const alt::IMValue> > > *)_instance)->operator[]((alt::Size)key);
}

CAPI struct alt_RefBase_RefStore_constIMValue* alt_Array_RefBase_RefStore_constIMValue_Access_uint64_t_1(struct alt_Array_RefBase_RefStore_constIMValue* _instance, unsigned long long key)
{
    return (alt_RefBase_RefStore_constIMValue*)&((alt::Array<alt::RefBase<alt::RefStore<const alt::IMValue> > > *)_instance)->operator[]((alt::Size)key);
}

CAPI struct alt_RefBase_RefStore_constIMValue* alt_Array_RefBase_RefStore_constIMValue_begin(struct alt_Array_RefBase_RefStore_constIMValue* _instance)
{
    return (alt_RefBase_RefStore_constIMValue*)((alt::Array<alt::RefBase<alt::RefStore<const alt::IMValue> > > *)_instance)->begin();
}

CAPI struct alt_RefBase_RefStore_constIMValue* alt_Array_RefBase_RefStore_constIMValue_begin_1(struct alt_Array_RefBase_RefStore_constIMValue* _instance)
{
    return (alt_RefBase_RefStore_constIMValue*)((alt::Array<alt::RefBase<alt::RefStore<const alt::IMValue> > > *)_instance)->begin();
}

CAPI struct alt_RefBase_RefStore_constIMValue* alt_Array_RefBase_RefStore_constIMValue_end(struct alt_Array_RefBase_RefStore_constIMValue* _instance)
{
    return (alt_RefBase_RefStore_constIMValue*)((alt::Array<alt::RefBase<alt::RefStore<const alt::IMValue> > > *)_instance)->end();
}

CAPI struct alt_RefBase_RefStore_constIMValue* alt_Array_RefBase_RefStore_constIMValue_end_1(struct alt_Array_RefBase_RefStore_constIMValue* _instance)
{
    return (alt_RefBase_RefStore_constIMValue*)((alt::Array<alt::RefBase<alt::RefStore<const alt::IMValue> > > *)_instance)->end();
}

CAPI void alt_Array_StringView_free(struct alt_Array_StringView* ptr)
{
    delete (class alt::Array<class alt::StringView> *)ptr;
}

CAPI struct alt_Array_StringView* alt_Array_StringView_Create()
{
    return (struct alt_Array_StringView*)new alt::Array<alt::StringView>();
}

CAPI struct alt_Array_StringView* alt_Array_StringView_Create_1(struct alt_StringView* _data, unsigned long long _size)
{
    return (struct alt_Array_StringView*)new alt::Array<alt::StringView>((const alt::StringView *)_data, (alt::Size)_size);
}

CAPI struct alt_Array_StringView* alt_Array_StringView_Create_2(unsigned long long _size, struct alt_StringView* fill)
{
    return (struct alt_Array_StringView*)new alt::Array<alt::StringView>((alt::Size)_size, *(const alt::StringView *)fill);
}

CAPI struct alt_Array_StringView* alt_Array_StringView_Create_3(struct alt_Array_StringView* that)
{
    return (struct alt_Array_StringView*)new alt::Array<alt::StringView>(*(const alt::Array<alt::StringView> *)that);
}

CAPI struct alt_Array_StringView* alt_Array_StringView_Create_4(struct alt_Array_StringView* that)
{
    return (struct alt_Array_StringView*)new alt::Array<alt::StringView>(*(alt::Array<alt::StringView> *)that);
}

CAPI void alt_Array_StringView_Assign_constArray_StringViewRef(struct alt_Array_StringView* _instance, struct alt_Array_StringView* that)
{
    ((alt::Array<alt::StringView> *)_instance)->operator=(*(const alt::Array<alt::StringView> *)that);
}

CAPI void alt_Array_StringView_Assign_Array_StringViewRefRef(struct alt_Array_StringView* _instance, struct alt_Array_StringView* that)
{
    ((alt::Array<alt::StringView> *)_instance)->operator=(*(alt::Array<alt::StringView> *)that);
}

CAPI void alt_Array_StringView_Push(struct alt_Array_StringView* _instance, struct alt_StringView* el)
{
    ((alt::Array<alt::StringView> *)_instance)->Push(*(const alt::StringView *)el);
}

CAPI unsigned long long alt_Array_StringView_GetSize(struct alt_Array_StringView* _instance)
{
    return (unsigned long long)((alt::Array<alt::StringView> *)_instance)->GetSize();
}

CAPI unsigned long long alt_Array_StringView_GetCapacity(struct alt_Array_StringView* _instance)
{
    return (unsigned long long)((alt::Array<alt::StringView> *)_instance)->GetCapacity();
}

CAPI struct alt_StringView* alt_Array_StringView_Access_uint64_t(struct alt_Array_StringView* _instance, unsigned long long key)
{
    return (alt_StringView*)&((alt::Array<alt::StringView> *)_instance)->operator[]((alt::Size)key);
}

CAPI struct alt_StringView* alt_Array_StringView_Access_uint64_t_1(struct alt_Array_StringView* _instance, unsigned long long key)
{
    return (alt_StringView*)&((alt::Array<alt::StringView> *)_instance)->operator[]((alt::Size)key);
}

CAPI struct alt_StringView* alt_Array_StringView_begin(struct alt_Array_StringView* _instance)
{
    return (alt_StringView*)((alt::Array<alt::StringView> *)_instance)->begin();
}

CAPI struct alt_StringView* alt_Array_StringView_begin_1(struct alt_Array_StringView* _instance)
{
    return (alt_StringView*)((alt::Array<alt::StringView> *)_instance)->begin();
}

CAPI struct alt_StringView* alt_Array_StringView_end(struct alt_Array_StringView* _instance)
{
    return (alt_StringView*)((alt::Array<alt::StringView> *)_instance)->end();
}

CAPI struct alt_StringView* alt_Array_StringView_end_1(struct alt_Array_StringView* _instance)
{
    return (alt_StringView*)((alt::Array<alt::StringView> *)_instance)->end();
}

CAPI void alt_IWeakRef_free(struct alt_IWeakRef* ptr)
{
    delete (class alt::IWeakRef *)ptr;
}

CAPI void alt_IWeakRef_OnDestroy(struct alt_IWeakRef* _instance)
{
    ((alt::IWeakRef *)_instance)->OnDestroy();
}

CAPI void alt_IWeakRef_Assign_constIWeakRefRef(struct alt_IWeakRef* _instance, struct alt_IWeakRef* _p0)
{
    ((alt::IWeakRef *)_instance)->operator=(*(const alt::IWeakRef *)_p0);
}

CAPI void alt_IWeakRef_Assign_IWeakRefRefRef(struct alt_IWeakRef* _instance, struct alt_IWeakRef* _p0)
{
    ((alt::IWeakRef *)_instance)->operator=(*(alt::IWeakRef *)_p0);
}

CAPI unsigned long long alt_CRefCountable_GetRefCount(struct alt_CRefCountable* _instance)
{
    return (unsigned long long)((alt::CRefCountable *)_instance)->GetRefCount();
}

CAPI void alt_CRefCountable_AddRef(struct alt_CRefCountable* _instance)
{
    ((alt::CRefCountable *)_instance)->AddRef();
}

CAPI void alt_CRefCountable_RemoveRef(struct alt_CRefCountable* _instance)
{
    ((alt::CRefCountable *)_instance)->RemoveRef();
}

CAPI void alt_CRefCountable_AddWeakRef(struct alt_CRefCountable* _instance, struct alt_IWeakRef* ref)
{
    ((alt::CRefCountable *)_instance)->AddWeakRef((alt::IWeakRef *)ref);
}

CAPI void alt_CRefCountable_RemoveWeakRef(struct alt_CRefCountable* _instance, struct alt_IWeakRef* ref)
{
    ((alt::CRefCountable *)_instance)->RemoveWeakRef((alt::IWeakRef *)ref);
}

CAPI void alt_RefBase_RefStore_IMValue_free(struct alt_RefBase_RefStore_IMValue* ptr)
{
    delete (class alt::RefBase<class alt::RefStore<class alt::IMValue> > *)ptr;
}

CAPI struct alt_RefBase_RefStore_IMValue* alt_RefStore_IMValue_to_alt_RefBase_RefStore_IMValue(struct alt_RefStore_IMValue* from)
{
    return (alt_RefBase_RefStore_IMValue*)static_cast<alt::RefBase<alt::RefStore<alt::IMValue> >*>((alt::RefStore<alt::IMValue>*)from);
}

CAPI struct alt_RefStore_IMValue* alt_RefBase_RefStore_IMValue_to_alt_RefStore_IMValue(struct alt_RefBase_RefStore_IMValue* from)
{
    return (alt_RefStore_IMValue*)static_cast<alt::RefStore<alt::IMValue>*>((alt::RefBase<alt::RefStore<alt::IMValue> >*)from);
}

CAPI void alt_RefBase_RefStore_IMValue_Assign(struct alt_RefBase_RefStore_IMValue* _instance, struct alt_IMValue* _ptr)
{
    static_cast<alt::RefStore<alt::IMValue> *>((alt::RefBase<alt::RefStore<alt::IMValue> > *)_instance)->Assign((alt::IMValue *)_ptr);
}

CAPI void alt_RefBase_RefStore_IMValue_Free(struct alt_RefBase_RefStore_IMValue* _instance)
{
    static_cast<alt::RefStore<alt::IMValue> *>((alt::RefBase<alt::RefStore<alt::IMValue> > *)_instance)->Free();
}

CAPI struct alt_IMValue* alt_RefBase_RefStore_IMValue_Get(struct alt_RefBase_RefStore_IMValue* _instance)
{
    return (alt_IMValue*)static_cast<alt::RefStore<alt::IMValue> *>((alt::RefBase<alt::RefStore<alt::IMValue> > *)_instance)->Get();
}

CAPI struct alt_RefBase_RefStore_IMValue* alt_RefBase_RefStore_IMValue_Create()
{
    return (struct alt_RefBase_RefStore_IMValue*)new alt::RefStore<alt::IMValue>();
}

CAPI struct alt_RefBase_RefStore_IMValue* alt_RefBase_RefStore_IMValue_Create_1(struct alt_RefStore_IMValue* _p0)
{
    return (struct alt_RefBase_RefStore_IMValue*)new alt::RefStore<alt::IMValue>(*(const alt::RefStore<alt::IMValue> *)_p0);
}

CAPI struct alt_RefBase_RefStore_IMValue* alt_RefBase_RefStore_IMValue_Create_2(struct alt_RefStore_IMValue* _p0)
{
    return (struct alt_RefBase_RefStore_IMValue*)new alt::RefStore<alt::IMValue>(*(alt::RefStore<alt::IMValue> *)_p0);
}

CAPI struct alt_RefBase_RefStore_IMValue* alt_RefBase_RefStore_IMValue_Create_3()
{
    return (struct alt_RefBase_RefStore_IMValue*)new alt::RefBase<alt::RefStore<alt::IMValue> >();
}

CAPI struct alt_RefBase_RefStore_IMValue* alt_RefBase_RefStore_IMValue_Create_4(struct alt_IMValue* _ptr)
{
    return (struct alt_RefBase_RefStore_IMValue*)new alt::RefBase<alt::RefStore<alt::IMValue> >((alt::RefBase<alt::RefStore<alt::IMValue> >::ValueType *)_ptr);
}

CAPI struct alt_RefBase_RefStore_IMValue* alt_RefBase_RefStore_IMValue_Create_5(struct alt_RefBase_RefStore_IMValue* other)
{
    return (struct alt_RefBase_RefStore_IMValue*)new alt::RefBase<alt::RefStore<alt::IMValue> >(*(const alt::RefBase<alt::RefStore<alt::IMValue> > *)other);
}

CAPI struct alt_RefBase_RefStore_IMValue* alt_RefBase_RefStore_IMValue_Create_6(struct alt_RefBase_RefStore_IMValue* other)
{
    return (struct alt_RefBase_RefStore_IMValue*)new alt::RefBase<alt::RefStore<alt::IMValue> >(*(alt::RefBase<alt::RefStore<alt::IMValue> > *)other);
}

CAPI void alt_RefBase_RefStore_IMValue_Assign_constRefBase_RefStore_IMValueRef(struct alt_RefBase_RefStore_IMValue* _instance, struct alt_RefBase_RefStore_IMValue* that)
{
    ((alt::RefBase<alt::RefStore<alt::IMValue> > *)_instance)->operator=(*(const alt::RefBase<alt::RefStore<alt::IMValue> > *)that);
}

CAPI _Bool alt_RefBase_RefStore_IMValue_IsEmpty(struct alt_RefBase_RefStore_IMValue* _instance)
{
    return (_Bool)((alt::RefBase<alt::RefStore<alt::IMValue> > *)_instance)->IsEmpty();
}

CAPI _Bool alt_RefBase_RefStore_IMValue_To__Bool(struct alt_RefBase_RefStore_IMValue* _instance)
{
    return (_Bool)((alt::RefBase<alt::RefStore<alt::IMValue> > *)_instance)->operator bool();
}

CAPI void alt_RefBase_RefStore_constIMValue_free(struct alt_RefBase_RefStore_constIMValue* ptr)
{
    delete (class alt::RefBase<class alt::RefStore<const class alt::IMValue> > *)ptr;
}

CAPI struct alt_RefBase_RefStore_constIMValue* alt_RefStore_constIMValue_to_alt_RefBase_RefStore_constIMValue(struct alt_RefStore_constIMValue* from)
{
    return (alt_RefBase_RefStore_constIMValue*)static_cast<alt::RefBase<alt::RefStore<const alt::IMValue> >*>((alt::RefStore<const alt::IMValue>*)from);
}

CAPI struct alt_RefStore_constIMValue* alt_RefBase_RefStore_constIMValue_to_alt_RefStore_constIMValue(struct alt_RefBase_RefStore_constIMValue* from)
{
    return (alt_RefStore_constIMValue*)static_cast<alt::RefStore<const alt::IMValue>*>((alt::RefBase<alt::RefStore<const alt::IMValue> >*)from);
}

CAPI void alt_RefBase_RefStore_constIMValue_Assign(struct alt_RefBase_RefStore_constIMValue* _instance, struct alt_IMValue* _ptr)
{
    static_cast<alt::RefStore<const alt::IMValue> *>((alt::RefBase<alt::RefStore<const alt::IMValue> > *)_instance)->Assign((const alt::IMValue *)_ptr);
}

CAPI void alt_RefBase_RefStore_constIMValue_Free(struct alt_RefBase_RefStore_constIMValue* _instance)
{
    static_cast<alt::RefStore<const alt::IMValue> *>((alt::RefBase<alt::RefStore<const alt::IMValue> > *)_instance)->Free();
}

CAPI struct alt_IMValue* alt_RefBase_RefStore_constIMValue_Get(struct alt_RefBase_RefStore_constIMValue* _instance)
{
    return (alt_IMValue*)static_cast<alt::RefStore<const alt::IMValue> *>((alt::RefBase<alt::RefStore<const alt::IMValue> > *)_instance)->Get();
}

CAPI struct alt_RefBase_RefStore_constIMValue* alt_RefBase_RefStore_constIMValue_Create()
{
    return (struct alt_RefBase_RefStore_constIMValue*)new alt::RefStore<const alt::IMValue>();
}

CAPI struct alt_RefBase_RefStore_constIMValue* alt_RefBase_RefStore_constIMValue_Create_1(struct alt_RefStore_constIMValue* _p0)
{
    return (struct alt_RefBase_RefStore_constIMValue*)new alt::RefStore<const alt::IMValue>(*(const alt::RefStore<const alt::IMValue> *)_p0);
}

CAPI struct alt_RefBase_RefStore_constIMValue* alt_RefBase_RefStore_constIMValue_Create_2(struct alt_RefStore_constIMValue* _p0)
{
    return (struct alt_RefBase_RefStore_constIMValue*)new alt::RefStore<const alt::IMValue>(*(alt::RefStore<const alt::IMValue> *)_p0);
}

CAPI struct alt_RefBase_RefStore_constIMValue* alt_RefBase_RefStore_constIMValue_Create_3()
{
    return (struct alt_RefBase_RefStore_constIMValue*)new alt::RefBase<alt::RefStore<const alt::IMValue> >();
}

CAPI struct alt_RefBase_RefStore_constIMValue* alt_RefBase_RefStore_constIMValue_Create_4(struct alt_IMValue* _ptr)
{
    return (struct alt_RefBase_RefStore_constIMValue*)new alt::RefBase<alt::RefStore<const alt::IMValue> >((alt::RefBase<alt::RefStore<const alt::IMValue> >::ValueType *)_ptr);
}

CAPI struct alt_RefBase_RefStore_constIMValue* alt_RefBase_RefStore_constIMValue_Create_5(struct alt_RefBase_RefStore_constIMValue* other)
{
    return (struct alt_RefBase_RefStore_constIMValue*)new alt::RefBase<alt::RefStore<const alt::IMValue> >(*(const alt::RefBase<alt::RefStore<const alt::IMValue> > *)other);
}

CAPI struct alt_RefBase_RefStore_constIMValue* alt_RefBase_RefStore_constIMValue_Create_6(struct alt_RefBase_RefStore_constIMValue* other)
{
    return (struct alt_RefBase_RefStore_constIMValue*)new alt::RefBase<alt::RefStore<const alt::IMValue> >(*(alt::RefBase<alt::RefStore<const alt::IMValue> > *)other);
}

CAPI void alt_RefBase_RefStore_constIMValue_Assign_constRefBase_RefStore_constIMValueRef(struct alt_RefBase_RefStore_constIMValue* _instance, struct alt_RefBase_RefStore_constIMValue* that)
{
    ((alt::RefBase<alt::RefStore<const alt::IMValue> > *)_instance)->operator=(*(const alt::RefBase<alt::RefStore<const alt::IMValue> > *)that);
}

CAPI _Bool alt_RefBase_RefStore_constIMValue_IsEmpty(struct alt_RefBase_RefStore_constIMValue* _instance)
{
    return (_Bool)((alt::RefBase<alt::RefStore<const alt::IMValue> > *)_instance)->IsEmpty();
}

CAPI _Bool alt_RefBase_RefStore_constIMValue_To__Bool(struct alt_RefBase_RefStore_constIMValue* _instance)
{
    return (_Bool)((alt::RefBase<alt::RefStore<const alt::IMValue> > *)_instance)->operator bool();
}

CAPI void alt_RefBase_RefStore_IBaseObject_free(struct alt_RefBase_RefStore_IBaseObject* ptr)
{
    delete (class alt::RefBase<class alt::RefStore<class alt::IBaseObject> > *)ptr;
}

CAPI struct alt_RefBase_RefStore_IBaseObject* alt_RefStore_IBaseObject_to_alt_RefBase_RefStore_IBaseObject(struct alt_RefStore_IBaseObject* from)
{
    return (alt_RefBase_RefStore_IBaseObject*)static_cast<alt::RefBase<alt::RefStore<alt::IBaseObject> >*>((alt::RefStore<alt::IBaseObject>*)from);
}

CAPI struct alt_RefStore_IBaseObject* alt_RefBase_RefStore_IBaseObject_to_alt_RefStore_IBaseObject(struct alt_RefBase_RefStore_IBaseObject* from)
{
    return (alt_RefStore_IBaseObject*)static_cast<alt::RefStore<alt::IBaseObject>*>((alt::RefBase<alt::RefStore<alt::IBaseObject> >*)from);
}

CAPI void alt_RefBase_RefStore_IBaseObject_Assign(struct alt_RefBase_RefStore_IBaseObject* _instance, struct alt_IBaseObject* _ptr)
{
    static_cast<alt::RefStore<alt::IBaseObject> *>((alt::RefBase<alt::RefStore<alt::IBaseObject> > *)_instance)->Assign((alt::IBaseObject *)_ptr);
}

CAPI void alt_RefBase_RefStore_IBaseObject_Free(struct alt_RefBase_RefStore_IBaseObject* _instance)
{
    static_cast<alt::RefStore<alt::IBaseObject> *>((alt::RefBase<alt::RefStore<alt::IBaseObject> > *)_instance)->Free();
}

CAPI struct alt_IBaseObject* alt_RefBase_RefStore_IBaseObject_Get(struct alt_RefBase_RefStore_IBaseObject* _instance)
{
    return (alt_IBaseObject*)static_cast<alt::RefStore<alt::IBaseObject> *>((alt::RefBase<alt::RefStore<alt::IBaseObject> > *)_instance)->Get();
}

CAPI struct alt_RefBase_RefStore_IBaseObject* alt_RefBase_RefStore_IBaseObject_Create()
{
    return (struct alt_RefBase_RefStore_IBaseObject*)new alt::RefStore<alt::IBaseObject>();
}

CAPI struct alt_RefBase_RefStore_IBaseObject* alt_RefBase_RefStore_IBaseObject_Create_1()
{
    return (struct alt_RefBase_RefStore_IBaseObject*)new alt::RefBase<alt::RefStore<alt::IBaseObject> >();
}

CAPI struct alt_RefBase_RefStore_IBaseObject* alt_RefBase_RefStore_IBaseObject_Create_2(struct alt_IBaseObject* _ptr)
{
    return (struct alt_RefBase_RefStore_IBaseObject*)new alt::RefBase<alt::RefStore<alt::IBaseObject> >((alt::RefBase<alt::RefStore<alt::IBaseObject> >::ValueType *)_ptr);
}

CAPI struct alt_RefBase_RefStore_IBaseObject* alt_RefBase_RefStore_IBaseObject_Create_3(struct alt_RefBase_RefStore_IBaseObject* other)
{
    return (struct alt_RefBase_RefStore_IBaseObject*)new alt::RefBase<alt::RefStore<alt::IBaseObject> >(*(const alt::RefBase<alt::RefStore<alt::IBaseObject> > *)other);
}

CAPI struct alt_RefBase_RefStore_IBaseObject* alt_RefBase_RefStore_IBaseObject_Create_4(struct alt_RefBase_RefStore_IBaseObject* other)
{
    return (struct alt_RefBase_RefStore_IBaseObject*)new alt::RefBase<alt::RefStore<alt::IBaseObject> >(*(alt::RefBase<alt::RefStore<alt::IBaseObject> > *)other);
}

CAPI void alt_RefBase_RefStore_IBaseObject_Assign_constRefBase_RefStore_IBaseObjectRef(struct alt_RefBase_RefStore_IBaseObject* _instance, struct alt_RefBase_RefStore_IBaseObject* that)
{
    ((alt::RefBase<alt::RefStore<alt::IBaseObject> > *)_instance)->operator=(*(const alt::RefBase<alt::RefStore<alt::IBaseObject> > *)that);
}

CAPI _Bool alt_RefBase_RefStore_IBaseObject_IsEmpty(struct alt_RefBase_RefStore_IBaseObject* _instance)
{
    return (_Bool)((alt::RefBase<alt::RefStore<alt::IBaseObject> > *)_instance)->IsEmpty();
}

CAPI _Bool alt_RefBase_RefStore_IBaseObject_To__Bool(struct alt_RefBase_RefStore_IBaseObject* _instance)
{
    return (_Bool)((alt::RefBase<alt::RefStore<alt::IBaseObject> > *)_instance)->operator bool();
}

CAPI void alt_RefBase_RefStore_IPlayer_free(struct alt_RefBase_RefStore_IPlayer* ptr)
{
    delete (class alt::RefBase<class alt::RefStore<class alt::IPlayer> > *)ptr;
}

CAPI struct alt_RefBase_RefStore_IPlayer* alt_RefStore_IPlayer_to_alt_RefBase_RefStore_IPlayer(struct alt_RefStore_IPlayer* from)
{
    return (alt_RefBase_RefStore_IPlayer*)static_cast<alt::RefBase<alt::RefStore<alt::IPlayer> >*>((alt::RefStore<alt::IPlayer>*)from);
}

CAPI struct alt_RefStore_IPlayer* alt_RefBase_RefStore_IPlayer_to_alt_RefStore_IPlayer(struct alt_RefBase_RefStore_IPlayer* from)
{
    return (alt_RefStore_IPlayer*)static_cast<alt::RefStore<alt::IPlayer>*>((alt::RefBase<alt::RefStore<alt::IPlayer> >*)from);
}

CAPI void alt_RefBase_RefStore_IPlayer_Assign(struct alt_RefBase_RefStore_IPlayer* _instance, struct alt_IPlayer* _ptr)
{
    static_cast<alt::RefStore<alt::IPlayer> *>((alt::RefBase<alt::RefStore<alt::IPlayer> > *)_instance)->Assign((alt::IPlayer *)_ptr);
}

CAPI void alt_RefBase_RefStore_IPlayer_Free(struct alt_RefBase_RefStore_IPlayer* _instance)
{
    static_cast<alt::RefStore<alt::IPlayer> *>((alt::RefBase<alt::RefStore<alt::IPlayer> > *)_instance)->Free();
}

CAPI struct alt_IPlayer* alt_RefBase_RefStore_IPlayer_Get(struct alt_RefBase_RefStore_IPlayer* _instance)
{
    return (alt_IPlayer*)static_cast<alt::RefStore<alt::IPlayer> *>((alt::RefBase<alt::RefStore<alt::IPlayer> > *)_instance)->Get();
}

CAPI struct alt_RefBase_RefStore_IPlayer* alt_RefBase_RefStore_IPlayer_Create()
{
    return (struct alt_RefBase_RefStore_IPlayer*)new alt::RefStore<alt::IPlayer>();
}

CAPI struct alt_RefBase_RefStore_IPlayer* alt_RefBase_RefStore_IPlayer_Create_1(struct alt_RefStore_IPlayer* _p0)
{
    return (struct alt_RefBase_RefStore_IPlayer*)new alt::RefStore<alt::IPlayer>(*(const alt::RefStore<alt::IPlayer> *)_p0);
}

CAPI struct alt_RefBase_RefStore_IPlayer* alt_RefBase_RefStore_IPlayer_Create_2(struct alt_RefStore_IPlayer* _p0)
{
    return (struct alt_RefBase_RefStore_IPlayer*)new alt::RefStore<alt::IPlayer>(*(alt::RefStore<alt::IPlayer> *)_p0);
}

CAPI struct alt_RefBase_RefStore_IPlayer* alt_RefBase_RefStore_IPlayer_Create_3()
{
    return (struct alt_RefBase_RefStore_IPlayer*)new alt::RefBase<alt::RefStore<alt::IPlayer> >();
}

CAPI struct alt_RefBase_RefStore_IPlayer* alt_RefBase_RefStore_IPlayer_Create_4(struct alt_IPlayer* _ptr)
{
    return (struct alt_RefBase_RefStore_IPlayer*)new alt::RefBase<alt::RefStore<alt::IPlayer> >((alt::RefBase<alt::RefStore<alt::IPlayer> >::ValueType *)_ptr);
}

CAPI struct alt_RefBase_RefStore_IPlayer* alt_RefBase_RefStore_IPlayer_Create_5(struct alt_RefBase_RefStore_IPlayer* other)
{
    return (struct alt_RefBase_RefStore_IPlayer*)new alt::RefBase<alt::RefStore<alt::IPlayer> >(*(const alt::RefBase<alt::RefStore<alt::IPlayer> > *)other);
}

CAPI struct alt_RefBase_RefStore_IPlayer* alt_RefBase_RefStore_IPlayer_Create_6(struct alt_RefBase_RefStore_IPlayer* other)
{
    return (struct alt_RefBase_RefStore_IPlayer*)new alt::RefBase<alt::RefStore<alt::IPlayer> >(*(alt::RefBase<alt::RefStore<alt::IPlayer> > *)other);
}

CAPI void alt_RefBase_RefStore_IPlayer_Assign_constRefBase_RefStore_IPlayerRef(struct alt_RefBase_RefStore_IPlayer* _instance, struct alt_RefBase_RefStore_IPlayer* that)
{
    ((alt::RefBase<alt::RefStore<alt::IPlayer> > *)_instance)->operator=(*(const alt::RefBase<alt::RefStore<alt::IPlayer> > *)that);
}

CAPI _Bool alt_RefBase_RefStore_IPlayer_IsEmpty(struct alt_RefBase_RefStore_IPlayer* _instance)
{
    return (_Bool)((alt::RefBase<alt::RefStore<alt::IPlayer> > *)_instance)->IsEmpty();
}

CAPI _Bool alt_RefBase_RefStore_IPlayer_To__Bool(struct alt_RefBase_RefStore_IPlayer* _instance)
{
    return (_Bool)((alt::RefBase<alt::RefStore<alt::IPlayer> > *)_instance)->operator bool();
}

CAPI void alt_RefBase_RefStore_IVehicle_free(struct alt_RefBase_RefStore_IVehicle* ptr)
{
    delete (class alt::RefBase<class alt::RefStore<class alt::IVehicle> > *)ptr;
}

CAPI struct alt_RefBase_RefStore_IVehicle* alt_RefStore_IVehicle_to_alt_RefBase_RefStore_IVehicle(struct alt_RefStore_IVehicle* from)
{
    return (alt_RefBase_RefStore_IVehicle*)static_cast<alt::RefBase<alt::RefStore<alt::IVehicle> >*>((alt::RefStore<alt::IVehicle>*)from);
}

CAPI struct alt_RefStore_IVehicle* alt_RefBase_RefStore_IVehicle_to_alt_RefStore_IVehicle(struct alt_RefBase_RefStore_IVehicle* from)
{
    return (alt_RefStore_IVehicle*)static_cast<alt::RefStore<alt::IVehicle>*>((alt::RefBase<alt::RefStore<alt::IVehicle> >*)from);
}

CAPI void alt_RefBase_RefStore_IVehicle_Assign(struct alt_RefBase_RefStore_IVehicle* _instance, struct alt_IVehicle* _ptr)
{
    static_cast<alt::RefStore<alt::IVehicle> *>((alt::RefBase<alt::RefStore<alt::IVehicle> > *)_instance)->Assign((alt::IVehicle *)_ptr);
}

CAPI void alt_RefBase_RefStore_IVehicle_Free(struct alt_RefBase_RefStore_IVehicle* _instance)
{
    static_cast<alt::RefStore<alt::IVehicle> *>((alt::RefBase<alt::RefStore<alt::IVehicle> > *)_instance)->Free();
}

CAPI struct alt_IVehicle* alt_RefBase_RefStore_IVehicle_Get(struct alt_RefBase_RefStore_IVehicle* _instance)
{
    return (alt_IVehicle*)static_cast<alt::RefStore<alt::IVehicle> *>((alt::RefBase<alt::RefStore<alt::IVehicle> > *)_instance)->Get();
}

CAPI struct alt_RefBase_RefStore_IVehicle* alt_RefBase_RefStore_IVehicle_Create()
{
    return (struct alt_RefBase_RefStore_IVehicle*)new alt::RefStore<alt::IVehicle>();
}

CAPI struct alt_RefBase_RefStore_IVehicle* alt_RefBase_RefStore_IVehicle_Create_1(struct alt_RefStore_IVehicle* _p0)
{
    return (struct alt_RefBase_RefStore_IVehicle*)new alt::RefStore<alt::IVehicle>(*(const alt::RefStore<alt::IVehicle> *)_p0);
}

CAPI struct alt_RefBase_RefStore_IVehicle* alt_RefBase_RefStore_IVehicle_Create_2(struct alt_RefStore_IVehicle* _p0)
{
    return (struct alt_RefBase_RefStore_IVehicle*)new alt::RefStore<alt::IVehicle>(*(alt::RefStore<alt::IVehicle> *)_p0);
}

CAPI struct alt_RefBase_RefStore_IVehicle* alt_RefBase_RefStore_IVehicle_Create_3()
{
    return (struct alt_RefBase_RefStore_IVehicle*)new alt::RefBase<alt::RefStore<alt::IVehicle> >();
}

CAPI struct alt_RefBase_RefStore_IVehicle* alt_RefBase_RefStore_IVehicle_Create_4(struct alt_IVehicle* _ptr)
{
    return (struct alt_RefBase_RefStore_IVehicle*)new alt::RefBase<alt::RefStore<alt::IVehicle> >((alt::RefBase<alt::RefStore<alt::IVehicle> >::ValueType *)_ptr);
}

CAPI struct alt_RefBase_RefStore_IVehicle* alt_RefBase_RefStore_IVehicle_Create_5(struct alt_RefBase_RefStore_IVehicle* other)
{
    return (struct alt_RefBase_RefStore_IVehicle*)new alt::RefBase<alt::RefStore<alt::IVehicle> >(*(const alt::RefBase<alt::RefStore<alt::IVehicle> > *)other);
}

CAPI struct alt_RefBase_RefStore_IVehicle* alt_RefBase_RefStore_IVehicle_Create_6(struct alt_RefBase_RefStore_IVehicle* other)
{
    return (struct alt_RefBase_RefStore_IVehicle*)new alt::RefBase<alt::RefStore<alt::IVehicle> >(*(alt::RefBase<alt::RefStore<alt::IVehicle> > *)other);
}

CAPI void alt_RefBase_RefStore_IVehicle_Assign_constRefBase_RefStore_IVehicleRef(struct alt_RefBase_RefStore_IVehicle* _instance, struct alt_RefBase_RefStore_IVehicle* that)
{
    ((alt::RefBase<alt::RefStore<alt::IVehicle> > *)_instance)->operator=(*(const alt::RefBase<alt::RefStore<alt::IVehicle> > *)that);
}

CAPI _Bool alt_RefBase_RefStore_IVehicle_IsEmpty(struct alt_RefBase_RefStore_IVehicle* _instance)
{
    return (_Bool)((alt::RefBase<alt::RefStore<alt::IVehicle> > *)_instance)->IsEmpty();
}

CAPI _Bool alt_RefBase_RefStore_IVehicle_To__Bool(struct alt_RefBase_RefStore_IVehicle* _instance)
{
    return (_Bool)((alt::RefBase<alt::RefStore<alt::IVehicle> > *)_instance)->operator bool();
}

CAPI void alt_RefBase_RefStore_IEntity_free(struct alt_RefBase_RefStore_IEntity* ptr)
{
    delete (class alt::RefBase<class alt::RefStore<class alt::IEntity> > *)ptr;
}

CAPI struct alt_RefBase_RefStore_IEntity* alt_RefStore_IEntity_to_alt_RefBase_RefStore_IEntity(struct alt_RefStore_IEntity* from)
{
    return (alt_RefBase_RefStore_IEntity*)static_cast<alt::RefBase<alt::RefStore<alt::IEntity> >*>((alt::RefStore<alt::IEntity>*)from);
}

CAPI struct alt_RefStore_IEntity* alt_RefBase_RefStore_IEntity_to_alt_RefStore_IEntity(struct alt_RefBase_RefStore_IEntity* from)
{
    return (alt_RefStore_IEntity*)static_cast<alt::RefStore<alt::IEntity>*>((alt::RefBase<alt::RefStore<alt::IEntity> >*)from);
}

CAPI void alt_RefBase_RefStore_IEntity_Assign(struct alt_RefBase_RefStore_IEntity* _instance, struct alt_IEntity* _ptr)
{
    static_cast<alt::RefStore<alt::IEntity> *>((alt::RefBase<alt::RefStore<alt::IEntity> > *)_instance)->Assign((alt::IEntity *)_ptr);
}

CAPI void alt_RefBase_RefStore_IEntity_Free(struct alt_RefBase_RefStore_IEntity* _instance)
{
    static_cast<alt::RefStore<alt::IEntity> *>((alt::RefBase<alt::RefStore<alt::IEntity> > *)_instance)->Free();
}

CAPI struct alt_IEntity* alt_RefBase_RefStore_IEntity_Get(struct alt_RefBase_RefStore_IEntity* _instance)
{
    return (alt_IEntity*)static_cast<alt::RefStore<alt::IEntity> *>((alt::RefBase<alt::RefStore<alt::IEntity> > *)_instance)->Get();
}

CAPI struct alt_RefBase_RefStore_IEntity* alt_RefBase_RefStore_IEntity_Create()
{
    return (struct alt_RefBase_RefStore_IEntity*)new alt::RefStore<alt::IEntity>();
}

CAPI struct alt_RefBase_RefStore_IEntity* alt_RefBase_RefStore_IEntity_Create_1(struct alt_RefStore_IEntity* _p0)
{
    return (struct alt_RefBase_RefStore_IEntity*)new alt::RefStore<alt::IEntity>(*(const alt::RefStore<alt::IEntity> *)_p0);
}

CAPI struct alt_RefBase_RefStore_IEntity* alt_RefBase_RefStore_IEntity_Create_2(struct alt_RefStore_IEntity* _p0)
{
    return (struct alt_RefBase_RefStore_IEntity*)new alt::RefStore<alt::IEntity>(*(alt::RefStore<alt::IEntity> *)_p0);
}

CAPI struct alt_RefBase_RefStore_IEntity* alt_RefBase_RefStore_IEntity_Create_3()
{
    return (struct alt_RefBase_RefStore_IEntity*)new alt::RefBase<alt::RefStore<alt::IEntity> >();
}

CAPI struct alt_RefBase_RefStore_IEntity* alt_RefBase_RefStore_IEntity_Create_4(struct alt_IEntity* _ptr)
{
    return (struct alt_RefBase_RefStore_IEntity*)new alt::RefBase<alt::RefStore<alt::IEntity> >((alt::RefBase<alt::RefStore<alt::IEntity> >::ValueType *)_ptr);
}

CAPI struct alt_RefBase_RefStore_IEntity* alt_RefBase_RefStore_IEntity_Create_5(struct alt_RefBase_RefStore_IEntity* other)
{
    return (struct alt_RefBase_RefStore_IEntity*)new alt::RefBase<alt::RefStore<alt::IEntity> >(*(const alt::RefBase<alt::RefStore<alt::IEntity> > *)other);
}

CAPI struct alt_RefBase_RefStore_IEntity* alt_RefBase_RefStore_IEntity_Create_6(struct alt_RefBase_RefStore_IEntity* other)
{
    return (struct alt_RefBase_RefStore_IEntity*)new alt::RefBase<alt::RefStore<alt::IEntity> >(*(alt::RefBase<alt::RefStore<alt::IEntity> > *)other);
}

CAPI void alt_RefBase_RefStore_IEntity_Assign_constRefBase_RefStore_IEntityRef(struct alt_RefBase_RefStore_IEntity* _instance, struct alt_RefBase_RefStore_IEntity* that)
{
    ((alt::RefBase<alt::RefStore<alt::IEntity> > *)_instance)->operator=(*(const alt::RefBase<alt::RefStore<alt::IEntity> > *)that);
}

CAPI _Bool alt_RefBase_RefStore_IEntity_IsEmpty(struct alt_RefBase_RefStore_IEntity* _instance)
{
    return (_Bool)((alt::RefBase<alt::RefStore<alt::IEntity> > *)_instance)->IsEmpty();
}

CAPI _Bool alt_RefBase_RefStore_IEntity_To__Bool(struct alt_RefBase_RefStore_IEntity* _instance)
{
    return (_Bool)((alt::RefBase<alt::RefStore<alt::IEntity> > *)_instance)->operator bool();
}

CAPI void alt_RefBase_RefStore_IColShape_free(struct alt_RefBase_RefStore_IColShape* ptr)
{
    delete (class alt::RefBase<class alt::RefStore<class alt::IColShape> > *)ptr;
}

CAPI struct alt_RefBase_RefStore_IColShape* alt_RefStore_IColShape_to_alt_RefBase_RefStore_IColShape(struct alt_RefStore_IColShape* from)
{
    return (alt_RefBase_RefStore_IColShape*)static_cast<alt::RefBase<alt::RefStore<alt::IColShape> >*>((alt::RefStore<alt::IColShape>*)from);
}

CAPI struct alt_RefStore_IColShape* alt_RefBase_RefStore_IColShape_to_alt_RefStore_IColShape(struct alt_RefBase_RefStore_IColShape* from)
{
    return (alt_RefStore_IColShape*)static_cast<alt::RefStore<alt::IColShape>*>((alt::RefBase<alt::RefStore<alt::IColShape> >*)from);
}

CAPI void alt_RefBase_RefStore_IColShape_Assign(struct alt_RefBase_RefStore_IColShape* _instance, struct alt_IColShape* _ptr)
{
    static_cast<alt::RefStore<alt::IColShape> *>((alt::RefBase<alt::RefStore<alt::IColShape> > *)_instance)->Assign((alt::IColShape *)_ptr);
}

CAPI void alt_RefBase_RefStore_IColShape_Free(struct alt_RefBase_RefStore_IColShape* _instance)
{
    static_cast<alt::RefStore<alt::IColShape> *>((alt::RefBase<alt::RefStore<alt::IColShape> > *)_instance)->Free();
}

CAPI struct alt_IColShape* alt_RefBase_RefStore_IColShape_Get(struct alt_RefBase_RefStore_IColShape* _instance)
{
    return (alt_IColShape*)static_cast<alt::RefStore<alt::IColShape> *>((alt::RefBase<alt::RefStore<alt::IColShape> > *)_instance)->Get();
}

CAPI struct alt_RefBase_RefStore_IColShape* alt_RefBase_RefStore_IColShape_Create()
{
    return (struct alt_RefBase_RefStore_IColShape*)new alt::RefStore<alt::IColShape>();
}

CAPI struct alt_RefBase_RefStore_IColShape* alt_RefBase_RefStore_IColShape_Create_1(struct alt_RefStore_IColShape* _p0)
{
    return (struct alt_RefBase_RefStore_IColShape*)new alt::RefStore<alt::IColShape>(*(const alt::RefStore<alt::IColShape> *)_p0);
}

CAPI struct alt_RefBase_RefStore_IColShape* alt_RefBase_RefStore_IColShape_Create_2(struct alt_RefStore_IColShape* _p0)
{
    return (struct alt_RefBase_RefStore_IColShape*)new alt::RefStore<alt::IColShape>(*(alt::RefStore<alt::IColShape> *)_p0);
}

CAPI struct alt_RefBase_RefStore_IColShape* alt_RefBase_RefStore_IColShape_Create_3()
{
    return (struct alt_RefBase_RefStore_IColShape*)new alt::RefBase<alt::RefStore<alt::IColShape> >();
}

CAPI struct alt_RefBase_RefStore_IColShape* alt_RefBase_RefStore_IColShape_Create_4(struct alt_IColShape* _ptr)
{
    return (struct alt_RefBase_RefStore_IColShape*)new alt::RefBase<alt::RefStore<alt::IColShape> >((alt::RefBase<alt::RefStore<alt::IColShape> >::ValueType *)_ptr);
}

CAPI struct alt_RefBase_RefStore_IColShape* alt_RefBase_RefStore_IColShape_Create_5(struct alt_RefBase_RefStore_IColShape* other)
{
    return (struct alt_RefBase_RefStore_IColShape*)new alt::RefBase<alt::RefStore<alt::IColShape> >(*(const alt::RefBase<alt::RefStore<alt::IColShape> > *)other);
}

CAPI struct alt_RefBase_RefStore_IColShape* alt_RefBase_RefStore_IColShape_Create_6(struct alt_RefBase_RefStore_IColShape* other)
{
    return (struct alt_RefBase_RefStore_IColShape*)new alt::RefBase<alt::RefStore<alt::IColShape> >(*(alt::RefBase<alt::RefStore<alt::IColShape> > *)other);
}

CAPI void alt_RefBase_RefStore_IColShape_Assign_constRefBase_RefStore_IColShapeRef(struct alt_RefBase_RefStore_IColShape* _instance, struct alt_RefBase_RefStore_IColShape* that)
{
    ((alt::RefBase<alt::RefStore<alt::IColShape> > *)_instance)->operator=(*(const alt::RefBase<alt::RefStore<alt::IColShape> > *)that);
}

CAPI _Bool alt_RefBase_RefStore_IColShape_IsEmpty(struct alt_RefBase_RefStore_IColShape* _instance)
{
    return (_Bool)((alt::RefBase<alt::RefStore<alt::IColShape> > *)_instance)->IsEmpty();
}

CAPI _Bool alt_RefBase_RefStore_IColShape_To__Bool(struct alt_RefBase_RefStore_IColShape* _instance)
{
    return (_Bool)((alt::RefBase<alt::RefStore<alt::IColShape> > *)_instance)->operator bool();
}

CAPI void alt_RefStore_IMValue_free(struct alt_RefStore_IMValue* ptr)
{
    delete (class alt::RefStore<class alt::IMValue> *)ptr;
}

CAPI void alt_RefStore_IMValue_Assign(struct alt_RefStore_IMValue* _instance, struct alt_IMValue* _ptr)
{
    ((alt::RefStore<alt::IMValue> *)_instance)->Assign((alt::IMValue *)_ptr);
}

CAPI void alt_RefStore_IMValue_Free(struct alt_RefStore_IMValue* _instance)
{
    ((alt::RefStore<alt::IMValue> *)_instance)->Free();
}

CAPI struct alt_IMValue* alt_RefStore_IMValue_Get(struct alt_RefStore_IMValue* _instance)
{
    return (alt_IMValue*)((alt::RefStore<alt::IMValue> *)_instance)->Get();
}

CAPI struct alt_RefStore_IMValue* alt_RefStore_IMValue_Create()
{
    return (struct alt_RefStore_IMValue*)new alt::RefStore<alt::IMValue>();
}

CAPI struct alt_RefStore_IMValue* alt_RefStore_IMValue_Create_1(struct alt_RefStore_IMValue* _p0)
{
    return (struct alt_RefStore_IMValue*)new alt::RefStore<alt::IMValue>(*(const alt::RefStore<alt::IMValue> *)_p0);
}

CAPI struct alt_RefStore_IMValue* alt_RefStore_IMValue_Create_2(struct alt_RefStore_IMValue* _p0)
{
    return (struct alt_RefStore_IMValue*)new alt::RefStore<alt::IMValue>(*(alt::RefStore<alt::IMValue> *)_p0);
}

CAPI void alt_RefStore_constIMValue_free(struct alt_RefStore_constIMValue* ptr)
{
    delete (class alt::RefStore<const class alt::IMValue> *)ptr;
}

CAPI void alt_RefStore_constIMValue_Assign(struct alt_RefStore_constIMValue* _instance, struct alt_IMValue* _ptr)
{
    ((alt::RefStore<const alt::IMValue> *)_instance)->Assign((const alt::IMValue *)_ptr);
}

CAPI void alt_RefStore_constIMValue_Free(struct alt_RefStore_constIMValue* _instance)
{
    ((alt::RefStore<const alt::IMValue> *)_instance)->Free();
}

CAPI struct alt_IMValue* alt_RefStore_constIMValue_Get(struct alt_RefStore_constIMValue* _instance)
{
    return (alt_IMValue*)((alt::RefStore<const alt::IMValue> *)_instance)->Get();
}

CAPI struct alt_RefStore_constIMValue* alt_RefStore_constIMValue_Create()
{
    return (struct alt_RefStore_constIMValue*)new alt::RefStore<const alt::IMValue>();
}

CAPI struct alt_RefStore_constIMValue* alt_RefStore_constIMValue_Create_1(struct alt_RefStore_constIMValue* _p0)
{
    return (struct alt_RefStore_constIMValue*)new alt::RefStore<const alt::IMValue>(*(const alt::RefStore<const alt::IMValue> *)_p0);
}

CAPI struct alt_RefStore_constIMValue* alt_RefStore_constIMValue_Create_2(struct alt_RefStore_constIMValue* _p0)
{
    return (struct alt_RefStore_constIMValue*)new alt::RefStore<const alt::IMValue>(*(alt::RefStore<const alt::IMValue> *)_p0);
}

CAPI void alt_RefStore_IBaseObject_free(struct alt_RefStore_IBaseObject* ptr)
{
    delete (class alt::RefStore<class alt::IBaseObject> *)ptr;
}

CAPI void alt_RefStore_IBaseObject_Assign(struct alt_RefStore_IBaseObject* _instance, struct alt_IBaseObject* _ptr)
{
    ((alt::RefStore<alt::IBaseObject> *)_instance)->Assign((alt::IBaseObject *)_ptr);
}

CAPI void alt_RefStore_IBaseObject_Free(struct alt_RefStore_IBaseObject* _instance)
{
    ((alt::RefStore<alt::IBaseObject> *)_instance)->Free();
}

CAPI struct alt_IBaseObject* alt_RefStore_IBaseObject_Get(struct alt_RefStore_IBaseObject* _instance)
{
    return (alt_IBaseObject*)((alt::RefStore<alt::IBaseObject> *)_instance)->Get();
}

CAPI struct alt_RefStore_IBaseObject* alt_RefStore_IBaseObject_Create()
{
    return (struct alt_RefStore_IBaseObject*)new alt::RefStore<alt::IBaseObject>();
}

CAPI void alt_RefStore_IPlayer_free(struct alt_RefStore_IPlayer* ptr)
{
    delete (class alt::RefStore<class alt::IPlayer> *)ptr;
}

CAPI void alt_RefStore_IPlayer_Assign(struct alt_RefStore_IPlayer* _instance, struct alt_IPlayer* _ptr)
{
    ((alt::RefStore<alt::IPlayer> *)_instance)->Assign((alt::IPlayer *)_ptr);
}

CAPI void alt_RefStore_IPlayer_Free(struct alt_RefStore_IPlayer* _instance)
{
    ((alt::RefStore<alt::IPlayer> *)_instance)->Free();
}

CAPI struct alt_IPlayer* alt_RefStore_IPlayer_Get(struct alt_RefStore_IPlayer* _instance)
{
    return (alt_IPlayer*)((alt::RefStore<alt::IPlayer> *)_instance)->Get();
}

CAPI struct alt_RefStore_IPlayer* alt_RefStore_IPlayer_Create()
{
    return (struct alt_RefStore_IPlayer*)new alt::RefStore<alt::IPlayer>();
}

CAPI struct alt_RefStore_IPlayer* alt_RefStore_IPlayer_Create_1(struct alt_RefStore_IPlayer* _p0)
{
    return (struct alt_RefStore_IPlayer*)new alt::RefStore<alt::IPlayer>(*(const alt::RefStore<alt::IPlayer> *)_p0);
}

CAPI struct alt_RefStore_IPlayer* alt_RefStore_IPlayer_Create_2(struct alt_RefStore_IPlayer* _p0)
{
    return (struct alt_RefStore_IPlayer*)new alt::RefStore<alt::IPlayer>(*(alt::RefStore<alt::IPlayer> *)_p0);
}

CAPI void alt_RefStore_IVehicle_free(struct alt_RefStore_IVehicle* ptr)
{
    delete (class alt::RefStore<class alt::IVehicle> *)ptr;
}

CAPI void alt_RefStore_IVehicle_Assign(struct alt_RefStore_IVehicle* _instance, struct alt_IVehicle* _ptr)
{
    ((alt::RefStore<alt::IVehicle> *)_instance)->Assign((alt::IVehicle *)_ptr);
}

CAPI void alt_RefStore_IVehicle_Free(struct alt_RefStore_IVehicle* _instance)
{
    ((alt::RefStore<alt::IVehicle> *)_instance)->Free();
}

CAPI struct alt_IVehicle* alt_RefStore_IVehicle_Get(struct alt_RefStore_IVehicle* _instance)
{
    return (alt_IVehicle*)((alt::RefStore<alt::IVehicle> *)_instance)->Get();
}

CAPI struct alt_RefStore_IVehicle* alt_RefStore_IVehicle_Create()
{
    return (struct alt_RefStore_IVehicle*)new alt::RefStore<alt::IVehicle>();
}

CAPI struct alt_RefStore_IVehicle* alt_RefStore_IVehicle_Create_1(struct alt_RefStore_IVehicle* _p0)
{
    return (struct alt_RefStore_IVehicle*)new alt::RefStore<alt::IVehicle>(*(const alt::RefStore<alt::IVehicle> *)_p0);
}

CAPI struct alt_RefStore_IVehicle* alt_RefStore_IVehicle_Create_2(struct alt_RefStore_IVehicle* _p0)
{
    return (struct alt_RefStore_IVehicle*)new alt::RefStore<alt::IVehicle>(*(alt::RefStore<alt::IVehicle> *)_p0);
}

CAPI void alt_RefStore_IEntity_free(struct alt_RefStore_IEntity* ptr)
{
    delete (class alt::RefStore<class alt::IEntity> *)ptr;
}

CAPI void alt_RefStore_IEntity_Assign(struct alt_RefStore_IEntity* _instance, struct alt_IEntity* _ptr)
{
    ((alt::RefStore<alt::IEntity> *)_instance)->Assign((alt::IEntity *)_ptr);
}

CAPI void alt_RefStore_IEntity_Free(struct alt_RefStore_IEntity* _instance)
{
    ((alt::RefStore<alt::IEntity> *)_instance)->Free();
}

CAPI struct alt_IEntity* alt_RefStore_IEntity_Get(struct alt_RefStore_IEntity* _instance)
{
    return (alt_IEntity*)((alt::RefStore<alt::IEntity> *)_instance)->Get();
}

CAPI struct alt_RefStore_IEntity* alt_RefStore_IEntity_Create()
{
    return (struct alt_RefStore_IEntity*)new alt::RefStore<alt::IEntity>();
}

CAPI struct alt_RefStore_IEntity* alt_RefStore_IEntity_Create_1(struct alt_RefStore_IEntity* _p0)
{
    return (struct alt_RefStore_IEntity*)new alt::RefStore<alt::IEntity>(*(const alt::RefStore<alt::IEntity> *)_p0);
}

CAPI struct alt_RefStore_IEntity* alt_RefStore_IEntity_Create_2(struct alt_RefStore_IEntity* _p0)
{
    return (struct alt_RefStore_IEntity*)new alt::RefStore<alt::IEntity>(*(alt::RefStore<alt::IEntity> *)_p0);
}

CAPI void alt_RefStore_IColShape_free(struct alt_RefStore_IColShape* ptr)
{
    delete (class alt::RefStore<class alt::IColShape> *)ptr;
}

CAPI void alt_RefStore_IColShape_Assign(struct alt_RefStore_IColShape* _instance, struct alt_IColShape* _ptr)
{
    ((alt::RefStore<alt::IColShape> *)_instance)->Assign((alt::IColShape *)_ptr);
}

CAPI void alt_RefStore_IColShape_Free(struct alt_RefStore_IColShape* _instance)
{
    ((alt::RefStore<alt::IColShape> *)_instance)->Free();
}

CAPI struct alt_IColShape* alt_RefStore_IColShape_Get(struct alt_RefStore_IColShape* _instance)
{
    return (alt_IColShape*)((alt::RefStore<alt::IColShape> *)_instance)->Get();
}

CAPI struct alt_RefStore_IColShape* alt_RefStore_IColShape_Create()
{
    return (struct alt_RefStore_IColShape*)new alt::RefStore<alt::IColShape>();
}

CAPI struct alt_RefStore_IColShape* alt_RefStore_IColShape_Create_1(struct alt_RefStore_IColShape* _p0)
{
    return (struct alt_RefStore_IColShape*)new alt::RefStore<alt::IColShape>(*(const alt::RefStore<alt::IColShape> *)_p0);
}

CAPI struct alt_RefStore_IColShape* alt_RefStore_IColShape_Create_2(struct alt_RefStore_IColShape* _p0)
{
    return (struct alt_RefStore_IColShape*)new alt::RefStore<alt::IColShape>(*(alt::RefStore<alt::IColShape> *)_p0);
}

CAPI struct alt_IMValue* alt_CRefCountable_to_alt_IMValue(struct alt_CRefCountable* from)
{
    return (alt_IMValue*)dynamic_cast<alt::IMValue*>((alt::CRefCountable*)from);
}

CAPI struct alt_CRefCountable* alt_IMValue_to_alt_CRefCountable(struct alt_IMValue* from)
{
    return (alt_CRefCountable*)static_cast<alt::CRefCountable*>((alt::IMValue*)from);
}

CAPI unsigned long long alt_IMValue_GetRefCount(struct alt_IMValue* _instance)
{
    return (unsigned long long)static_cast<alt::CRefCountable *>((alt::IMValue *)_instance)->GetRefCount();
}

CAPI void alt_IMValue_AddRef(struct alt_IMValue* _instance)
{
    static_cast<alt::CRefCountable *>((alt::IMValue *)_instance)->AddRef();
}

CAPI void alt_IMValue_RemoveRef(struct alt_IMValue* _instance)
{
    static_cast<alt::CRefCountable *>((alt::IMValue *)_instance)->RemoveRef();
}

CAPI void alt_IMValue_AddWeakRef(struct alt_IMValue* _instance, struct alt_IWeakRef* ref)
{
    static_cast<alt::CRefCountable *>((alt::IMValue *)_instance)->AddWeakRef((alt::IWeakRef *)ref);
}

CAPI void alt_IMValue_RemoveWeakRef(struct alt_IMValue* _instance, struct alt_IWeakRef* ref)
{
    static_cast<alt::CRefCountable *>((alt::IMValue *)_instance)->RemoveWeakRef((alt::IWeakRef *)ref);
}

CAPI alt_IMValue_Type alt_IMValue_GetType(struct alt_IMValue* _instance)
{
    return (alt_IMValue_Type)((alt::IMValue *)_instance)->GetType();
}

CAPI struct alt_String* alt_IMValue_ToString(struct alt_IMValue* _instance)
{
    return (alt_String*)new class alt::String(((alt::IMValue *)_instance)->ToString());
}

CAPI double alt_IMValue_ToNumber(struct alt_IMValue* _instance)
{
    return (double)((alt::IMValue *)_instance)->ToNumber();
}

CAPI struct alt_RefBase_RefStore_IMValue* alt_IMValue_Clone(struct alt_IMValue* _instance)
{
    return (alt_RefBase_RefStore_IMValue*)new class alt::RefBase<class alt::RefStore<class alt::IMValue> >(((alt::IMValue *)_instance)->Clone());
}

CAPI void alt_IMValueNil_free(struct alt_IMValueNil* ptr)
{
    delete (class alt::IMValueNil *)ptr;
}

CAPI struct alt_IMValueNil* alt_CRefCountable_to_alt_IMValueNil(struct alt_CRefCountable* from)
{
    return (alt_IMValueNil*)dynamic_cast<alt::IMValueNil*>((alt::CRefCountable*)from);
}

CAPI struct alt_CRefCountable* alt_IMValueNil_to_alt_CRefCountable(struct alt_IMValueNil* from)
{
    return (alt_CRefCountable*)static_cast<alt::CRefCountable*>((alt::IMValueNil*)from);
}

CAPI unsigned long long alt_IMValueNil_GetRefCount(struct alt_IMValueNil* _instance)
{
    return (unsigned long long)static_cast<alt::CRefCountable *>((alt::IMValueNil *)_instance)->GetRefCount();
}

CAPI void alt_IMValueNil_AddRef(struct alt_IMValueNil* _instance)
{
    static_cast<alt::CRefCountable *>((alt::IMValueNil *)_instance)->AddRef();
}

CAPI void alt_IMValueNil_RemoveRef(struct alt_IMValueNil* _instance)
{
    static_cast<alt::CRefCountable *>((alt::IMValueNil *)_instance)->RemoveRef();
}

CAPI void alt_IMValueNil_AddWeakRef(struct alt_IMValueNil* _instance, struct alt_IWeakRef* ref)
{
    static_cast<alt::CRefCountable *>((alt::IMValueNil *)_instance)->AddWeakRef((alt::IWeakRef *)ref);
}

CAPI void alt_IMValueNil_RemoveWeakRef(struct alt_IMValueNil* _instance, struct alt_IWeakRef* ref)
{
    static_cast<alt::CRefCountable *>((alt::IMValueNil *)_instance)->RemoveWeakRef((alt::IWeakRef *)ref);
}

CAPI struct alt_IMValueNil* alt_IMValue_to_alt_IMValueNil(struct alt_IMValue* from)
{
    return (alt_IMValueNil*)dynamic_cast<alt::IMValueNil*>((alt::IMValue*)from);
}

CAPI struct alt_IMValue* alt_IMValueNil_to_alt_IMValue(struct alt_IMValueNil* from)
{
    return (alt_IMValue*)static_cast<alt::IMValue*>((alt::IMValueNil*)from);
}

CAPI alt_IMValue_Type alt_IMValueNil_GetType(struct alt_IMValueNil* _instance)
{
    return (alt_IMValue_Type)static_cast<alt::IMValue *>((alt::IMValueNil *)_instance)->GetType();
}

CAPI struct alt_String* alt_IMValueNil_ToString(struct alt_IMValueNil* _instance)
{
    return (alt_String*)new class alt::String(static_cast<alt::IMValue *>((alt::IMValueNil *)_instance)->ToString());
}

CAPI double alt_IMValueNil_ToNumber(struct alt_IMValueNil* _instance)
{
    return (double)static_cast<alt::IMValue *>((alt::IMValueNil *)_instance)->ToNumber();
}

CAPI struct alt_RefBase_RefStore_IMValue* alt_IMValueNil_Clone(struct alt_IMValueNil* _instance)
{
    return (alt_RefBase_RefStore_IMValue*)new class alt::RefBase<class alt::RefStore<class alt::IMValue> >(static_cast<alt::IMValue *>((alt::IMValueNil *)_instance)->Clone());
}

CAPI void alt_IMValueBool_free(struct alt_IMValueBool* ptr)
{
    delete (class alt::IMValueBool *)ptr;
}

CAPI struct alt_IMValueBool* alt_CRefCountable_to_alt_IMValueBool(struct alt_CRefCountable* from)
{
    return (alt_IMValueBool*)dynamic_cast<alt::IMValueBool*>((alt::CRefCountable*)from);
}

CAPI struct alt_CRefCountable* alt_IMValueBool_to_alt_CRefCountable(struct alt_IMValueBool* from)
{
    return (alt_CRefCountable*)static_cast<alt::CRefCountable*>((alt::IMValueBool*)from);
}

CAPI unsigned long long alt_IMValueBool_GetRefCount(struct alt_IMValueBool* _instance)
{
    return (unsigned long long)static_cast<alt::CRefCountable *>((alt::IMValueBool *)_instance)->GetRefCount();
}

CAPI void alt_IMValueBool_AddRef(struct alt_IMValueBool* _instance)
{
    static_cast<alt::CRefCountable *>((alt::IMValueBool *)_instance)->AddRef();
}

CAPI void alt_IMValueBool_RemoveRef(struct alt_IMValueBool* _instance)
{
    static_cast<alt::CRefCountable *>((alt::IMValueBool *)_instance)->RemoveRef();
}

CAPI void alt_IMValueBool_AddWeakRef(struct alt_IMValueBool* _instance, struct alt_IWeakRef* ref)
{
    static_cast<alt::CRefCountable *>((alt::IMValueBool *)_instance)->AddWeakRef((alt::IWeakRef *)ref);
}

CAPI void alt_IMValueBool_RemoveWeakRef(struct alt_IMValueBool* _instance, struct alt_IWeakRef* ref)
{
    static_cast<alt::CRefCountable *>((alt::IMValueBool *)_instance)->RemoveWeakRef((alt::IWeakRef *)ref);
}

CAPI struct alt_IMValueBool* alt_IMValue_to_alt_IMValueBool(struct alt_IMValue* from)
{
    return (alt_IMValueBool*)dynamic_cast<alt::IMValueBool*>((alt::IMValue*)from);
}

CAPI struct alt_IMValue* alt_IMValueBool_to_alt_IMValue(struct alt_IMValueBool* from)
{
    return (alt_IMValue*)static_cast<alt::IMValue*>((alt::IMValueBool*)from);
}

CAPI alt_IMValue_Type alt_IMValueBool_GetType(struct alt_IMValueBool* _instance)
{
    return (alt_IMValue_Type)static_cast<alt::IMValue *>((alt::IMValueBool *)_instance)->GetType();
}

CAPI struct alt_String* alt_IMValueBool_ToString(struct alt_IMValueBool* _instance)
{
    return (alt_String*)new class alt::String(static_cast<alt::IMValue *>((alt::IMValueBool *)_instance)->ToString());
}

CAPI double alt_IMValueBool_ToNumber(struct alt_IMValueBool* _instance)
{
    return (double)static_cast<alt::IMValue *>((alt::IMValueBool *)_instance)->ToNumber();
}

CAPI struct alt_RefBase_RefStore_IMValue* alt_IMValueBool_Clone(struct alt_IMValueBool* _instance)
{
    return (alt_RefBase_RefStore_IMValue*)new class alt::RefBase<class alt::RefStore<class alt::IMValue> >(static_cast<alt::IMValue *>((alt::IMValueBool *)_instance)->Clone());
}

CAPI _Bool alt_IMValueBool_Value(struct alt_IMValueBool* _instance)
{
    return (_Bool)((alt::IMValueBool *)_instance)->Value();
}

CAPI void alt_IMValueInt_free(struct alt_IMValueInt* ptr)
{
    delete (class alt::IMValueInt *)ptr;
}

CAPI struct alt_IMValueInt* alt_CRefCountable_to_alt_IMValueInt(struct alt_CRefCountable* from)
{
    return (alt_IMValueInt*)dynamic_cast<alt::IMValueInt*>((alt::CRefCountable*)from);
}

CAPI struct alt_CRefCountable* alt_IMValueInt_to_alt_CRefCountable(struct alt_IMValueInt* from)
{
    return (alt_CRefCountable*)static_cast<alt::CRefCountable*>((alt::IMValueInt*)from);
}

CAPI unsigned long long alt_IMValueInt_GetRefCount(struct alt_IMValueInt* _instance)
{
    return (unsigned long long)static_cast<alt::CRefCountable *>((alt::IMValueInt *)_instance)->GetRefCount();
}

CAPI void alt_IMValueInt_AddRef(struct alt_IMValueInt* _instance)
{
    static_cast<alt::CRefCountable *>((alt::IMValueInt *)_instance)->AddRef();
}

CAPI void alt_IMValueInt_RemoveRef(struct alt_IMValueInt* _instance)
{
    static_cast<alt::CRefCountable *>((alt::IMValueInt *)_instance)->RemoveRef();
}

CAPI void alt_IMValueInt_AddWeakRef(struct alt_IMValueInt* _instance, struct alt_IWeakRef* ref)
{
    static_cast<alt::CRefCountable *>((alt::IMValueInt *)_instance)->AddWeakRef((alt::IWeakRef *)ref);
}

CAPI void alt_IMValueInt_RemoveWeakRef(struct alt_IMValueInt* _instance, struct alt_IWeakRef* ref)
{
    static_cast<alt::CRefCountable *>((alt::IMValueInt *)_instance)->RemoveWeakRef((alt::IWeakRef *)ref);
}

CAPI struct alt_IMValueInt* alt_IMValue_to_alt_IMValueInt(struct alt_IMValue* from)
{
    return (alt_IMValueInt*)dynamic_cast<alt::IMValueInt*>((alt::IMValue*)from);
}

CAPI struct alt_IMValue* alt_IMValueInt_to_alt_IMValue(struct alt_IMValueInt* from)
{
    return (alt_IMValue*)static_cast<alt::IMValue*>((alt::IMValueInt*)from);
}

CAPI alt_IMValue_Type alt_IMValueInt_GetType(struct alt_IMValueInt* _instance)
{
    return (alt_IMValue_Type)static_cast<alt::IMValue *>((alt::IMValueInt *)_instance)->GetType();
}

CAPI struct alt_String* alt_IMValueInt_ToString(struct alt_IMValueInt* _instance)
{
    return (alt_String*)new class alt::String(static_cast<alt::IMValue *>((alt::IMValueInt *)_instance)->ToString());
}

CAPI double alt_IMValueInt_ToNumber(struct alt_IMValueInt* _instance)
{
    return (double)static_cast<alt::IMValue *>((alt::IMValueInt *)_instance)->ToNumber();
}

CAPI struct alt_RefBase_RefStore_IMValue* alt_IMValueInt_Clone(struct alt_IMValueInt* _instance)
{
    return (alt_RefBase_RefStore_IMValue*)new class alt::RefBase<class alt::RefStore<class alt::IMValue> >(static_cast<alt::IMValue *>((alt::IMValueInt *)_instance)->Clone());
}

CAPI long long alt_IMValueInt_Value(struct alt_IMValueInt* _instance)
{
    return (long long)((alt::IMValueInt *)_instance)->Value();
}

CAPI void alt_IMValueUInt_free(struct alt_IMValueUInt* ptr)
{
    delete (class alt::IMValueUInt *)ptr;
}

CAPI struct alt_IMValueUInt* alt_CRefCountable_to_alt_IMValueUInt(struct alt_CRefCountable* from)
{
    return (alt_IMValueUInt*)dynamic_cast<alt::IMValueUInt*>((alt::CRefCountable*)from);
}

CAPI struct alt_CRefCountable* alt_IMValueUInt_to_alt_CRefCountable(struct alt_IMValueUInt* from)
{
    return (alt_CRefCountable*)static_cast<alt::CRefCountable*>((alt::IMValueUInt*)from);
}

CAPI unsigned long long alt_IMValueUInt_GetRefCount(struct alt_IMValueUInt* _instance)
{
    return (unsigned long long)static_cast<alt::CRefCountable *>((alt::IMValueUInt *)_instance)->GetRefCount();
}

CAPI void alt_IMValueUInt_AddRef(struct alt_IMValueUInt* _instance)
{
    static_cast<alt::CRefCountable *>((alt::IMValueUInt *)_instance)->AddRef();
}

CAPI void alt_IMValueUInt_RemoveRef(struct alt_IMValueUInt* _instance)
{
    static_cast<alt::CRefCountable *>((alt::IMValueUInt *)_instance)->RemoveRef();
}

CAPI void alt_IMValueUInt_AddWeakRef(struct alt_IMValueUInt* _instance, struct alt_IWeakRef* ref)
{
    static_cast<alt::CRefCountable *>((alt::IMValueUInt *)_instance)->AddWeakRef((alt::IWeakRef *)ref);
}

CAPI void alt_IMValueUInt_RemoveWeakRef(struct alt_IMValueUInt* _instance, struct alt_IWeakRef* ref)
{
    static_cast<alt::CRefCountable *>((alt::IMValueUInt *)_instance)->RemoveWeakRef((alt::IWeakRef *)ref);
}

CAPI struct alt_IMValueUInt* alt_IMValue_to_alt_IMValueUInt(struct alt_IMValue* from)
{
    return (alt_IMValueUInt*)dynamic_cast<alt::IMValueUInt*>((alt::IMValue*)from);
}

CAPI struct alt_IMValue* alt_IMValueUInt_to_alt_IMValue(struct alt_IMValueUInt* from)
{
    return (alt_IMValue*)static_cast<alt::IMValue*>((alt::IMValueUInt*)from);
}

CAPI alt_IMValue_Type alt_IMValueUInt_GetType(struct alt_IMValueUInt* _instance)
{
    return (alt_IMValue_Type)static_cast<alt::IMValue *>((alt::IMValueUInt *)_instance)->GetType();
}

CAPI struct alt_String* alt_IMValueUInt_ToString(struct alt_IMValueUInt* _instance)
{
    return (alt_String*)new class alt::String(static_cast<alt::IMValue *>((alt::IMValueUInt *)_instance)->ToString());
}

CAPI double alt_IMValueUInt_ToNumber(struct alt_IMValueUInt* _instance)
{
    return (double)static_cast<alt::IMValue *>((alt::IMValueUInt *)_instance)->ToNumber();
}

CAPI struct alt_RefBase_RefStore_IMValue* alt_IMValueUInt_Clone(struct alt_IMValueUInt* _instance)
{
    return (alt_RefBase_RefStore_IMValue*)new class alt::RefBase<class alt::RefStore<class alt::IMValue> >(static_cast<alt::IMValue *>((alt::IMValueUInt *)_instance)->Clone());
}

CAPI unsigned long long alt_IMValueUInt_Value(struct alt_IMValueUInt* _instance)
{
    return (unsigned long long)((alt::IMValueUInt *)_instance)->Value();
}

CAPI void alt_IMValueDouble_free(struct alt_IMValueDouble* ptr)
{
    delete (class alt::IMValueDouble *)ptr;
}

CAPI struct alt_IMValueDouble* alt_CRefCountable_to_alt_IMValueDouble(struct alt_CRefCountable* from)
{
    return (alt_IMValueDouble*)dynamic_cast<alt::IMValueDouble*>((alt::CRefCountable*)from);
}

CAPI struct alt_CRefCountable* alt_IMValueDouble_to_alt_CRefCountable(struct alt_IMValueDouble* from)
{
    return (alt_CRefCountable*)static_cast<alt::CRefCountable*>((alt::IMValueDouble*)from);
}

CAPI unsigned long long alt_IMValueDouble_GetRefCount(struct alt_IMValueDouble* _instance)
{
    return (unsigned long long)static_cast<alt::CRefCountable *>((alt::IMValueDouble *)_instance)->GetRefCount();
}

CAPI void alt_IMValueDouble_AddRef(struct alt_IMValueDouble* _instance)
{
    static_cast<alt::CRefCountable *>((alt::IMValueDouble *)_instance)->AddRef();
}

CAPI void alt_IMValueDouble_RemoveRef(struct alt_IMValueDouble* _instance)
{
    static_cast<alt::CRefCountable *>((alt::IMValueDouble *)_instance)->RemoveRef();
}

CAPI void alt_IMValueDouble_AddWeakRef(struct alt_IMValueDouble* _instance, struct alt_IWeakRef* ref)
{
    static_cast<alt::CRefCountable *>((alt::IMValueDouble *)_instance)->AddWeakRef((alt::IWeakRef *)ref);
}

CAPI void alt_IMValueDouble_RemoveWeakRef(struct alt_IMValueDouble* _instance, struct alt_IWeakRef* ref)
{
    static_cast<alt::CRefCountable *>((alt::IMValueDouble *)_instance)->RemoveWeakRef((alt::IWeakRef *)ref);
}

CAPI struct alt_IMValueDouble* alt_IMValue_to_alt_IMValueDouble(struct alt_IMValue* from)
{
    return (alt_IMValueDouble*)dynamic_cast<alt::IMValueDouble*>((alt::IMValue*)from);
}

CAPI struct alt_IMValue* alt_IMValueDouble_to_alt_IMValue(struct alt_IMValueDouble* from)
{
    return (alt_IMValue*)static_cast<alt::IMValue*>((alt::IMValueDouble*)from);
}

CAPI alt_IMValue_Type alt_IMValueDouble_GetType(struct alt_IMValueDouble* _instance)
{
    return (alt_IMValue_Type)static_cast<alt::IMValue *>((alt::IMValueDouble *)_instance)->GetType();
}

CAPI struct alt_String* alt_IMValueDouble_ToString(struct alt_IMValueDouble* _instance)
{
    return (alt_String*)new class alt::String(static_cast<alt::IMValue *>((alt::IMValueDouble *)_instance)->ToString());
}

CAPI double alt_IMValueDouble_ToNumber(struct alt_IMValueDouble* _instance)
{
    return (double)static_cast<alt::IMValue *>((alt::IMValueDouble *)_instance)->ToNumber();
}

CAPI struct alt_RefBase_RefStore_IMValue* alt_IMValueDouble_Clone(struct alt_IMValueDouble* _instance)
{
    return (alt_RefBase_RefStore_IMValue*)new class alt::RefBase<class alt::RefStore<class alt::IMValue> >(static_cast<alt::IMValue *>((alt::IMValueDouble *)_instance)->Clone());
}

CAPI double alt_IMValueDouble_Value(struct alt_IMValueDouble* _instance)
{
    return (double)((alt::IMValueDouble *)_instance)->Value();
}

CAPI void alt_IMValueString_free(struct alt_IMValueString* ptr)
{
    delete (class alt::IMValueString *)ptr;
}

CAPI struct alt_IMValueString* alt_CRefCountable_to_alt_IMValueString(struct alt_CRefCountable* from)
{
    return (alt_IMValueString*)dynamic_cast<alt::IMValueString*>((alt::CRefCountable*)from);
}

CAPI struct alt_CRefCountable* alt_IMValueString_to_alt_CRefCountable(struct alt_IMValueString* from)
{
    return (alt_CRefCountable*)static_cast<alt::CRefCountable*>((alt::IMValueString*)from);
}

CAPI unsigned long long alt_IMValueString_GetRefCount(struct alt_IMValueString* _instance)
{
    return (unsigned long long)static_cast<alt::CRefCountable *>((alt::IMValueString *)_instance)->GetRefCount();
}

CAPI void alt_IMValueString_AddRef(struct alt_IMValueString* _instance)
{
    static_cast<alt::CRefCountable *>((alt::IMValueString *)_instance)->AddRef();
}

CAPI void alt_IMValueString_RemoveRef(struct alt_IMValueString* _instance)
{
    static_cast<alt::CRefCountable *>((alt::IMValueString *)_instance)->RemoveRef();
}

CAPI void alt_IMValueString_AddWeakRef(struct alt_IMValueString* _instance, struct alt_IWeakRef* ref)
{
    static_cast<alt::CRefCountable *>((alt::IMValueString *)_instance)->AddWeakRef((alt::IWeakRef *)ref);
}

CAPI void alt_IMValueString_RemoveWeakRef(struct alt_IMValueString* _instance, struct alt_IWeakRef* ref)
{
    static_cast<alt::CRefCountable *>((alt::IMValueString *)_instance)->RemoveWeakRef((alt::IWeakRef *)ref);
}

CAPI struct alt_IMValueString* alt_IMValue_to_alt_IMValueString(struct alt_IMValue* from)
{
    return (alt_IMValueString*)dynamic_cast<alt::IMValueString*>((alt::IMValue*)from);
}

CAPI struct alt_IMValue* alt_IMValueString_to_alt_IMValue(struct alt_IMValueString* from)
{
    return (alt_IMValue*)static_cast<alt::IMValue*>((alt::IMValueString*)from);
}

CAPI alt_IMValue_Type alt_IMValueString_GetType(struct alt_IMValueString* _instance)
{
    return (alt_IMValue_Type)static_cast<alt::IMValue *>((alt::IMValueString *)_instance)->GetType();
}

CAPI struct alt_String* alt_IMValueString_ToString(struct alt_IMValueString* _instance)
{
    return (alt_String*)new class alt::String(static_cast<alt::IMValue *>((alt::IMValueString *)_instance)->ToString());
}

CAPI double alt_IMValueString_ToNumber(struct alt_IMValueString* _instance)
{
    return (double)static_cast<alt::IMValue *>((alt::IMValueString *)_instance)->ToNumber();
}

CAPI struct alt_RefBase_RefStore_IMValue* alt_IMValueString_Clone(struct alt_IMValueString* _instance)
{
    return (alt_RefBase_RefStore_IMValue*)new class alt::RefBase<class alt::RefStore<class alt::IMValue> >(static_cast<alt::IMValue *>((alt::IMValueString *)_instance)->Clone());
}

CAPI struct alt_StringView* alt_IMValueString_Value(struct alt_IMValueString* _instance)
{
    return (alt_StringView*)new class alt::StringView(((alt::IMValueString *)_instance)->Value());
}

CAPI void alt_IMValueList_free(struct alt_IMValueList* ptr)
{
    delete (class alt::IMValueList *)ptr;
}

CAPI struct alt_IMValueList* alt_CRefCountable_to_alt_IMValueList(struct alt_CRefCountable* from)
{
    return (alt_IMValueList*)dynamic_cast<alt::IMValueList*>((alt::CRefCountable*)from);
}

CAPI struct alt_CRefCountable* alt_IMValueList_to_alt_CRefCountable(struct alt_IMValueList* from)
{
    return (alt_CRefCountable*)static_cast<alt::CRefCountable*>((alt::IMValueList*)from);
}

CAPI unsigned long long alt_IMValueList_GetRefCount(struct alt_IMValueList* _instance)
{
    return (unsigned long long)static_cast<alt::CRefCountable *>((alt::IMValueList *)_instance)->GetRefCount();
}

CAPI void alt_IMValueList_AddRef(struct alt_IMValueList* _instance)
{
    static_cast<alt::CRefCountable *>((alt::IMValueList *)_instance)->AddRef();
}

CAPI void alt_IMValueList_RemoveRef(struct alt_IMValueList* _instance)
{
    static_cast<alt::CRefCountable *>((alt::IMValueList *)_instance)->RemoveRef();
}

CAPI void alt_IMValueList_AddWeakRef(struct alt_IMValueList* _instance, struct alt_IWeakRef* ref)
{
    static_cast<alt::CRefCountable *>((alt::IMValueList *)_instance)->AddWeakRef((alt::IWeakRef *)ref);
}

CAPI void alt_IMValueList_RemoveWeakRef(struct alt_IMValueList* _instance, struct alt_IWeakRef* ref)
{
    static_cast<alt::CRefCountable *>((alt::IMValueList *)_instance)->RemoveWeakRef((alt::IWeakRef *)ref);
}

CAPI struct alt_IMValueList* alt_IMValue_to_alt_IMValueList(struct alt_IMValue* from)
{
    return (alt_IMValueList*)dynamic_cast<alt::IMValueList*>((alt::IMValue*)from);
}

CAPI struct alt_IMValue* alt_IMValueList_to_alt_IMValue(struct alt_IMValueList* from)
{
    return (alt_IMValue*)static_cast<alt::IMValue*>((alt::IMValueList*)from);
}

CAPI alt_IMValue_Type alt_IMValueList_GetType(struct alt_IMValueList* _instance)
{
    return (alt_IMValue_Type)static_cast<alt::IMValue *>((alt::IMValueList *)_instance)->GetType();
}

CAPI struct alt_String* alt_IMValueList_ToString(struct alt_IMValueList* _instance)
{
    return (alt_String*)new class alt::String(static_cast<alt::IMValue *>((alt::IMValueList *)_instance)->ToString());
}

CAPI double alt_IMValueList_ToNumber(struct alt_IMValueList* _instance)
{
    return (double)static_cast<alt::IMValue *>((alt::IMValueList *)_instance)->ToNumber();
}

CAPI struct alt_RefBase_RefStore_IMValue* alt_IMValueList_Clone(struct alt_IMValueList* _instance)
{
    return (alt_RefBase_RefStore_IMValue*)new class alt::RefBase<class alt::RefStore<class alt::IMValue> >(static_cast<alt::IMValue *>((alt::IMValueList *)_instance)->Clone());
}

CAPI unsigned long long alt_IMValueList_GetSize(struct alt_IMValueList* _instance)
{
    return (unsigned long long)((alt::IMValueList *)_instance)->GetSize();
}

CAPI struct alt_RefBase_RefStore_IMValue* alt_IMValueList_Get(struct alt_IMValueList* _instance, unsigned long long i)
{
    return (alt_RefBase_RefStore_IMValue*)new class alt::RefBase<class alt::RefStore<class alt::IMValue> >(((alt::IMValueList *)_instance)->Get((alt::Size)i));
}

CAPI struct alt_RefBase_RefStore_constIMValue* alt_IMValueList_Get_1(struct alt_IMValueList* _instance, unsigned long long i)
{
    return (alt_RefBase_RefStore_constIMValue*)new class alt::RefBase<class alt::RefStore<const class alt::IMValue> >(((alt::IMValueList *)_instance)->Get((alt::Size)i));
}

CAPI void alt_IMValueList_Set(struct alt_IMValueList* _instance, unsigned long long i, struct alt_RefBase_RefStore_IMValue* val)
{
    ((alt::IMValueList *)_instance)->Set((alt::Size)i, *(alt::MValue*)val);
}

CAPI void alt_IMValueList_Push(struct alt_IMValueList* _instance, struct alt_RefBase_RefStore_IMValue* val)
{
    ((alt::IMValueList *)_instance)->Push(*(alt::MValue*)val);
}

CAPI void alt_IMValueList_SetConst(struct alt_IMValueList* _instance, unsigned long long i, struct alt_RefBase_RefStore_constIMValue* val)
{
    ((alt::IMValueList *)_instance)->SetConst((alt::Size)i, *(alt::MValueConst*)val);
}

CAPI void alt_IMValueList_PushConst(struct alt_IMValueList* _instance, struct alt_RefBase_RefStore_constIMValue* val)
{
    ((alt::IMValueList *)_instance)->PushConst(*(alt::MValueConst*)val);
}

CAPI void alt_IMValueDict_free(struct alt_IMValueDict* ptr)
{
    delete (class alt::IMValueDict *)ptr;
}

CAPI struct alt_IMValueDict* alt_CRefCountable_to_alt_IMValueDict(struct alt_CRefCountable* from)
{
    return (alt_IMValueDict*)dynamic_cast<alt::IMValueDict*>((alt::CRefCountable*)from);
}

CAPI struct alt_CRefCountable* alt_IMValueDict_to_alt_CRefCountable(struct alt_IMValueDict* from)
{
    return (alt_CRefCountable*)static_cast<alt::CRefCountable*>((alt::IMValueDict*)from);
}

CAPI unsigned long long alt_IMValueDict_GetRefCount(struct alt_IMValueDict* _instance)
{
    return (unsigned long long)static_cast<alt::CRefCountable *>((alt::IMValueDict *)_instance)->GetRefCount();
}

CAPI void alt_IMValueDict_AddRef(struct alt_IMValueDict* _instance)
{
    static_cast<alt::CRefCountable *>((alt::IMValueDict *)_instance)->AddRef();
}

CAPI void alt_IMValueDict_RemoveRef(struct alt_IMValueDict* _instance)
{
    static_cast<alt::CRefCountable *>((alt::IMValueDict *)_instance)->RemoveRef();
}

CAPI void alt_IMValueDict_AddWeakRef(struct alt_IMValueDict* _instance, struct alt_IWeakRef* ref)
{
    static_cast<alt::CRefCountable *>((alt::IMValueDict *)_instance)->AddWeakRef((alt::IWeakRef *)ref);
}

CAPI void alt_IMValueDict_RemoveWeakRef(struct alt_IMValueDict* _instance, struct alt_IWeakRef* ref)
{
    static_cast<alt::CRefCountable *>((alt::IMValueDict *)_instance)->RemoveWeakRef((alt::IWeakRef *)ref);
}

CAPI struct alt_IMValueDict* alt_IMValue_to_alt_IMValueDict(struct alt_IMValue* from)
{
    return (alt_IMValueDict*)dynamic_cast<alt::IMValueDict*>((alt::IMValue*)from);
}

CAPI struct alt_IMValue* alt_IMValueDict_to_alt_IMValue(struct alt_IMValueDict* from)
{
    return (alt_IMValue*)static_cast<alt::IMValue*>((alt::IMValueDict*)from);
}

CAPI alt_IMValue_Type alt_IMValueDict_GetType(struct alt_IMValueDict* _instance)
{
    return (alt_IMValue_Type)static_cast<alt::IMValue *>((alt::IMValueDict *)_instance)->GetType();
}

CAPI struct alt_String* alt_IMValueDict_ToString(struct alt_IMValueDict* _instance)
{
    return (alt_String*)new class alt::String(static_cast<alt::IMValue *>((alt::IMValueDict *)_instance)->ToString());
}

CAPI double alt_IMValueDict_ToNumber(struct alt_IMValueDict* _instance)
{
    return (double)static_cast<alt::IMValue *>((alt::IMValueDict *)_instance)->ToNumber();
}

CAPI struct alt_RefBase_RefStore_IMValue* alt_IMValueDict_Clone(struct alt_IMValueDict* _instance)
{
    return (alt_RefBase_RefStore_IMValue*)new class alt::RefBase<class alt::RefStore<class alt::IMValue> >(static_cast<alt::IMValue *>((alt::IMValueDict *)_instance)->Clone());
}

CAPI unsigned long long alt_IMValueDict_GetSize(struct alt_IMValueDict* _instance)
{
    return (unsigned long long)((alt::IMValueDict *)_instance)->GetSize();
}

CAPI struct alt_RefBase_RefStore_IMValue* alt_IMValueDict_Get(struct alt_IMValueDict* _instance, struct alt_String* key)
{
    return (alt_RefBase_RefStore_IMValue*)new class alt::RefBase<class alt::RefStore<class alt::IMValue> >(((alt::IMValueDict *)_instance)->Get(*(alt::String*)key));
}

CAPI struct alt_RefBase_RefStore_constIMValue* alt_IMValueDict_Get_1(struct alt_IMValueDict* _instance, struct alt_String* key)
{
    return (alt_RefBase_RefStore_constIMValue*)new class alt::RefBase<class alt::RefStore<const class alt::IMValue> >(((alt::IMValueDict *)_instance)->Get(*(alt::String*)key));
}

CAPI void alt_IMValueDict_Set(struct alt_IMValueDict* _instance, struct alt_String* key, struct alt_RefBase_RefStore_IMValue* val)
{
    ((alt::IMValueDict *)_instance)->Set(*(alt::String*)key, *(alt::MValue*)val);
}

CAPI void alt_IMValueDict_SetConst(struct alt_IMValueDict* _instance, struct alt_String* key, struct alt_RefBase_RefStore_constIMValue* val)
{
    ((alt::IMValueDict *)_instance)->SetConst(*(alt::String*)key, *(alt::MValueConst*)val);
}

CAPI void alt_IMValueDict_Delete(struct alt_IMValueDict* _instance, struct alt_String* key)
{
    ((alt::IMValueDict *)_instance)->Delete(*(alt::String*)key);
}

CAPI struct alt_IMValueDict_Iterator* alt_IMValueDict_Begin(struct alt_IMValueDict* _instance)
{
    return (alt_IMValueDict_Iterator*)((alt::IMValueDict *)_instance)->Begin();
}

CAPI struct alt_IMValueDict_Iterator* alt_IMValueDict_Next(struct alt_IMValueDict* _instance)
{
    return (alt_IMValueDict_Iterator*)((alt::IMValueDict *)_instance)->Next();
}

CAPI void alt_IMValueDict_Iterator_free(struct alt_IMValueDict_Iterator* ptr)
{
    delete (class alt::IMValueDict::Iterator *)ptr;
}

CAPI struct alt_String* alt_IMValueDict_Iterator_GetKey(struct alt_IMValueDict_Iterator* _instance)
{
    return (alt_String*)new class alt::String(((alt::IMValueDict::Iterator *)_instance)->GetKey());
}

CAPI struct alt_RefBase_RefStore_constIMValue* alt_IMValueDict_Iterator_GetValue(struct alt_IMValueDict_Iterator* _instance)
{
    return (alt_RefBase_RefStore_constIMValue*)new class alt::RefBase<class alt::RefStore<const class alt::IMValue> >(((alt::IMValueDict::Iterator *)_instance)->GetValue());
}

CAPI void alt_IMValueDict_Iterator_Assign_constIMValueDict_IteratorRef(struct alt_IMValueDict_Iterator* _instance, struct alt_IMValueDict_Iterator* _p0)
{
    ((alt::IMValueDict::Iterator *)_instance)->operator=(*(const alt::IMValueDict::Iterator *)_p0);
}

CAPI void alt_IMValueDict_Iterator_Assign_IMValueDict_IteratorRefRef(struct alt_IMValueDict_Iterator* _instance, struct alt_IMValueDict_Iterator* _p0)
{
    ((alt::IMValueDict::Iterator *)_instance)->operator=(*(alt::IMValueDict::Iterator *)_p0);
}

CAPI void alt_IMValueBaseObject_free(struct alt_IMValueBaseObject* ptr)
{
    delete (class alt::IMValueBaseObject *)ptr;
}

CAPI struct alt_IMValueBaseObject* alt_CRefCountable_to_alt_IMValueBaseObject(struct alt_CRefCountable* from)
{
    return (alt_IMValueBaseObject*)dynamic_cast<alt::IMValueBaseObject*>((alt::CRefCountable*)from);
}

CAPI struct alt_CRefCountable* alt_IMValueBaseObject_to_alt_CRefCountable(struct alt_IMValueBaseObject* from)
{
    return (alt_CRefCountable*)static_cast<alt::CRefCountable*>((alt::IMValueBaseObject*)from);
}

CAPI unsigned long long alt_IMValueBaseObject_GetRefCount(struct alt_IMValueBaseObject* _instance)
{
    return (unsigned long long)static_cast<alt::CRefCountable *>((alt::IMValueBaseObject *)_instance)->GetRefCount();
}

CAPI void alt_IMValueBaseObject_AddRef(struct alt_IMValueBaseObject* _instance)
{
    static_cast<alt::CRefCountable *>((alt::IMValueBaseObject *)_instance)->AddRef();
}

CAPI void alt_IMValueBaseObject_RemoveRef(struct alt_IMValueBaseObject* _instance)
{
    static_cast<alt::CRefCountable *>((alt::IMValueBaseObject *)_instance)->RemoveRef();
}

CAPI void alt_IMValueBaseObject_AddWeakRef(struct alt_IMValueBaseObject* _instance, struct alt_IWeakRef* ref)
{
    static_cast<alt::CRefCountable *>((alt::IMValueBaseObject *)_instance)->AddWeakRef((alt::IWeakRef *)ref);
}

CAPI void alt_IMValueBaseObject_RemoveWeakRef(struct alt_IMValueBaseObject* _instance, struct alt_IWeakRef* ref)
{
    static_cast<alt::CRefCountable *>((alt::IMValueBaseObject *)_instance)->RemoveWeakRef((alt::IWeakRef *)ref);
}

CAPI struct alt_IMValueBaseObject* alt_IMValue_to_alt_IMValueBaseObject(struct alt_IMValue* from)
{
    return (alt_IMValueBaseObject*)dynamic_cast<alt::IMValueBaseObject*>((alt::IMValue*)from);
}

CAPI struct alt_IMValue* alt_IMValueBaseObject_to_alt_IMValue(struct alt_IMValueBaseObject* from)
{
    return (alt_IMValue*)static_cast<alt::IMValue*>((alt::IMValueBaseObject*)from);
}

CAPI alt_IMValue_Type alt_IMValueBaseObject_GetType(struct alt_IMValueBaseObject* _instance)
{
    return (alt_IMValue_Type)static_cast<alt::IMValue *>((alt::IMValueBaseObject *)_instance)->GetType();
}

CAPI struct alt_String* alt_IMValueBaseObject_ToString(struct alt_IMValueBaseObject* _instance)
{
    return (alt_String*)new class alt::String(static_cast<alt::IMValue *>((alt::IMValueBaseObject *)_instance)->ToString());
}

CAPI double alt_IMValueBaseObject_ToNumber(struct alt_IMValueBaseObject* _instance)
{
    return (double)static_cast<alt::IMValue *>((alt::IMValueBaseObject *)_instance)->ToNumber();
}

CAPI struct alt_RefBase_RefStore_IMValue* alt_IMValueBaseObject_Clone(struct alt_IMValueBaseObject* _instance)
{
    return (alt_RefBase_RefStore_IMValue*)new class alt::RefBase<class alt::RefStore<class alt::IMValue> >(static_cast<alt::IMValue *>((alt::IMValueBaseObject *)_instance)->Clone());
}

CAPI struct alt_RefBase_RefStore_IBaseObject* alt_IMValueBaseObject_Value(struct alt_IMValueBaseObject* _instance)
{
    return (alt_RefBase_RefStore_IBaseObject*)new class alt::RefBase<class alt::RefStore<class alt::IBaseObject> >(((alt::IMValueBaseObject *)_instance)->Value());
}

CAPI void alt_IMValueFunction_free(struct alt_IMValueFunction* ptr)
{
    delete (class alt::IMValueFunction *)ptr;
}

CAPI struct alt_IMValueFunction* alt_CRefCountable_to_alt_IMValueFunction(struct alt_CRefCountable* from)
{
    return (alt_IMValueFunction*)dynamic_cast<alt::IMValueFunction*>((alt::CRefCountable*)from);
}

CAPI struct alt_CRefCountable* alt_IMValueFunction_to_alt_CRefCountable(struct alt_IMValueFunction* from)
{
    return (alt_CRefCountable*)static_cast<alt::CRefCountable*>((alt::IMValueFunction*)from);
}

CAPI unsigned long long alt_IMValueFunction_GetRefCount(struct alt_IMValueFunction* _instance)
{
    return (unsigned long long)static_cast<alt::CRefCountable *>((alt::IMValueFunction *)_instance)->GetRefCount();
}

CAPI void alt_IMValueFunction_AddRef(struct alt_IMValueFunction* _instance)
{
    static_cast<alt::CRefCountable *>((alt::IMValueFunction *)_instance)->AddRef();
}

CAPI void alt_IMValueFunction_RemoveRef(struct alt_IMValueFunction* _instance)
{
    static_cast<alt::CRefCountable *>((alt::IMValueFunction *)_instance)->RemoveRef();
}

CAPI void alt_IMValueFunction_AddWeakRef(struct alt_IMValueFunction* _instance, struct alt_IWeakRef* ref)
{
    static_cast<alt::CRefCountable *>((alt::IMValueFunction *)_instance)->AddWeakRef((alt::IWeakRef *)ref);
}

CAPI void alt_IMValueFunction_RemoveWeakRef(struct alt_IMValueFunction* _instance, struct alt_IWeakRef* ref)
{
    static_cast<alt::CRefCountable *>((alt::IMValueFunction *)_instance)->RemoveWeakRef((alt::IWeakRef *)ref);
}

CAPI struct alt_IMValueFunction* alt_IMValue_to_alt_IMValueFunction(struct alt_IMValue* from)
{
    return (alt_IMValueFunction*)dynamic_cast<alt::IMValueFunction*>((alt::IMValue*)from);
}

CAPI struct alt_IMValue* alt_IMValueFunction_to_alt_IMValue(struct alt_IMValueFunction* from)
{
    return (alt_IMValue*)static_cast<alt::IMValue*>((alt::IMValueFunction*)from);
}

CAPI alt_IMValue_Type alt_IMValueFunction_GetType(struct alt_IMValueFunction* _instance)
{
    return (alt_IMValue_Type)static_cast<alt::IMValue *>((alt::IMValueFunction *)_instance)->GetType();
}

CAPI struct alt_String* alt_IMValueFunction_ToString(struct alt_IMValueFunction* _instance)
{
    return (alt_String*)new class alt::String(static_cast<alt::IMValue *>((alt::IMValueFunction *)_instance)->ToString());
}

CAPI double alt_IMValueFunction_ToNumber(struct alt_IMValueFunction* _instance)
{
    return (double)static_cast<alt::IMValue *>((alt::IMValueFunction *)_instance)->ToNumber();
}

CAPI struct alt_RefBase_RefStore_IMValue* alt_IMValueFunction_Clone(struct alt_IMValueFunction* _instance)
{
    return (alt_RefBase_RefStore_IMValue*)new class alt::RefBase<class alt::RefStore<class alt::IMValue> >(static_cast<alt::IMValue *>((alt::IMValueFunction *)_instance)->Clone());
}

CAPI struct alt_RefBase_RefStore_IMValue* alt_IMValueFunction_Call(struct alt_IMValueFunction* _instance, struct alt_Array_RefBase_RefStore_constIMValue* args)
{
    return (alt_RefBase_RefStore_IMValue*)new class alt::RefBase<class alt::RefStore<class alt::IMValue> >(((alt::IMValueFunction *)_instance)->Call(*(alt::MValueArgs*)args));
}

CAPI struct alt_RefBase_RefStore_IMValue* alt_IMValueFunction_Impl_Call(struct alt_IMValueFunction_Impl* _instance, struct alt_Array_RefBase_RefStore_constIMValue* args)
{
    return (alt_RefBase_RefStore_IMValue*)new class alt::RefBase<class alt::RefStore<class alt::IMValue> >(((alt::IMValueFunction::Impl *)_instance)->Call(*(alt::MValueArgs*)args));
}

CAPI void alt_IMValueFunction_Impl_AddRef(struct alt_IMValueFunction_Impl* _instance)
{
    ((alt::IMValueFunction::Impl *)_instance)->AddRef();
}

CAPI void alt_IMValueFunction_Impl_RemoveRef(struct alt_IMValueFunction_Impl* _instance)
{
    ((alt::IMValueFunction::Impl *)_instance)->RemoveRef();
}

CAPI void alt_IMValueFunction_Impl_Assign_constIMValueFunction_ImplRef(struct alt_IMValueFunction_Impl* _instance, struct alt_IMValueFunction_Impl* _p0)
{
    ((alt::IMValueFunction::Impl *)_instance)->operator=(*(const alt::IMValueFunction::Impl *)_p0);
}

CAPI struct alt_IBaseObject* alt_CRefCountable_to_alt_IBaseObject(struct alt_CRefCountable* from)
{
    return (alt_IBaseObject*)dynamic_cast<alt::IBaseObject*>((alt::CRefCountable*)from);
}

CAPI struct alt_CRefCountable* alt_IBaseObject_to_alt_CRefCountable(struct alt_IBaseObject* from)
{
    return (alt_CRefCountable*)static_cast<alt::CRefCountable*>((alt::IBaseObject*)from);
}

CAPI unsigned long long alt_IBaseObject_GetRefCount(struct alt_IBaseObject* _instance)
{
    return (unsigned long long)static_cast<alt::CRefCountable *>((alt::IBaseObject *)_instance)->GetRefCount();
}

CAPI void alt_IBaseObject_AddRef(struct alt_IBaseObject* _instance)
{
    static_cast<alt::CRefCountable *>((alt::IBaseObject *)_instance)->AddRef();
}

CAPI void alt_IBaseObject_RemoveRef(struct alt_IBaseObject* _instance)
{
    static_cast<alt::CRefCountable *>((alt::IBaseObject *)_instance)->RemoveRef();
}

CAPI void alt_IBaseObject_AddWeakRef(struct alt_IBaseObject* _instance, struct alt_IWeakRef* ref)
{
    static_cast<alt::CRefCountable *>((alt::IBaseObject *)_instance)->AddWeakRef((alt::IWeakRef *)ref);
}

CAPI void alt_IBaseObject_RemoveWeakRef(struct alt_IBaseObject* _instance, struct alt_IWeakRef* ref)
{
    static_cast<alt::CRefCountable *>((alt::IBaseObject *)_instance)->RemoveWeakRef((alt::IWeakRef *)ref);
}

CAPI alt_IBaseObject_Type alt_IBaseObject_GetType(struct alt_IBaseObject* _instance)
{
    return (alt_IBaseObject_Type)((alt::IBaseObject *)_instance)->GetType();
}

CAPI struct alt_RefBase_RefStore_constIMValue* alt_IBaseObject_GetMetaData(struct alt_IBaseObject* _instance, struct alt_StringView* key)
{
    return (alt_RefBase_RefStore_constIMValue*)new class alt::RefBase<class alt::RefStore<const class alt::IMValue> >(((alt::IBaseObject *)_instance)->GetMetaData(*(alt::StringView*)key));
}

CAPI void alt_IBaseObject_SetMetaData(struct alt_IBaseObject* _instance, struct alt_StringView* key, struct alt_RefBase_RefStore_IMValue* val)
{
    ((alt::IBaseObject *)_instance)->SetMetaData(*(alt::StringView*)key, *(alt::MValue*)val);
}

CAPI struct alt_IWorldObject* alt_CRefCountable_to_alt_IWorldObject(struct alt_CRefCountable* from)
{
    return (alt_IWorldObject*)dynamic_cast<alt::IWorldObject*>((alt::CRefCountable*)from);
}

CAPI struct alt_CRefCountable* alt_IWorldObject_to_alt_CRefCountable(struct alt_IWorldObject* from)
{
    return (alt_CRefCountable*)static_cast<alt::CRefCountable*>((alt::IWorldObject*)from);
}

CAPI unsigned long long alt_IWorldObject_GetRefCount(struct alt_IWorldObject* _instance)
{
    return (unsigned long long)static_cast<alt::CRefCountable *>((alt::IWorldObject *)_instance)->GetRefCount();
}

CAPI void alt_IWorldObject_AddRef(struct alt_IWorldObject* _instance)
{
    static_cast<alt::CRefCountable *>((alt::IWorldObject *)_instance)->AddRef();
}

CAPI void alt_IWorldObject_RemoveRef(struct alt_IWorldObject* _instance)
{
    static_cast<alt::CRefCountable *>((alt::IWorldObject *)_instance)->RemoveRef();
}

CAPI void alt_IWorldObject_AddWeakRef(struct alt_IWorldObject* _instance, struct alt_IWeakRef* ref)
{
    static_cast<alt::CRefCountable *>((alt::IWorldObject *)_instance)->AddWeakRef((alt::IWeakRef *)ref);
}

CAPI void alt_IWorldObject_RemoveWeakRef(struct alt_IWorldObject* _instance, struct alt_IWeakRef* ref)
{
    static_cast<alt::CRefCountable *>((alt::IWorldObject *)_instance)->RemoveWeakRef((alt::IWeakRef *)ref);
}

CAPI struct alt_IWorldObject* alt_IBaseObject_to_alt_IWorldObject(struct alt_IBaseObject* from)
{
    return (alt_IWorldObject*)dynamic_cast<alt::IWorldObject*>((alt::IBaseObject*)from);
}

CAPI struct alt_IBaseObject* alt_IWorldObject_to_alt_IBaseObject(struct alt_IWorldObject* from)
{
    return (alt_IBaseObject*)static_cast<alt::IBaseObject*>((alt::IWorldObject*)from);
}

CAPI alt_IBaseObject_Type alt_IWorldObject_GetType(struct alt_IWorldObject* _instance)
{
    return (alt_IBaseObject_Type)static_cast<alt::IBaseObject *>((alt::IWorldObject *)_instance)->GetType();
}

CAPI struct alt_RefBase_RefStore_constIMValue* alt_IWorldObject_GetMetaData(struct alt_IWorldObject* _instance, struct alt_StringView* key)
{
    return (alt_RefBase_RefStore_constIMValue*)new class alt::RefBase<class alt::RefStore<const class alt::IMValue> >(static_cast<alt::IBaseObject *>((alt::IWorldObject *)_instance)->GetMetaData(*(alt::StringView*)key));
}

CAPI void alt_IWorldObject_SetMetaData(struct alt_IWorldObject* _instance, struct alt_StringView* key, struct alt_RefBase_RefStore_IMValue* val)
{
    static_cast<alt::IBaseObject *>((alt::IWorldObject *)_instance)->SetMetaData(*(alt::StringView*)key, *(alt::MValue*)val);
}

CAPI struct alt_Vector_float_3_PointLayout* alt_IWorldObject_GetPosition(struct alt_IWorldObject* _instance)
{
    return (alt_Vector_float_3_PointLayout*)new class alt::Vector<float, 3, class alt::PointLayout>(((alt::IWorldObject *)_instance)->GetPosition());
}

CAPI void alt_IWorldObject_SetPosition(struct alt_IWorldObject* _instance, struct alt_Vector_float_3_PointLayout* pos)
{
    ((alt::IWorldObject *)_instance)->SetPosition(*(alt::Position*)pos);
}

CAPI int alt_IWorldObject_GetDimension(struct alt_IWorldObject* _instance)
{
    return (int)((alt::IWorldObject *)_instance)->GetDimension();
}

CAPI void alt_IWorldObject_SetDimension(struct alt_IWorldObject* _instance, int dimension)
{
    ((alt::IWorldObject *)_instance)->SetDimension((int32_t)dimension);
}

CAPI struct alt_IEntity* alt_CRefCountable_to_alt_IEntity(struct alt_CRefCountable* from)
{
    return (alt_IEntity*)dynamic_cast<alt::IEntity*>((alt::CRefCountable*)from);
}

CAPI struct alt_CRefCountable* alt_IEntity_to_alt_CRefCountable(struct alt_IEntity* from)
{
    return (alt_CRefCountable*)static_cast<alt::CRefCountable*>((alt::IEntity*)from);
}

CAPI unsigned long long alt_IEntity_GetRefCount(struct alt_IEntity* _instance)
{
    return (unsigned long long)static_cast<alt::CRefCountable *>((alt::IEntity *)_instance)->GetRefCount();
}

CAPI void alt_IEntity_AddRef(struct alt_IEntity* _instance)
{
    static_cast<alt::CRefCountable *>((alt::IEntity *)_instance)->AddRef();
}

CAPI void alt_IEntity_RemoveRef(struct alt_IEntity* _instance)
{
    static_cast<alt::CRefCountable *>((alt::IEntity *)_instance)->RemoveRef();
}

CAPI void alt_IEntity_AddWeakRef(struct alt_IEntity* _instance, struct alt_IWeakRef* ref)
{
    static_cast<alt::CRefCountable *>((alt::IEntity *)_instance)->AddWeakRef((alt::IWeakRef *)ref);
}

CAPI void alt_IEntity_RemoveWeakRef(struct alt_IEntity* _instance, struct alt_IWeakRef* ref)
{
    static_cast<alt::CRefCountable *>((alt::IEntity *)_instance)->RemoveWeakRef((alt::IWeakRef *)ref);
}

CAPI struct alt_IEntity* alt_IBaseObject_to_alt_IEntity(struct alt_IBaseObject* from)
{
    return (alt_IEntity*)dynamic_cast<alt::IEntity*>((alt::IBaseObject*)from);
}

CAPI struct alt_IBaseObject* alt_IEntity_to_alt_IBaseObject(struct alt_IEntity* from)
{
    return (alt_IBaseObject*)static_cast<alt::IBaseObject*>((alt::IEntity*)from);
}

CAPI alt_IBaseObject_Type alt_IEntity_GetType(struct alt_IEntity* _instance)
{
    return (alt_IBaseObject_Type)static_cast<alt::IBaseObject *>((alt::IEntity *)_instance)->GetType();
}

CAPI struct alt_RefBase_RefStore_constIMValue* alt_IEntity_GetMetaData(struct alt_IEntity* _instance, struct alt_StringView* key)
{
    return (alt_RefBase_RefStore_constIMValue*)new class alt::RefBase<class alt::RefStore<const class alt::IMValue> >(static_cast<alt::IBaseObject *>((alt::IEntity *)_instance)->GetMetaData(*(alt::StringView*)key));
}

CAPI void alt_IEntity_SetMetaData(struct alt_IEntity* _instance, struct alt_StringView* key, struct alt_RefBase_RefStore_IMValue* val)
{
    static_cast<alt::IBaseObject *>((alt::IEntity *)_instance)->SetMetaData(*(alt::StringView*)key, *(alt::MValue*)val);
}

CAPI struct alt_IEntity* alt_IWorldObject_to_alt_IEntity(struct alt_IWorldObject* from)
{
    return (alt_IEntity*)dynamic_cast<alt::IEntity*>((alt::IWorldObject*)from);
}

CAPI struct alt_IWorldObject* alt_IEntity_to_alt_IWorldObject(struct alt_IEntity* from)
{
    return (alt_IWorldObject*)static_cast<alt::IWorldObject*>((alt::IEntity*)from);
}

CAPI struct alt_Vector_float_3_PointLayout* alt_IEntity_GetPosition(struct alt_IEntity* _instance)
{
    return (alt_Vector_float_3_PointLayout*)new class alt::Vector<float, 3, class alt::PointLayout>(static_cast<alt::IWorldObject *>((alt::IEntity *)_instance)->GetPosition());
}

CAPI void alt_IEntity_SetPosition(struct alt_IEntity* _instance, struct alt_Vector_float_3_PointLayout* pos)
{
    static_cast<alt::IWorldObject *>((alt::IEntity *)_instance)->SetPosition(*(alt::Position*)pos);
}

CAPI int alt_IEntity_GetDimension(struct alt_IEntity* _instance)
{
    return (int)static_cast<alt::IWorldObject *>((alt::IEntity *)_instance)->GetDimension();
}

CAPI void alt_IEntity_SetDimension(struct alt_IEntity* _instance, int dimension)
{
    static_cast<alt::IWorldObject *>((alt::IEntity *)_instance)->SetDimension((int32_t)dimension);
}

CAPI unsigned short alt_IEntity_GetID(struct alt_IEntity* _instance)
{
    return (unsigned short)((alt::IEntity *)_instance)->GetID();
}

CAPI struct alt_RefBase_RefStore_IPlayer* alt_IEntity_GetNetworkOwner(struct alt_IEntity* _instance)
{
    return (alt_RefBase_RefStore_IPlayer*)new class alt::RefBase<class alt::RefStore<class alt::IPlayer> >(((alt::IEntity *)_instance)->GetNetworkOwner());
}

CAPI unsigned int alt_IEntity_GetModel(struct alt_IEntity* _instance)
{
    return (unsigned int)((alt::IEntity *)_instance)->GetModel();
}

CAPI struct alt_Vector_float_3_RotationLayout* alt_IEntity_GetRotation(struct alt_IEntity* _instance)
{
    return (alt_Vector_float_3_RotationLayout*)new class alt::Vector<float, 3, class alt::RotationLayout>(((alt::IEntity *)_instance)->GetRotation());
}

CAPI void alt_IEntity_SetRotation(struct alt_IEntity* _instance, struct alt_Vector_float_3_RotationLayout* rot)
{
    ((alt::IEntity *)_instance)->SetRotation(*(alt::Rotation*)rot);
}

CAPI struct alt_RefBase_RefStore_constIMValue* alt_IEntity_GetSyncedMetaData(struct alt_IEntity* _instance, struct alt_StringView* key)
{
    return (alt_RefBase_RefStore_constIMValue*)new class alt::RefBase<class alt::RefStore<const class alt::IMValue> >(((alt::IEntity *)_instance)->GetSyncedMetaData(*(alt::StringView*)key));
}

CAPI struct alt_RefBase_RefStore_constIMValue* alt_IEntity_GetStreamSyncedMetaData(struct alt_IEntity* _instance, struct alt_StringView* key)
{
    return (alt_RefBase_RefStore_constIMValue*)new class alt::RefBase<class alt::RefStore<const class alt::IMValue> >(((alt::IEntity *)_instance)->GetStreamSyncedMetaData(*(alt::StringView*)key));
}

CAPI struct alt_IPlayer* alt_CRefCountable_to_alt_IPlayer(struct alt_CRefCountable* from)
{
    return (alt_IPlayer*)dynamic_cast<alt::IPlayer*>((alt::CRefCountable*)from);
}

CAPI struct alt_CRefCountable* alt_IPlayer_to_alt_CRefCountable(struct alt_IPlayer* from)
{
    return (alt_CRefCountable*)static_cast<alt::CRefCountable*>((alt::IPlayer*)from);
}

CAPI unsigned long long alt_IPlayer_GetRefCount(struct alt_IPlayer* _instance)
{
    return (unsigned long long)static_cast<alt::CRefCountable *>((alt::IPlayer *)_instance)->GetRefCount();
}

CAPI void alt_IPlayer_AddRef(struct alt_IPlayer* _instance)
{
    static_cast<alt::CRefCountable *>((alt::IPlayer *)_instance)->AddRef();
}

CAPI void alt_IPlayer_RemoveRef(struct alt_IPlayer* _instance)
{
    static_cast<alt::CRefCountable *>((alt::IPlayer *)_instance)->RemoveRef();
}

CAPI void alt_IPlayer_AddWeakRef(struct alt_IPlayer* _instance, struct alt_IWeakRef* ref)
{
    static_cast<alt::CRefCountable *>((alt::IPlayer *)_instance)->AddWeakRef((alt::IWeakRef *)ref);
}

CAPI void alt_IPlayer_RemoveWeakRef(struct alt_IPlayer* _instance, struct alt_IWeakRef* ref)
{
    static_cast<alt::CRefCountable *>((alt::IPlayer *)_instance)->RemoveWeakRef((alt::IWeakRef *)ref);
}

CAPI struct alt_IPlayer* alt_IBaseObject_to_alt_IPlayer(struct alt_IBaseObject* from)
{
    return (alt_IPlayer*)dynamic_cast<alt::IPlayer*>((alt::IBaseObject*)from);
}

CAPI struct alt_IBaseObject* alt_IPlayer_to_alt_IBaseObject(struct alt_IPlayer* from)
{
    return (alt_IBaseObject*)static_cast<alt::IBaseObject*>((alt::IPlayer*)from);
}

CAPI alt_IBaseObject_Type alt_IPlayer_GetType(struct alt_IPlayer* _instance)
{
    return (alt_IBaseObject_Type)static_cast<alt::IBaseObject *>((alt::IPlayer *)_instance)->GetType();
}

CAPI struct alt_RefBase_RefStore_constIMValue* alt_IPlayer_GetMetaData(struct alt_IPlayer* _instance, struct alt_StringView* key)
{
    return (alt_RefBase_RefStore_constIMValue*)new class alt::RefBase<class alt::RefStore<const class alt::IMValue> >(static_cast<alt::IBaseObject *>((alt::IPlayer *)_instance)->GetMetaData(*(alt::StringView*)key));
}

CAPI void alt_IPlayer_SetMetaData(struct alt_IPlayer* _instance, struct alt_StringView* key, struct alt_RefBase_RefStore_IMValue* val)
{
    static_cast<alt::IBaseObject *>((alt::IPlayer *)_instance)->SetMetaData(*(alt::StringView*)key, *(alt::MValue*)val);
}

CAPI struct alt_IPlayer* alt_IWorldObject_to_alt_IPlayer(struct alt_IWorldObject* from)
{
    return (alt_IPlayer*)dynamic_cast<alt::IPlayer*>((alt::IWorldObject*)from);
}

CAPI struct alt_IWorldObject* alt_IPlayer_to_alt_IWorldObject(struct alt_IPlayer* from)
{
    return (alt_IWorldObject*)static_cast<alt::IWorldObject*>((alt::IPlayer*)from);
}

CAPI struct alt_Vector_float_3_PointLayout* alt_IPlayer_GetPosition(struct alt_IPlayer* _instance)
{
    return (alt_Vector_float_3_PointLayout*)new class alt::Vector<float, 3, class alt::PointLayout>(static_cast<alt::IWorldObject *>((alt::IPlayer *)_instance)->GetPosition());
}

CAPI void alt_IPlayer_SetPosition(struct alt_IPlayer* _instance, struct alt_Vector_float_3_PointLayout* pos)
{
    static_cast<alt::IWorldObject *>((alt::IPlayer *)_instance)->SetPosition(*(alt::Position*)pos);
}

CAPI int alt_IPlayer_GetDimension(struct alt_IPlayer* _instance)
{
    return (int)static_cast<alt::IWorldObject *>((alt::IPlayer *)_instance)->GetDimension();
}

CAPI void alt_IPlayer_SetDimension(struct alt_IPlayer* _instance, int dimension)
{
    static_cast<alt::IWorldObject *>((alt::IPlayer *)_instance)->SetDimension((int32_t)dimension);
}

CAPI struct alt_IPlayer* alt_IEntity_to_alt_IPlayer(struct alt_IEntity* from)
{
    return (alt_IPlayer*)dynamic_cast<alt::IPlayer*>((alt::IEntity*)from);
}

CAPI struct alt_IEntity* alt_IPlayer_to_alt_IEntity(struct alt_IPlayer* from)
{
    return (alt_IEntity*)static_cast<alt::IEntity*>((alt::IPlayer*)from);
}

CAPI unsigned short alt_IPlayer_GetID(struct alt_IPlayer* _instance)
{
    return (unsigned short)static_cast<alt::IEntity *>((alt::IPlayer *)_instance)->GetID();
}

CAPI struct alt_RefBase_RefStore_IPlayer* alt_IPlayer_GetNetworkOwner(struct alt_IPlayer* _instance)
{
    return (alt_RefBase_RefStore_IPlayer*)new class alt::RefBase<class alt::RefStore<class alt::IPlayer> >(static_cast<alt::IEntity *>((alt::IPlayer *)_instance)->GetNetworkOwner());
}

CAPI unsigned int alt_IPlayer_GetModel(struct alt_IPlayer* _instance)
{
    return (unsigned int)static_cast<alt::IEntity *>((alt::IPlayer *)_instance)->GetModel();
}

CAPI struct alt_Vector_float_3_RotationLayout* alt_IPlayer_GetRotation(struct alt_IPlayer* _instance)
{
    return (alt_Vector_float_3_RotationLayout*)new class alt::Vector<float, 3, class alt::RotationLayout>(static_cast<alt::IEntity *>((alt::IPlayer *)_instance)->GetRotation());
}

CAPI void alt_IPlayer_SetRotation(struct alt_IPlayer* _instance, struct alt_Vector_float_3_RotationLayout* rot)
{
    static_cast<alt::IEntity *>((alt::IPlayer *)_instance)->SetRotation(*(alt::Rotation*)rot);
}

CAPI struct alt_RefBase_RefStore_constIMValue* alt_IPlayer_GetSyncedMetaData(struct alt_IPlayer* _instance, struct alt_StringView* key)
{
    return (alt_RefBase_RefStore_constIMValue*)new class alt::RefBase<class alt::RefStore<const class alt::IMValue> >(static_cast<alt::IEntity *>((alt::IPlayer *)_instance)->GetSyncedMetaData(*(alt::StringView*)key));
}

CAPI struct alt_RefBase_RefStore_constIMValue* alt_IPlayer_GetStreamSyncedMetaData(struct alt_IPlayer* _instance, struct alt_StringView* key)
{
    return (alt_RefBase_RefStore_constIMValue*)new class alt::RefBase<class alt::RefStore<const class alt::IMValue> >(static_cast<alt::IEntity *>((alt::IPlayer *)_instance)->GetStreamSyncedMetaData(*(alt::StringView*)key));
}

CAPI _Bool alt_IPlayer_IsConnected(struct alt_IPlayer* _instance)
{
    return (_Bool)((alt::IPlayer *)_instance)->IsConnected();
}

CAPI unsigned int alt_IPlayer_GetPing(struct alt_IPlayer* _instance)
{
    return (unsigned int)((alt::IPlayer *)_instance)->GetPing();
}

CAPI struct alt_StringView* alt_IPlayer_GetIP(struct alt_IPlayer* _instance)
{
    return (alt_StringView*)new class alt::StringView(((alt::IPlayer *)_instance)->GetIP());
}

CAPI void alt_IPlayer_Spawn(struct alt_IPlayer* _instance, struct alt_Vector_float_3_PointLayout* pos, unsigned int delayMs)
{
    ((alt::IPlayer *)_instance)->Spawn(*(alt::Position*)pos, (uint32_t)delayMs);
}

CAPI void alt_IPlayer_Despawn(struct alt_IPlayer* _instance)
{
    ((alt::IPlayer *)_instance)->Despawn();
}

CAPI struct alt_StringView* alt_IPlayer_GetName(struct alt_IPlayer* _instance)
{
    return (alt_StringView*)new class alt::StringView(((alt::IPlayer *)_instance)->GetName());
}

CAPI unsigned long long alt_IPlayer_GetSocialID(struct alt_IPlayer* _instance)
{
    return (unsigned long long)((alt::IPlayer *)_instance)->GetSocialID();
}

CAPI unsigned long long alt_IPlayer_GetHwidHash(struct alt_IPlayer* _instance)
{
    return (unsigned long long)((alt::IPlayer *)_instance)->GetHwidHash();
}

CAPI unsigned long long alt_IPlayer_GetHwidExHash(struct alt_IPlayer* _instance)
{
    return (unsigned long long)((alt::IPlayer *)_instance)->GetHwidExHash();
}

CAPI struct alt_StringView* alt_IPlayer_GetAuthToken(struct alt_IPlayer* _instance)
{
    return (alt_StringView*)new class alt::StringView(((alt::IPlayer *)_instance)->GetAuthToken());
}

CAPI unsigned short alt_IPlayer_GetHealth(struct alt_IPlayer* _instance)
{
    return (unsigned short)((alt::IPlayer *)_instance)->GetHealth();
}

CAPI void alt_IPlayer_SetHealth(struct alt_IPlayer* _instance, unsigned short health)
{
    ((alt::IPlayer *)_instance)->SetHealth((uint16_t)health);
}

CAPI unsigned short alt_IPlayer_GetMaxHealth(struct alt_IPlayer* _instance)
{
    return (unsigned short)((alt::IPlayer *)_instance)->GetMaxHealth();
}

CAPI void alt_IPlayer_SetMaxHealth(struct alt_IPlayer* _instance, unsigned short health)
{
    ((alt::IPlayer *)_instance)->SetMaxHealth((uint16_t)health);
}

CAPI void alt_IPlayer_SetDateTime(struct alt_IPlayer* _instance, int day, int month, int year, int hour, int minute, int second)
{
    ((alt::IPlayer *)_instance)->SetDateTime((int)day, (int)month, (int)year, (int)hour, (int)minute, (int)second);
}

CAPI void alt_IPlayer_SetWeather(struct alt_IPlayer* _instance, unsigned int weather)
{
    ((alt::IPlayer *)_instance)->SetWeather((uint32_t)weather);
}

CAPI void alt_IPlayer_GiveWeapon(struct alt_IPlayer* _instance, unsigned int weapon, int ammo, _Bool selectWeapon)
{
    ((alt::IPlayer *)_instance)->GiveWeapon((uint32_t)weapon, (int32_t)ammo, (_Bool)selectWeapon);
}

CAPI void alt_IPlayer_RemoveWeapon(struct alt_IPlayer* _instance, unsigned int weapon)
{
    ((alt::IPlayer *)_instance)->RemoveWeapon((uint32_t)weapon);
}

CAPI void alt_IPlayer_RemoveAllWeapons(struct alt_IPlayer* _instance)
{
    ((alt::IPlayer *)_instance)->RemoveAllWeapons();
}

CAPI void alt_IPlayer_AddWeaponComponent(struct alt_IPlayer* _instance, unsigned int weapon, unsigned int component)
{
    ((alt::IPlayer *)_instance)->AddWeaponComponent((uint32_t)weapon, (uint32_t)component);
}

CAPI void alt_IPlayer_RemoveWeaponComponent(struct alt_IPlayer* _instance, unsigned int weapon, unsigned int component)
{
    ((alt::IPlayer *)_instance)->RemoveWeaponComponent((uint32_t)weapon, (uint32_t)component);
}

CAPI struct alt_Array_unsignedint* alt_IPlayer_GetCurrentWeaponComponents(struct alt_IPlayer* _instance)
{
    return (alt_Array_unsignedint*)new class alt::Array<unsigned int>(((alt::IPlayer *)_instance)->GetCurrentWeaponComponents());
}

CAPI void alt_IPlayer_SetWeaponTintIndex(struct alt_IPlayer* _instance, unsigned int weapon, unsigned char tintIndex)
{
    ((alt::IPlayer *)_instance)->SetWeaponTintIndex((uint32_t)weapon, (uint8_t)tintIndex);
}

CAPI unsigned char alt_IPlayer_GetCurrentWeaponTintIndex(struct alt_IPlayer* _instance)
{
    return (unsigned char)((alt::IPlayer *)_instance)->GetCurrentWeaponTintIndex();
}

CAPI unsigned int alt_IPlayer_GetCurrentWeapon(struct alt_IPlayer* _instance)
{
    return (unsigned int)((alt::IPlayer *)_instance)->GetCurrentWeapon();
}

CAPI void alt_IPlayer_SetCurrentWeapon(struct alt_IPlayer* _instance, unsigned int weapon)
{
    ((alt::IPlayer *)_instance)->SetCurrentWeapon((uint32_t)weapon);
}

CAPI _Bool alt_IPlayer_IsDead(struct alt_IPlayer* _instance)
{
    return (_Bool)((alt::IPlayer *)_instance)->IsDead();
}

CAPI _Bool alt_IPlayer_IsJumping(struct alt_IPlayer* _instance)
{
    return (_Bool)((alt::IPlayer *)_instance)->IsJumping();
}

CAPI _Bool alt_IPlayer_IsInRagdoll(struct alt_IPlayer* _instance)
{
    return (_Bool)((alt::IPlayer *)_instance)->IsInRagdoll();
}

CAPI _Bool alt_IPlayer_IsAiming(struct alt_IPlayer* _instance)
{
    return (_Bool)((alt::IPlayer *)_instance)->IsAiming();
}

CAPI _Bool alt_IPlayer_IsShooting(struct alt_IPlayer* _instance)
{
    return (_Bool)((alt::IPlayer *)_instance)->IsShooting();
}

CAPI _Bool alt_IPlayer_IsReloading(struct alt_IPlayer* _instance)
{
    return (_Bool)((alt::IPlayer *)_instance)->IsReloading();
}

CAPI unsigned short alt_IPlayer_GetArmour(struct alt_IPlayer* _instance)
{
    return (unsigned short)((alt::IPlayer *)_instance)->GetArmour();
}

CAPI void alt_IPlayer_SetArmour(struct alt_IPlayer* _instance, unsigned short armor)
{
    ((alt::IPlayer *)_instance)->SetArmour((uint16_t)armor);
}

CAPI unsigned short alt_IPlayer_GetMaxArmour(struct alt_IPlayer* _instance)
{
    return (unsigned short)((alt::IPlayer *)_instance)->GetMaxArmour();
}

CAPI void alt_IPlayer_SetMaxArmour(struct alt_IPlayer* _instance, unsigned short armor)
{
    ((alt::IPlayer *)_instance)->SetMaxArmour((uint16_t)armor);
}

CAPI float alt_IPlayer_GetMoveSpeed(struct alt_IPlayer* _instance)
{
    return (float)((alt::IPlayer *)_instance)->GetMoveSpeed();
}

CAPI unsigned int alt_IPlayer_GetWeapon(struct alt_IPlayer* _instance)
{
    return (unsigned int)((alt::IPlayer *)_instance)->GetWeapon();
}

CAPI unsigned short alt_IPlayer_GetAmmo(struct alt_IPlayer* _instance)
{
    return (unsigned short)((alt::IPlayer *)_instance)->GetAmmo();
}

CAPI struct alt_Vector_float_3_PointLayout* alt_IPlayer_GetAimPos(struct alt_IPlayer* _instance)
{
    return (alt_Vector_float_3_PointLayout*)new class alt::Vector<float, 3, class alt::PointLayout>(((alt::IPlayer *)_instance)->GetAimPos());
}

CAPI struct alt_Vector_float_3_RotationLayout* alt_IPlayer_GetHeadRotation(struct alt_IPlayer* _instance)
{
    return (alt_Vector_float_3_RotationLayout*)new class alt::Vector<float, 3, class alt::RotationLayout>(((alt::IPlayer *)_instance)->GetHeadRotation());
}

CAPI _Bool alt_IPlayer_IsInVehicle(struct alt_IPlayer* _instance)
{
    return (_Bool)((alt::IPlayer *)_instance)->IsInVehicle();
}

CAPI struct alt_RefBase_RefStore_IVehicle* alt_IPlayer_GetVehicle(struct alt_IPlayer* _instance)
{
    return (alt_RefBase_RefStore_IVehicle*)new class alt::RefBase<class alt::RefStore<class alt::IVehicle> >(((alt::IPlayer *)_instance)->GetVehicle());
}

CAPI unsigned char alt_IPlayer_GetSeat(struct alt_IPlayer* _instance)
{
    return (unsigned char)((alt::IPlayer *)_instance)->GetSeat();
}

CAPI struct alt_RefBase_RefStore_IEntity* alt_IPlayer_GetEntityAimingAt(struct alt_IPlayer* _instance)
{
    return (alt_RefBase_RefStore_IEntity*)new class alt::RefBase<class alt::RefStore<class alt::IEntity> >(((alt::IPlayer *)_instance)->GetEntityAimingAt());
}

CAPI struct alt_Vector_float_3_PointLayout* alt_IPlayer_GetEntityAimOffset(struct alt_IPlayer* _instance)
{
    return (alt_Vector_float_3_PointLayout*)new class alt::Vector<float, 3, class alt::PointLayout>(((alt::IPlayer *)_instance)->GetEntityAimOffset());
}

CAPI _Bool alt_IPlayer_IsFlashlightActive(struct alt_IPlayer* _instance)
{
    return (_Bool)((alt::IPlayer *)_instance)->IsFlashlightActive();
}

CAPI void alt_IPlayer_Kick(struct alt_IPlayer* _instance, struct alt_StringView* reason)
{
    ((alt::IPlayer *)_instance)->Kick(*(alt::StringView*)reason);
}

CAPI struct alt_IVehicle* alt_CRefCountable_to_alt_IVehicle(struct alt_CRefCountable* from)
{
    return (alt_IVehicle*)dynamic_cast<alt::IVehicle*>((alt::CRefCountable*)from);
}

CAPI struct alt_CRefCountable* alt_IVehicle_to_alt_CRefCountable(struct alt_IVehicle* from)
{
    return (alt_CRefCountable*)static_cast<alt::CRefCountable*>((alt::IVehicle*)from);
}

CAPI unsigned long long alt_IVehicle_GetRefCount(struct alt_IVehicle* _instance)
{
    return (unsigned long long)static_cast<alt::CRefCountable *>((alt::IVehicle *)_instance)->GetRefCount();
}

CAPI void alt_IVehicle_AddRef(struct alt_IVehicle* _instance)
{
    static_cast<alt::CRefCountable *>((alt::IVehicle *)_instance)->AddRef();
}

CAPI void alt_IVehicle_RemoveRef(struct alt_IVehicle* _instance)
{
    static_cast<alt::CRefCountable *>((alt::IVehicle *)_instance)->RemoveRef();
}

CAPI void alt_IVehicle_AddWeakRef(struct alt_IVehicle* _instance, struct alt_IWeakRef* ref)
{
    static_cast<alt::CRefCountable *>((alt::IVehicle *)_instance)->AddWeakRef((alt::IWeakRef *)ref);
}

CAPI void alt_IVehicle_RemoveWeakRef(struct alt_IVehicle* _instance, struct alt_IWeakRef* ref)
{
    static_cast<alt::CRefCountable *>((alt::IVehicle *)_instance)->RemoveWeakRef((alt::IWeakRef *)ref);
}

CAPI struct alt_IVehicle* alt_IBaseObject_to_alt_IVehicle(struct alt_IBaseObject* from)
{
    return (alt_IVehicle*)dynamic_cast<alt::IVehicle*>((alt::IBaseObject*)from);
}

CAPI struct alt_IBaseObject* alt_IVehicle_to_alt_IBaseObject(struct alt_IVehicle* from)
{
    return (alt_IBaseObject*)static_cast<alt::IBaseObject*>((alt::IVehicle*)from);
}

CAPI alt_IBaseObject_Type alt_IVehicle_GetType(struct alt_IVehicle* _instance)
{
    return (alt_IBaseObject_Type)static_cast<alt::IBaseObject *>((alt::IVehicle *)_instance)->GetType();
}

CAPI struct alt_RefBase_RefStore_constIMValue* alt_IVehicle_GetMetaData(struct alt_IVehicle* _instance, struct alt_StringView* key)
{
    return (alt_RefBase_RefStore_constIMValue*)new class alt::RefBase<class alt::RefStore<const class alt::IMValue> >(static_cast<alt::IBaseObject *>((alt::IVehicle *)_instance)->GetMetaData(*(alt::StringView*)key));
}

CAPI void alt_IVehicle_SetMetaData(struct alt_IVehicle* _instance, struct alt_StringView* key, struct alt_RefBase_RefStore_IMValue* val)
{
    static_cast<alt::IBaseObject *>((alt::IVehicle *)_instance)->SetMetaData(*(alt::StringView*)key, *(alt::MValue*)val);
}

CAPI struct alt_IVehicle* alt_IWorldObject_to_alt_IVehicle(struct alt_IWorldObject* from)
{
    return (alt_IVehicle*)dynamic_cast<alt::IVehicle*>((alt::IWorldObject*)from);
}

CAPI struct alt_IWorldObject* alt_IVehicle_to_alt_IWorldObject(struct alt_IVehicle* from)
{
    return (alt_IWorldObject*)static_cast<alt::IWorldObject*>((alt::IVehicle*)from);
}

CAPI struct alt_Vector_float_3_PointLayout* alt_IVehicle_GetPosition(struct alt_IVehicle* _instance)
{
    return (alt_Vector_float_3_PointLayout*)new class alt::Vector<float, 3, class alt::PointLayout>(static_cast<alt::IWorldObject *>((alt::IVehicle *)_instance)->GetPosition());
}

CAPI void alt_IVehicle_SetPosition(struct alt_IVehicle* _instance, struct alt_Vector_float_3_PointLayout* pos)
{
    static_cast<alt::IWorldObject *>((alt::IVehicle *)_instance)->SetPosition(*(alt::Position*)pos);
}

CAPI int alt_IVehicle_GetDimension(struct alt_IVehicle* _instance)
{
    return (int)static_cast<alt::IWorldObject *>((alt::IVehicle *)_instance)->GetDimension();
}

CAPI void alt_IVehicle_SetDimension(struct alt_IVehicle* _instance, int dimension)
{
    static_cast<alt::IWorldObject *>((alt::IVehicle *)_instance)->SetDimension((int32_t)dimension);
}

CAPI struct alt_IVehicle* alt_IEntity_to_alt_IVehicle(struct alt_IEntity* from)
{
    return (alt_IVehicle*)dynamic_cast<alt::IVehicle*>((alt::IEntity*)from);
}

CAPI struct alt_IEntity* alt_IVehicle_to_alt_IEntity(struct alt_IVehicle* from)
{
    return (alt_IEntity*)static_cast<alt::IEntity*>((alt::IVehicle*)from);
}

CAPI unsigned short alt_IVehicle_GetID(struct alt_IVehicle* _instance)
{
    return (unsigned short)static_cast<alt::IEntity *>((alt::IVehicle *)_instance)->GetID();
}

CAPI struct alt_RefBase_RefStore_IPlayer* alt_IVehicle_GetNetworkOwner(struct alt_IVehicle* _instance)
{
    return (alt_RefBase_RefStore_IPlayer*)new class alt::RefBase<class alt::RefStore<class alt::IPlayer> >(static_cast<alt::IEntity *>((alt::IVehicle *)_instance)->GetNetworkOwner());
}

CAPI unsigned int alt_IVehicle_GetModel(struct alt_IVehicle* _instance)
{
    return (unsigned int)static_cast<alt::IEntity *>((alt::IVehicle *)_instance)->GetModel();
}

CAPI struct alt_Vector_float_3_RotationLayout* alt_IVehicle_GetRotation(struct alt_IVehicle* _instance)
{
    return (alt_Vector_float_3_RotationLayout*)new class alt::Vector<float, 3, class alt::RotationLayout>(static_cast<alt::IEntity *>((alt::IVehicle *)_instance)->GetRotation());
}

CAPI void alt_IVehicle_SetRotation(struct alt_IVehicle* _instance, struct alt_Vector_float_3_RotationLayout* rot)
{
    static_cast<alt::IEntity *>((alt::IVehicle *)_instance)->SetRotation(*(alt::Rotation*)rot);
}

CAPI struct alt_RefBase_RefStore_constIMValue* alt_IVehicle_GetSyncedMetaData(struct alt_IVehicle* _instance, struct alt_StringView* key)
{
    return (alt_RefBase_RefStore_constIMValue*)new class alt::RefBase<class alt::RefStore<const class alt::IMValue> >(static_cast<alt::IEntity *>((alt::IVehicle *)_instance)->GetSyncedMetaData(*(alt::StringView*)key));
}

CAPI struct alt_RefBase_RefStore_constIMValue* alt_IVehicle_GetStreamSyncedMetaData(struct alt_IVehicle* _instance, struct alt_StringView* key)
{
    return (alt_RefBase_RefStore_constIMValue*)new class alt::RefBase<class alt::RefStore<const class alt::IMValue> >(static_cast<alt::IEntity *>((alt::IVehicle *)_instance)->GetStreamSyncedMetaData(*(alt::StringView*)key));
}

CAPI struct alt_RefBase_RefStore_IPlayer* alt_IVehicle_GetDriver(struct alt_IVehicle* _instance)
{
    return (alt_RefBase_RefStore_IPlayer*)new class alt::RefBase<class alt::RefStore<class alt::IPlayer> >(((alt::IVehicle *)_instance)->GetDriver());
}

CAPI unsigned char alt_IVehicle_GetMod(struct alt_IVehicle* _instance, unsigned char category)
{
    return (unsigned char)((alt::IVehicle *)_instance)->GetMod((uint8_t)category);
}

CAPI unsigned char alt_IVehicle_GetModsCount(struct alt_IVehicle* _instance, unsigned char category)
{
    return (unsigned char)((alt::IVehicle *)_instance)->GetModsCount((uint8_t)category);
}

CAPI _Bool alt_IVehicle_SetMod(struct alt_IVehicle* _instance, unsigned char category, unsigned char id)
{
    return (_Bool)((alt::IVehicle *)_instance)->SetMod((uint8_t)category, (uint8_t)id);
}

CAPI unsigned char alt_IVehicle_GetModKitsCount(struct alt_IVehicle* _instance)
{
    return (unsigned char)((alt::IVehicle *)_instance)->GetModKitsCount();
}

CAPI unsigned char alt_IVehicle_GetModKit(struct alt_IVehicle* _instance)
{
    return (unsigned char)((alt::IVehicle *)_instance)->GetModKit();
}

CAPI _Bool alt_IVehicle_SetModKit(struct alt_IVehicle* _instance, unsigned char id)
{
    return (_Bool)((alt::IVehicle *)_instance)->SetModKit((uint8_t)id);
}

CAPI _Bool alt_IVehicle_IsPrimaryColorRGB(struct alt_IVehicle* _instance)
{
    return (_Bool)((alt::IVehicle *)_instance)->IsPrimaryColorRGB();
}

CAPI unsigned char alt_IVehicle_GetPrimaryColor(struct alt_IVehicle* _instance)
{
    return (unsigned char)((alt::IVehicle *)_instance)->GetPrimaryColor();
}

CAPI struct alt_RGBA* alt_IVehicle_GetPrimaryColorRGB(struct alt_IVehicle* _instance)
{
    return (alt_RGBA*)new struct alt::RGBA(((alt::IVehicle *)_instance)->GetPrimaryColorRGB());
}

CAPI void alt_IVehicle_SetPrimaryColor(struct alt_IVehicle* _instance, unsigned char color)
{
    ((alt::IVehicle *)_instance)->SetPrimaryColor((uint8_t)color);
}

CAPI void alt_IVehicle_SetPrimaryColorRGB(struct alt_IVehicle* _instance, struct alt_RGBA* color)
{
    ((alt::IVehicle *)_instance)->SetPrimaryColorRGB(*(alt::RGBA*)color);
}

CAPI _Bool alt_IVehicle_IsSecondaryColorRGB(struct alt_IVehicle* _instance)
{
    return (_Bool)((alt::IVehicle *)_instance)->IsSecondaryColorRGB();
}

CAPI unsigned char alt_IVehicle_GetSecondaryColor(struct alt_IVehicle* _instance)
{
    return (unsigned char)((alt::IVehicle *)_instance)->GetSecondaryColor();
}

CAPI struct alt_RGBA* alt_IVehicle_GetSecondaryColorRGB(struct alt_IVehicle* _instance)
{
    return (alt_RGBA*)new struct alt::RGBA(((alt::IVehicle *)_instance)->GetSecondaryColorRGB());
}

CAPI void alt_IVehicle_SetSecondaryColor(struct alt_IVehicle* _instance, unsigned char color)
{
    ((alt::IVehicle *)_instance)->SetSecondaryColor((uint8_t)color);
}

CAPI void alt_IVehicle_SetSecondaryColorRGB(struct alt_IVehicle* _instance, struct alt_RGBA* color)
{
    ((alt::IVehicle *)_instance)->SetSecondaryColorRGB(*(alt::RGBA*)color);
}

CAPI unsigned char alt_IVehicle_GetPearlColor(struct alt_IVehicle* _instance)
{
    return (unsigned char)((alt::IVehicle *)_instance)->GetPearlColor();
}

CAPI void alt_IVehicle_SetPearlColor(struct alt_IVehicle* _instance, unsigned char color)
{
    ((alt::IVehicle *)_instance)->SetPearlColor((uint8_t)color);
}

CAPI unsigned char alt_IVehicle_GetWheelColor(struct alt_IVehicle* _instance)
{
    return (unsigned char)((alt::IVehicle *)_instance)->GetWheelColor();
}

CAPI void alt_IVehicle_SetWheelColor(struct alt_IVehicle* _instance, unsigned char color)
{
    ((alt::IVehicle *)_instance)->SetWheelColor((uint8_t)color);
}

CAPI unsigned char alt_IVehicle_GetInteriorColor(struct alt_IVehicle* _instance)
{
    return (unsigned char)((alt::IVehicle *)_instance)->GetInteriorColor();
}

CAPI void alt_IVehicle_SetInteriorColor(struct alt_IVehicle* _instance, unsigned char color)
{
    ((alt::IVehicle *)_instance)->SetInteriorColor((uint8_t)color);
}

CAPI unsigned char alt_IVehicle_GetDashboardColor(struct alt_IVehicle* _instance)
{
    return (unsigned char)((alt::IVehicle *)_instance)->GetDashboardColor();
}

CAPI void alt_IVehicle_SetDashboardColor(struct alt_IVehicle* _instance, unsigned char color)
{
    ((alt::IVehicle *)_instance)->SetDashboardColor((uint8_t)color);
}

CAPI _Bool alt_IVehicle_IsTireSmokeColorCustom(struct alt_IVehicle* _instance)
{
    return (_Bool)((alt::IVehicle *)_instance)->IsTireSmokeColorCustom();
}

CAPI struct alt_RGBA* alt_IVehicle_GetTireSmokeColor(struct alt_IVehicle* _instance)
{
    return (alt_RGBA*)new struct alt::RGBA(((alt::IVehicle *)_instance)->GetTireSmokeColor());
}

CAPI void alt_IVehicle_SetTireSmokeColor(struct alt_IVehicle* _instance, struct alt_RGBA* color)
{
    ((alt::IVehicle *)_instance)->SetTireSmokeColor(*(alt::RGBA*)color);
}

CAPI unsigned char alt_IVehicle_GetWheelType(struct alt_IVehicle* _instance)
{
    return (unsigned char)((alt::IVehicle *)_instance)->GetWheelType();
}

CAPI unsigned char alt_IVehicle_GetWheelVariation(struct alt_IVehicle* _instance)
{
    return (unsigned char)((alt::IVehicle *)_instance)->GetWheelVariation();
}

CAPI unsigned char alt_IVehicle_GetRearWheelVariation(struct alt_IVehicle* _instance)
{
    return (unsigned char)((alt::IVehicle *)_instance)->GetRearWheelVariation();
}

CAPI void alt_IVehicle_SetWheels(struct alt_IVehicle* _instance, unsigned char type, unsigned char variation)
{
    ((alt::IVehicle *)_instance)->SetWheels((uint8_t)type, (uint8_t)variation);
}

CAPI void alt_IVehicle_SetRearWheels(struct alt_IVehicle* _instance, unsigned char variation)
{
    ((alt::IVehicle *)_instance)->SetRearWheels((uint8_t)variation);
}

CAPI _Bool alt_IVehicle_GetCustomTires(struct alt_IVehicle* _instance)
{
    return (_Bool)((alt::IVehicle *)_instance)->GetCustomTires();
}

CAPI void alt_IVehicle_SetCustomTires(struct alt_IVehicle* _instance, _Bool state)
{
    ((alt::IVehicle *)_instance)->SetCustomTires((_Bool)state);
}

CAPI unsigned char alt_IVehicle_GetSpecialDarkness(struct alt_IVehicle* _instance)
{
    return (unsigned char)((alt::IVehicle *)_instance)->GetSpecialDarkness();
}

CAPI void alt_IVehicle_SetSpecialDarkness(struct alt_IVehicle* _instance, unsigned char value)
{
    ((alt::IVehicle *)_instance)->SetSpecialDarkness((uint8_t)value);
}

CAPI unsigned int alt_IVehicle_GetNumberplateIndex(struct alt_IVehicle* _instance)
{
    return (unsigned int)((alt::IVehicle *)_instance)->GetNumberplateIndex();
}

CAPI void alt_IVehicle_SetNumberplateIndex(struct alt_IVehicle* _instance, unsigned int index)
{
    ((alt::IVehicle *)_instance)->SetNumberplateIndex((uint32_t)index);
}

CAPI struct alt_StringView* alt_IVehicle_GetNumberplateText(struct alt_IVehicle* _instance)
{
    return (alt_StringView*)new class alt::StringView(((alt::IVehicle *)_instance)->GetNumberplateText());
}

CAPI void alt_IVehicle_SetNumberplateText(struct alt_IVehicle* _instance, struct alt_StringView* text)
{
    ((alt::IVehicle *)_instance)->SetNumberplateText(*(alt::StringView*)text);
}

CAPI unsigned char alt_IVehicle_GetWindowTint(struct alt_IVehicle* _instance)
{
    return (unsigned char)((alt::IVehicle *)_instance)->GetWindowTint();
}

CAPI void alt_IVehicle_SetWindowTint(struct alt_IVehicle* _instance, unsigned char tint)
{
    ((alt::IVehicle *)_instance)->SetWindowTint((uint8_t)tint);
}

CAPI unsigned char alt_IVehicle_GetDirtLevel(struct alt_IVehicle* _instance)
{
    return (unsigned char)((alt::IVehicle *)_instance)->GetDirtLevel();
}

CAPI void alt_IVehicle_SetDirtLevel(struct alt_IVehicle* _instance, unsigned char level)
{
    ((alt::IVehicle *)_instance)->SetDirtLevel((uint8_t)level);
}

CAPI _Bool alt_IVehicle_IsExtraOn(struct alt_IVehicle* _instance, unsigned char extraID)
{
    return (_Bool)((alt::IVehicle *)_instance)->IsExtraOn((uint8_t)extraID);
}

CAPI void alt_IVehicle_ToggleExtra(struct alt_IVehicle* _instance, unsigned char extraID, _Bool state)
{
    ((alt::IVehicle *)_instance)->ToggleExtra((uint8_t)extraID, (_Bool)state);
}

CAPI _Bool alt_IVehicle_IsNeonActive(struct alt_IVehicle* _instance)
{
    return (_Bool)((alt::IVehicle *)_instance)->IsNeonActive();
}

CAPI void alt_IVehicle_GetNeonActive(struct alt_IVehicle* _instance, _Bool* left, _Bool* right, _Bool* front, _Bool* back)
{
    ((alt::IVehicle *)_instance)->GetNeonActive((_Bool *)left, (_Bool *)right, (_Bool *)front, (_Bool *)back);
}

CAPI void alt_IVehicle_SetNeonActive(struct alt_IVehicle* _instance, _Bool left, _Bool right, _Bool front, _Bool back)
{
    ((alt::IVehicle *)_instance)->SetNeonActive((_Bool)left, (_Bool)right, (_Bool)front, (_Bool)back);
}

CAPI struct alt_RGBA* alt_IVehicle_GetNeonColor(struct alt_IVehicle* _instance)
{
    return (alt_RGBA*)new struct alt::RGBA(((alt::IVehicle *)_instance)->GetNeonColor());
}

CAPI void alt_IVehicle_SetNeonColor(struct alt_IVehicle* _instance, struct alt_RGBA* color)
{
    ((alt::IVehicle *)_instance)->SetNeonColor(*(alt::RGBA*)color);
}

CAPI unsigned char alt_IVehicle_GetLivery(struct alt_IVehicle* _instance)
{
    return (unsigned char)((alt::IVehicle *)_instance)->GetLivery();
}

CAPI void alt_IVehicle_SetLivery(struct alt_IVehicle* _instance, unsigned char livery)
{
    ((alt::IVehicle *)_instance)->SetLivery((uint8_t)livery);
}

CAPI unsigned char alt_IVehicle_GetRoofLivery(struct alt_IVehicle* _instance)
{
    return (unsigned char)((alt::IVehicle *)_instance)->GetRoofLivery();
}

CAPI void alt_IVehicle_SetRoofLivery(struct alt_IVehicle* _instance, unsigned char roofLivery)
{
    ((alt::IVehicle *)_instance)->SetRoofLivery((uint8_t)roofLivery);
}

CAPI struct alt_String* alt_IVehicle_GetAppearanceDataBase64(struct alt_IVehicle* _instance)
{
    return (alt_String*)new class alt::String(((alt::IVehicle *)_instance)->GetAppearanceDataBase64());
}

CAPI void alt_IVehicle_LoadAppearanceDataFromBase64(struct alt_IVehicle* _instance, struct alt_StringView* base64)
{
    ((alt::IVehicle *)_instance)->LoadAppearanceDataFromBase64(*(alt::StringView*)base64);
}

CAPI _Bool alt_IVehicle_IsEngineOn(struct alt_IVehicle* _instance)
{
    return (_Bool)((alt::IVehicle *)_instance)->IsEngineOn();
}

CAPI void alt_IVehicle_SetEngineOn(struct alt_IVehicle* _instance, _Bool state)
{
    ((alt::IVehicle *)_instance)->SetEngineOn((_Bool)state);
}

CAPI _Bool alt_IVehicle_IsHandbrakeActive(struct alt_IVehicle* _instance)
{
    return (_Bool)((alt::IVehicle *)_instance)->IsHandbrakeActive();
}

CAPI unsigned char alt_IVehicle_GetHeadlightColor(struct alt_IVehicle* _instance)
{
    return (unsigned char)((alt::IVehicle *)_instance)->GetHeadlightColor();
}

CAPI void alt_IVehicle_SetHeadlightColor(struct alt_IVehicle* _instance, unsigned char color)
{
    ((alt::IVehicle *)_instance)->SetHeadlightColor((uint8_t)color);
}

CAPI unsigned int alt_IVehicle_GetRadioStationIndex(struct alt_IVehicle* _instance)
{
    return (unsigned int)((alt::IVehicle *)_instance)->GetRadioStationIndex();
}

CAPI void alt_IVehicle_SetRadioStationIndex(struct alt_IVehicle* _instance, unsigned int stationIndex)
{
    ((alt::IVehicle *)_instance)->SetRadioStationIndex((uint32_t)stationIndex);
}

CAPI _Bool alt_IVehicle_IsSirenActive(struct alt_IVehicle* _instance)
{
    return (_Bool)((alt::IVehicle *)_instance)->IsSirenActive();
}

CAPI void alt_IVehicle_SetSirenActive(struct alt_IVehicle* _instance, _Bool state)
{
    ((alt::IVehicle *)_instance)->SetSirenActive((_Bool)state);
}

CAPI unsigned char alt_IVehicle_GetLockState(struct alt_IVehicle* _instance)
{
    return (unsigned char)((alt::IVehicle *)_instance)->GetLockState();
}

CAPI void alt_IVehicle_SetLockState(struct alt_IVehicle* _instance, unsigned char state)
{
    ((alt::IVehicle *)_instance)->SetLockState((uint8_t)state);
}

CAPI unsigned char alt_IVehicle_GetDoorState(struct alt_IVehicle* _instance, unsigned char doorId)
{
    return (unsigned char)((alt::IVehicle *)_instance)->GetDoorState((uint8_t)doorId);
}

CAPI void alt_IVehicle_SetDoorState(struct alt_IVehicle* _instance, unsigned char doorId, unsigned char state)
{
    ((alt::IVehicle *)_instance)->SetDoorState((uint8_t)doorId, (uint8_t)state);
}

CAPI _Bool alt_IVehicle_IsWindowOpened(struct alt_IVehicle* _instance, unsigned char windowId)
{
    return (_Bool)((alt::IVehicle *)_instance)->IsWindowOpened((uint8_t)windowId);
}

CAPI void alt_IVehicle_SetWindowOpened(struct alt_IVehicle* _instance, unsigned char windowId, _Bool state)
{
    ((alt::IVehicle *)_instance)->SetWindowOpened((uint8_t)windowId, (_Bool)state);
}

CAPI _Bool alt_IVehicle_IsDaylightOn(struct alt_IVehicle* _instance)
{
    return (_Bool)((alt::IVehicle *)_instance)->IsDaylightOn();
}

CAPI _Bool alt_IVehicle_IsNightlightOn(struct alt_IVehicle* _instance)
{
    return (_Bool)((alt::IVehicle *)_instance)->IsNightlightOn();
}

CAPI _Bool alt_IVehicle_IsRoofOpened(struct alt_IVehicle* _instance)
{
    return (_Bool)((alt::IVehicle *)_instance)->IsRoofOpened();
}

CAPI void alt_IVehicle_SetRoofOpened(struct alt_IVehicle* _instance, _Bool state)
{
    ((alt::IVehicle *)_instance)->SetRoofOpened((_Bool)state);
}

CAPI _Bool alt_IVehicle_IsFlamethrowerActive(struct alt_IVehicle* _instance)
{
    return (_Bool)((alt::IVehicle *)_instance)->IsFlamethrowerActive();
}

CAPI float alt_IVehicle_GetLightsMultiplier(struct alt_IVehicle* _instance)
{
    return (float)((alt::IVehicle *)_instance)->GetLightsMultiplier();
}

CAPI void alt_IVehicle_SetLightsMultiplier(struct alt_IVehicle* _instance, float multiplier)
{
    ((alt::IVehicle *)_instance)->SetLightsMultiplier((float)multiplier);
}

CAPI struct alt_String* alt_IVehicle_GetGameStateBase64(struct alt_IVehicle* _instance)
{
    return (alt_String*)new class alt::String(((alt::IVehicle *)_instance)->GetGameStateBase64());
}

CAPI void alt_IVehicle_LoadGameStateFromBase64(struct alt_IVehicle* _instance, struct alt_StringView* base64)
{
    ((alt::IVehicle *)_instance)->LoadGameStateFromBase64(*(alt::StringView*)base64);
}

CAPI int alt_IVehicle_GetEngineHealth(struct alt_IVehicle* _instance)
{
    return (int)((alt::IVehicle *)_instance)->GetEngineHealth();
}

CAPI void alt_IVehicle_SetEngineHealth(struct alt_IVehicle* _instance, int health)
{
    ((alt::IVehicle *)_instance)->SetEngineHealth((int32_t)health);
}

CAPI int alt_IVehicle_GetPetrolTankHealth(struct alt_IVehicle* _instance)
{
    return (int)((alt::IVehicle *)_instance)->GetPetrolTankHealth();
}

CAPI void alt_IVehicle_SetPetrolTankHealth(struct alt_IVehicle* _instance, int health)
{
    ((alt::IVehicle *)_instance)->SetPetrolTankHealth((int32_t)health);
}

CAPI unsigned char alt_IVehicle_GetWheelsCount(struct alt_IVehicle* _instance)
{
    return (unsigned char)((alt::IVehicle *)_instance)->GetWheelsCount();
}

CAPI _Bool alt_IVehicle_IsWheelBurst(struct alt_IVehicle* _instance, unsigned char wheelId)
{
    return (_Bool)((alt::IVehicle *)_instance)->IsWheelBurst((uint8_t)wheelId);
}

CAPI void alt_IVehicle_SetWheelBurst(struct alt_IVehicle* _instance, unsigned char wheelId, _Bool state)
{
    ((alt::IVehicle *)_instance)->SetWheelBurst((uint8_t)wheelId, (_Bool)state);
}

CAPI _Bool alt_IVehicle_DoesWheelHasTire(struct alt_IVehicle* _instance, unsigned char wheelId)
{
    return (_Bool)((alt::IVehicle *)_instance)->DoesWheelHasTire((uint8_t)wheelId);
}

CAPI void alt_IVehicle_SetWheelHasTire(struct alt_IVehicle* _instance, unsigned char wheelId, _Bool state)
{
    ((alt::IVehicle *)_instance)->SetWheelHasTire((uint8_t)wheelId, (_Bool)state);
}

CAPI _Bool alt_IVehicle_IsWheelDetached(struct alt_IVehicle* _instance, unsigned char wheelId)
{
    return (_Bool)((alt::IVehicle *)_instance)->IsWheelDetached((uint8_t)wheelId);
}

CAPI void alt_IVehicle_SetWheelDetached(struct alt_IVehicle* _instance, unsigned char wheelId, _Bool state)
{
    ((alt::IVehicle *)_instance)->SetWheelDetached((uint8_t)wheelId, (_Bool)state);
}

CAPI _Bool alt_IVehicle_IsWheelOnFire(struct alt_IVehicle* _instance, unsigned char wheelId)
{
    return (_Bool)((alt::IVehicle *)_instance)->IsWheelOnFire((uint8_t)wheelId);
}

CAPI void alt_IVehicle_SetWheelOnFire(struct alt_IVehicle* _instance, unsigned char wheelId, _Bool state)
{
    ((alt::IVehicle *)_instance)->SetWheelOnFire((uint8_t)wheelId, (_Bool)state);
}

CAPI float alt_IVehicle_GetWheelHealth(struct alt_IVehicle* _instance, unsigned char wheelId)
{
    return (float)((alt::IVehicle *)_instance)->GetWheelHealth((uint8_t)wheelId);
}

CAPI void alt_IVehicle_SetWheelHealth(struct alt_IVehicle* _instance, unsigned char wheelId, float health)
{
    ((alt::IVehicle *)_instance)->SetWheelHealth((uint8_t)wheelId, (float)health);
}

CAPI unsigned char alt_IVehicle_GetRepairsCount(struct alt_IVehicle* _instance)
{
    return (unsigned char)((alt::IVehicle *)_instance)->GetRepairsCount();
}

CAPI unsigned int alt_IVehicle_GetBodyHealth(struct alt_IVehicle* _instance)
{
    return (unsigned int)((alt::IVehicle *)_instance)->GetBodyHealth();
}

CAPI void alt_IVehicle_SetBodyHealth(struct alt_IVehicle* _instance, unsigned int health)
{
    ((alt::IVehicle *)_instance)->SetBodyHealth((uint32_t)health);
}

CAPI unsigned int alt_IVehicle_GetBodyAdditionalHealth(struct alt_IVehicle* _instance)
{
    return (unsigned int)((alt::IVehicle *)_instance)->GetBodyAdditionalHealth();
}

CAPI void alt_IVehicle_SetBodyAdditionalHealth(struct alt_IVehicle* _instance, unsigned int health)
{
    ((alt::IVehicle *)_instance)->SetBodyAdditionalHealth((uint32_t)health);
}

CAPI struct alt_String* alt_IVehicle_GetHealthDataBase64(struct alt_IVehicle* _instance)
{
    return (alt_String*)new class alt::String(((alt::IVehicle *)_instance)->GetHealthDataBase64());
}

CAPI void alt_IVehicle_LoadHealthDataFromBase64(struct alt_IVehicle* _instance, struct alt_StringView* base64)
{
    ((alt::IVehicle *)_instance)->LoadHealthDataFromBase64(*(alt::StringView*)base64);
}

CAPI unsigned char alt_IVehicle_GetPartDamageLevel(struct alt_IVehicle* _instance, unsigned char partId)
{
    return (unsigned char)((alt::IVehicle *)_instance)->GetPartDamageLevel((uint8_t)partId);
}

CAPI void alt_IVehicle_SetPartDamageLevel(struct alt_IVehicle* _instance, unsigned char partId, unsigned char damage)
{
    ((alt::IVehicle *)_instance)->SetPartDamageLevel((uint8_t)partId, (uint8_t)damage);
}

CAPI unsigned char alt_IVehicle_GetPartBulletHoles(struct alt_IVehicle* _instance, unsigned char partId)
{
    return (unsigned char)((alt::IVehicle *)_instance)->GetPartBulletHoles((uint8_t)partId);
}

CAPI void alt_IVehicle_SetPartBulletHoles(struct alt_IVehicle* _instance, unsigned char partId, unsigned char shootsCount)
{
    ((alt::IVehicle *)_instance)->SetPartBulletHoles((uint8_t)partId, (uint8_t)shootsCount);
}

CAPI _Bool alt_IVehicle_IsLightDamaged(struct alt_IVehicle* _instance, unsigned char lightId)
{
    return (_Bool)((alt::IVehicle *)_instance)->IsLightDamaged((uint8_t)lightId);
}

CAPI void alt_IVehicle_SetLightDamaged(struct alt_IVehicle* _instance, unsigned char lightId, _Bool isDamaged)
{
    ((alt::IVehicle *)_instance)->SetLightDamaged((uint8_t)lightId, (_Bool)isDamaged);
}

CAPI _Bool alt_IVehicle_IsWindowDamaged(struct alt_IVehicle* _instance, unsigned char windowId)
{
    return (_Bool)((alt::IVehicle *)_instance)->IsWindowDamaged((uint8_t)windowId);
}

CAPI void alt_IVehicle_SetWindowDamaged(struct alt_IVehicle* _instance, unsigned char windowId, _Bool isDamaged)
{
    ((alt::IVehicle *)_instance)->SetWindowDamaged((uint8_t)windowId, (_Bool)isDamaged);
}

CAPI _Bool alt_IVehicle_IsSpecialLightDamaged(struct alt_IVehicle* _instance, unsigned char specialLightId)
{
    return (_Bool)((alt::IVehicle *)_instance)->IsSpecialLightDamaged((uint8_t)specialLightId);
}

CAPI void alt_IVehicle_SetSpecialLightDamaged(struct alt_IVehicle* _instance, unsigned char specialLightId, _Bool isDamaged)
{
    ((alt::IVehicle *)_instance)->SetSpecialLightDamaged((uint8_t)specialLightId, (_Bool)isDamaged);
}

CAPI _Bool alt_IVehicle_HasArmoredWindows(struct alt_IVehicle* _instance)
{
    return (_Bool)((alt::IVehicle *)_instance)->HasArmoredWindows();
}

CAPI float alt_IVehicle_GetArmoredWindowHealth(struct alt_IVehicle* _instance, unsigned char windowId)
{
    return (float)((alt::IVehicle *)_instance)->GetArmoredWindowHealth((uint8_t)windowId);
}

CAPI void alt_IVehicle_SetArmoredWindowHealth(struct alt_IVehicle* _instance, unsigned char windowId, float health)
{
    ((alt::IVehicle *)_instance)->SetArmoredWindowHealth((uint8_t)windowId, (float)health);
}

CAPI unsigned char alt_IVehicle_GetArmoredWindowShootCount(struct alt_IVehicle* _instance, unsigned char windowId)
{
    return (unsigned char)((alt::IVehicle *)_instance)->GetArmoredWindowShootCount((uint8_t)windowId);
}

CAPI void alt_IVehicle_SetArmoredWindowShootCount(struct alt_IVehicle* _instance, unsigned char windowId, unsigned char count)
{
    ((alt::IVehicle *)_instance)->SetArmoredWindowShootCount((uint8_t)windowId, (uint8_t)count);
}

CAPI unsigned char alt_IVehicle_GetBumperDamageLevel(struct alt_IVehicle* _instance, unsigned char bumperId)
{
    return (unsigned char)((alt::IVehicle *)_instance)->GetBumperDamageLevel((uint8_t)bumperId);
}

CAPI void alt_IVehicle_SetBumperDamageLevel(struct alt_IVehicle* _instance, unsigned char bumperId, unsigned char damageLevel)
{
    ((alt::IVehicle *)_instance)->SetBumperDamageLevel((uint8_t)bumperId, (uint8_t)damageLevel);
}

CAPI struct alt_String* alt_IVehicle_GetDamageDataBase64(struct alt_IVehicle* _instance)
{
    return (alt_String*)new class alt::String(((alt::IVehicle *)_instance)->GetDamageDataBase64());
}

CAPI void alt_IVehicle_LoadDamageDataFromBase64(struct alt_IVehicle* _instance, struct alt_StringView* base64)
{
    ((alt::IVehicle *)_instance)->LoadDamageDataFromBase64(*(alt::StringView*)base64);
}

CAPI void alt_IVehicle_SetManualEngineControl(struct alt_IVehicle* _instance, _Bool state)
{
    ((alt::IVehicle *)_instance)->SetManualEngineControl((_Bool)state);
}

CAPI _Bool alt_IVehicle_IsManualEngineControl(struct alt_IVehicle* _instance)
{
    return (_Bool)((alt::IVehicle *)_instance)->IsManualEngineControl();
}

CAPI struct alt_String* alt_IVehicle_GetScriptDataBase64(struct alt_IVehicle* _instance)
{
    return (alt_String*)new class alt::String(((alt::IVehicle *)_instance)->GetScriptDataBase64());
}

CAPI void alt_IVehicle_LoadScriptDataFromBase64(struct alt_IVehicle* _instance, struct alt_StringView* base64)
{
    ((alt::IVehicle *)_instance)->LoadScriptDataFromBase64(*(alt::StringView*)base64);
}

CAPI struct alt_IColShape* alt_CRefCountable_to_alt_IColShape(struct alt_CRefCountable* from)
{
    return (alt_IColShape*)dynamic_cast<alt::IColShape*>((alt::CRefCountable*)from);
}

CAPI struct alt_CRefCountable* alt_IColShape_to_alt_CRefCountable(struct alt_IColShape* from)
{
    return (alt_CRefCountable*)static_cast<alt::CRefCountable*>((alt::IColShape*)from);
}

CAPI unsigned long long alt_IColShape_GetRefCount(struct alt_IColShape* _instance)
{
    return (unsigned long long)static_cast<alt::CRefCountable *>((alt::IColShape *)_instance)->GetRefCount();
}

CAPI void alt_IColShape_AddRef(struct alt_IColShape* _instance)
{
    static_cast<alt::CRefCountable *>((alt::IColShape *)_instance)->AddRef();
}

CAPI void alt_IColShape_RemoveRef(struct alt_IColShape* _instance)
{
    static_cast<alt::CRefCountable *>((alt::IColShape *)_instance)->RemoveRef();
}

CAPI void alt_IColShape_AddWeakRef(struct alt_IColShape* _instance, struct alt_IWeakRef* ref)
{
    static_cast<alt::CRefCountable *>((alt::IColShape *)_instance)->AddWeakRef((alt::IWeakRef *)ref);
}

CAPI void alt_IColShape_RemoveWeakRef(struct alt_IColShape* _instance, struct alt_IWeakRef* ref)
{
    static_cast<alt::CRefCountable *>((alt::IColShape *)_instance)->RemoveWeakRef((alt::IWeakRef *)ref);
}

CAPI struct alt_IColShape* alt_IBaseObject_to_alt_IColShape(struct alt_IBaseObject* from)
{
    return (alt_IColShape*)dynamic_cast<alt::IColShape*>((alt::IBaseObject*)from);
}

CAPI struct alt_IBaseObject* alt_IColShape_to_alt_IBaseObject(struct alt_IColShape* from)
{
    return (alt_IBaseObject*)static_cast<alt::IBaseObject*>((alt::IColShape*)from);
}

CAPI alt_IBaseObject_Type alt_IColShape_GetType(struct alt_IColShape* _instance)
{
    return (alt_IBaseObject_Type)static_cast<alt::IBaseObject *>((alt::IColShape *)_instance)->GetType();
}

CAPI struct alt_RefBase_RefStore_constIMValue* alt_IColShape_GetMetaData(struct alt_IColShape* _instance, struct alt_StringView* key)
{
    return (alt_RefBase_RefStore_constIMValue*)new class alt::RefBase<class alt::RefStore<const class alt::IMValue> >(static_cast<alt::IBaseObject *>((alt::IColShape *)_instance)->GetMetaData(*(alt::StringView*)key));
}

CAPI void alt_IColShape_SetMetaData(struct alt_IColShape* _instance, struct alt_StringView* key, struct alt_RefBase_RefStore_IMValue* val)
{
    static_cast<alt::IBaseObject *>((alt::IColShape *)_instance)->SetMetaData(*(alt::StringView*)key, *(alt::MValue*)val);
}

CAPI struct alt_IColShape* alt_IWorldObject_to_alt_IColShape(struct alt_IWorldObject* from)
{
    return (alt_IColShape*)dynamic_cast<alt::IColShape*>((alt::IWorldObject*)from);
}

CAPI struct alt_IWorldObject* alt_IColShape_to_alt_IWorldObject(struct alt_IColShape* from)
{
    return (alt_IWorldObject*)static_cast<alt::IWorldObject*>((alt::IColShape*)from);
}

CAPI struct alt_Vector_float_3_PointLayout* alt_IColShape_GetPosition(struct alt_IColShape* _instance)
{
    return (alt_Vector_float_3_PointLayout*)new class alt::Vector<float, 3, class alt::PointLayout>(static_cast<alt::IWorldObject *>((alt::IColShape *)_instance)->GetPosition());
}

CAPI void alt_IColShape_SetPosition(struct alt_IColShape* _instance, struct alt_Vector_float_3_PointLayout* pos)
{
    static_cast<alt::IWorldObject *>((alt::IColShape *)_instance)->SetPosition(*(alt::Position*)pos);
}

CAPI int alt_IColShape_GetDimension(struct alt_IColShape* _instance)
{
    return (int)static_cast<alt::IWorldObject *>((alt::IColShape *)_instance)->GetDimension();
}

CAPI void alt_IColShape_SetDimension(struct alt_IColShape* _instance, int dimension)
{
    static_cast<alt::IWorldObject *>((alt::IColShape *)_instance)->SetDimension((int32_t)dimension);
}

CAPI alt_IColShape_ColShapeType alt_IColShape_GetColshapeType(struct alt_IColShape* _instance)
{
    return (alt_IColShape_ColShapeType)((alt::IColShape *)_instance)->GetColshapeType();
}

CAPI _Bool alt_IColShape_IsEntityIn(struct alt_IColShape* _instance, struct alt_RefBase_RefStore_IEntity* ent)
{
    return (_Bool)((alt::IColShape *)_instance)->IsEntityIn(*(Ref<alt::IEntity>*)ent);
}

CAPI _Bool alt_IColShape_IsPointIn(struct alt_IColShape* _instance, struct alt_Vector_float_3_PointLayout* p)
{
    return (_Bool)((alt::IColShape *)_instance)->IsPointIn(*(alt::Position*)p);
}

CAPI struct alt_ICheckpoint* alt_CRefCountable_to_alt_ICheckpoint(struct alt_CRefCountable* from)
{
    return (alt_ICheckpoint*)dynamic_cast<alt::ICheckpoint*>((alt::CRefCountable*)from);
}

CAPI struct alt_CRefCountable* alt_ICheckpoint_to_alt_CRefCountable(struct alt_ICheckpoint* from)
{
    return (alt_CRefCountable*)static_cast<alt::CRefCountable*>((alt::ICheckpoint*)from);
}

CAPI unsigned long long alt_ICheckpoint_GetRefCount(struct alt_ICheckpoint* _instance)
{
    return (unsigned long long)static_cast<alt::CRefCountable *>((alt::ICheckpoint *)_instance)->GetRefCount();
}

CAPI void alt_ICheckpoint_AddRef(struct alt_ICheckpoint* _instance)
{
    static_cast<alt::CRefCountable *>((alt::ICheckpoint *)_instance)->AddRef();
}

CAPI void alt_ICheckpoint_RemoveRef(struct alt_ICheckpoint* _instance)
{
    static_cast<alt::CRefCountable *>((alt::ICheckpoint *)_instance)->RemoveRef();
}

CAPI void alt_ICheckpoint_AddWeakRef(struct alt_ICheckpoint* _instance, struct alt_IWeakRef* ref)
{
    static_cast<alt::CRefCountable *>((alt::ICheckpoint *)_instance)->AddWeakRef((alt::IWeakRef *)ref);
}

CAPI void alt_ICheckpoint_RemoveWeakRef(struct alt_ICheckpoint* _instance, struct alt_IWeakRef* ref)
{
    static_cast<alt::CRefCountable *>((alt::ICheckpoint *)_instance)->RemoveWeakRef((alt::IWeakRef *)ref);
}

CAPI struct alt_ICheckpoint* alt_IBaseObject_to_alt_ICheckpoint(struct alt_IBaseObject* from)
{
    return (alt_ICheckpoint*)dynamic_cast<alt::ICheckpoint*>((alt::IBaseObject*)from);
}

CAPI struct alt_IBaseObject* alt_ICheckpoint_to_alt_IBaseObject(struct alt_ICheckpoint* from)
{
    return (alt_IBaseObject*)static_cast<alt::IBaseObject*>((alt::ICheckpoint*)from);
}

CAPI alt_IBaseObject_Type alt_ICheckpoint_GetType(struct alt_ICheckpoint* _instance)
{
    return (alt_IBaseObject_Type)static_cast<alt::IBaseObject *>((alt::ICheckpoint *)_instance)->GetType();
}

CAPI struct alt_RefBase_RefStore_constIMValue* alt_ICheckpoint_GetMetaData(struct alt_ICheckpoint* _instance, struct alt_StringView* key)
{
    return (alt_RefBase_RefStore_constIMValue*)new class alt::RefBase<class alt::RefStore<const class alt::IMValue> >(static_cast<alt::IBaseObject *>((alt::ICheckpoint *)_instance)->GetMetaData(*(alt::StringView*)key));
}

CAPI void alt_ICheckpoint_SetMetaData(struct alt_ICheckpoint* _instance, struct alt_StringView* key, struct alt_RefBase_RefStore_IMValue* val)
{
    static_cast<alt::IBaseObject *>((alt::ICheckpoint *)_instance)->SetMetaData(*(alt::StringView*)key, *(alt::MValue*)val);
}

CAPI struct alt_ICheckpoint* alt_IWorldObject_to_alt_ICheckpoint(struct alt_IWorldObject* from)
{
    return (alt_ICheckpoint*)dynamic_cast<alt::ICheckpoint*>((alt::IWorldObject*)from);
}

CAPI struct alt_IWorldObject* alt_ICheckpoint_to_alt_IWorldObject(struct alt_ICheckpoint* from)
{
    return (alt_IWorldObject*)static_cast<alt::IWorldObject*>((alt::ICheckpoint*)from);
}

CAPI struct alt_Vector_float_3_PointLayout* alt_ICheckpoint_GetPosition(struct alt_ICheckpoint* _instance)
{
    return (alt_Vector_float_3_PointLayout*)new class alt::Vector<float, 3, class alt::PointLayout>(static_cast<alt::IWorldObject *>((alt::ICheckpoint *)_instance)->GetPosition());
}

CAPI void alt_ICheckpoint_SetPosition(struct alt_ICheckpoint* _instance, struct alt_Vector_float_3_PointLayout* pos)
{
    static_cast<alt::IWorldObject *>((alt::ICheckpoint *)_instance)->SetPosition(*(alt::Position*)pos);
}

CAPI int alt_ICheckpoint_GetDimension(struct alt_ICheckpoint* _instance)
{
    return (int)static_cast<alt::IWorldObject *>((alt::ICheckpoint *)_instance)->GetDimension();
}

CAPI void alt_ICheckpoint_SetDimension(struct alt_ICheckpoint* _instance, int dimension)
{
    static_cast<alt::IWorldObject *>((alt::ICheckpoint *)_instance)->SetDimension((int32_t)dimension);
}

CAPI struct alt_ICheckpoint* alt_IColShape_to_alt_ICheckpoint(struct alt_IColShape* from)
{
    return (alt_ICheckpoint*)dynamic_cast<alt::ICheckpoint*>((alt::IColShape*)from);
}

CAPI struct alt_IColShape* alt_ICheckpoint_to_alt_IColShape(struct alt_ICheckpoint* from)
{
    return (alt_IColShape*)static_cast<alt::IColShape*>((alt::ICheckpoint*)from);
}

CAPI alt_IColShape_ColShapeType alt_ICheckpoint_GetColshapeType(struct alt_ICheckpoint* _instance)
{
    return (alt_IColShape_ColShapeType)static_cast<alt::IColShape *>((alt::ICheckpoint *)_instance)->GetColshapeType();
}

CAPI _Bool alt_ICheckpoint_IsEntityIn(struct alt_ICheckpoint* _instance, struct alt_RefBase_RefStore_IEntity* ent)
{
    return (_Bool)static_cast<alt::IColShape *>((alt::ICheckpoint *)_instance)->IsEntityIn(*(Ref<alt::IEntity>*)ent);
}

CAPI _Bool alt_ICheckpoint_IsPointIn(struct alt_ICheckpoint* _instance, struct alt_Vector_float_3_PointLayout* p)
{
    return (_Bool)static_cast<alt::IColShape *>((alt::ICheckpoint *)_instance)->IsPointIn(*(alt::Position*)p);
}

CAPI unsigned char alt_ICheckpoint_GetCheckpointType(struct alt_ICheckpoint* _instance)
{
    return (unsigned char)((alt::ICheckpoint *)_instance)->GetCheckpointType();
}

CAPI float alt_ICheckpoint_GetHeight(struct alt_ICheckpoint* _instance)
{
    return (float)((alt::ICheckpoint *)_instance)->GetHeight();
}

CAPI float alt_ICheckpoint_GetRadius(struct alt_ICheckpoint* _instance)
{
    return (float)((alt::ICheckpoint *)_instance)->GetRadius();
}

CAPI struct alt_RGBA* alt_ICheckpoint_GetColor(struct alt_ICheckpoint* _instance)
{
    return (alt_RGBA*)new struct alt::RGBA(((alt::ICheckpoint *)_instance)->GetColor());
}

CAPI struct alt_IBlip* alt_CRefCountable_to_alt_IBlip(struct alt_CRefCountable* from)
{
    return (alt_IBlip*)dynamic_cast<alt::IBlip*>((alt::CRefCountable*)from);
}

CAPI struct alt_CRefCountable* alt_IBlip_to_alt_CRefCountable(struct alt_IBlip* from)
{
    return (alt_CRefCountable*)static_cast<alt::CRefCountable*>((alt::IBlip*)from);
}

CAPI unsigned long long alt_IBlip_GetRefCount(struct alt_IBlip* _instance)
{
    return (unsigned long long)static_cast<alt::CRefCountable *>((alt::IBlip *)_instance)->GetRefCount();
}

CAPI void alt_IBlip_AddRef(struct alt_IBlip* _instance)
{
    static_cast<alt::CRefCountable *>((alt::IBlip *)_instance)->AddRef();
}

CAPI void alt_IBlip_RemoveRef(struct alt_IBlip* _instance)
{
    static_cast<alt::CRefCountable *>((alt::IBlip *)_instance)->RemoveRef();
}

CAPI void alt_IBlip_AddWeakRef(struct alt_IBlip* _instance, struct alt_IWeakRef* ref)
{
    static_cast<alt::CRefCountable *>((alt::IBlip *)_instance)->AddWeakRef((alt::IWeakRef *)ref);
}

CAPI void alt_IBlip_RemoveWeakRef(struct alt_IBlip* _instance, struct alt_IWeakRef* ref)
{
    static_cast<alt::CRefCountable *>((alt::IBlip *)_instance)->RemoveWeakRef((alt::IWeakRef *)ref);
}

CAPI struct alt_IBlip* alt_IBaseObject_to_alt_IBlip(struct alt_IBaseObject* from)
{
    return (alt_IBlip*)dynamic_cast<alt::IBlip*>((alt::IBaseObject*)from);
}

CAPI struct alt_IBaseObject* alt_IBlip_to_alt_IBaseObject(struct alt_IBlip* from)
{
    return (alt_IBaseObject*)static_cast<alt::IBaseObject*>((alt::IBlip*)from);
}

CAPI alt_IBaseObject_Type alt_IBlip_GetType(struct alt_IBlip* _instance)
{
    return (alt_IBaseObject_Type)static_cast<alt::IBaseObject *>((alt::IBlip *)_instance)->GetType();
}

CAPI struct alt_RefBase_RefStore_constIMValue* alt_IBlip_GetMetaData(struct alt_IBlip* _instance, struct alt_StringView* key)
{
    return (alt_RefBase_RefStore_constIMValue*)new class alt::RefBase<class alt::RefStore<const class alt::IMValue> >(static_cast<alt::IBaseObject *>((alt::IBlip *)_instance)->GetMetaData(*(alt::StringView*)key));
}

CAPI void alt_IBlip_SetMetaData(struct alt_IBlip* _instance, struct alt_StringView* key, struct alt_RefBase_RefStore_IMValue* val)
{
    static_cast<alt::IBaseObject *>((alt::IBlip *)_instance)->SetMetaData(*(alt::StringView*)key, *(alt::MValue*)val);
}

CAPI struct alt_IBlip* alt_IWorldObject_to_alt_IBlip(struct alt_IWorldObject* from)
{
    return (alt_IBlip*)dynamic_cast<alt::IBlip*>((alt::IWorldObject*)from);
}

CAPI struct alt_IWorldObject* alt_IBlip_to_alt_IWorldObject(struct alt_IBlip* from)
{
    return (alt_IWorldObject*)static_cast<alt::IWorldObject*>((alt::IBlip*)from);
}

CAPI struct alt_Vector_float_3_PointLayout* alt_IBlip_GetPosition(struct alt_IBlip* _instance)
{
    return (alt_Vector_float_3_PointLayout*)new class alt::Vector<float, 3, class alt::PointLayout>(static_cast<alt::IWorldObject *>((alt::IBlip *)_instance)->GetPosition());
}

CAPI void alt_IBlip_SetPosition(struct alt_IBlip* _instance, struct alt_Vector_float_3_PointLayout* pos)
{
    static_cast<alt::IWorldObject *>((alt::IBlip *)_instance)->SetPosition(*(alt::Position*)pos);
}

CAPI int alt_IBlip_GetDimension(struct alt_IBlip* _instance)
{
    return (int)static_cast<alt::IWorldObject *>((alt::IBlip *)_instance)->GetDimension();
}

CAPI void alt_IBlip_SetDimension(struct alt_IBlip* _instance, int dimension)
{
    static_cast<alt::IWorldObject *>((alt::IBlip *)_instance)->SetDimension((int32_t)dimension);
}

CAPI _Bool alt_IBlip_IsGlobal(struct alt_IBlip* _instance)
{
    return (_Bool)((alt::IBlip *)_instance)->IsGlobal();
}

CAPI struct alt_RefBase_RefStore_IPlayer* alt_IBlip_GetTarget(struct alt_IBlip* _instance)
{
    return (alt_RefBase_RefStore_IPlayer*)new class alt::RefBase<class alt::RefStore<class alt::IPlayer> >(((alt::IBlip *)_instance)->GetTarget());
}

CAPI _Bool alt_IBlip_IsAttached(struct alt_IBlip* _instance)
{
    return (_Bool)((alt::IBlip *)_instance)->IsAttached();
}

CAPI struct alt_RefBase_RefStore_IEntity* alt_IBlip_AttachedTo(struct alt_IBlip* _instance)
{
    return (alt_RefBase_RefStore_IEntity*)new class alt::RefBase<class alt::RefStore<class alt::IEntity> >(((alt::IBlip *)_instance)->AttachedTo());
}

CAPI alt_IBlip_BlipType alt_IBlip_GetBlipType(struct alt_IBlip* _instance)
{
    return (alt_IBlip_BlipType)((alt::IBlip *)_instance)->GetBlipType();
}

CAPI void alt_IBlip_SetSprite(struct alt_IBlip* _instance, unsigned short sprite)
{
    ((alt::IBlip *)_instance)->SetSprite((uint16_t)sprite);
}

CAPI void alt_IBlip_SetColor(struct alt_IBlip* _instance, unsigned char color)
{
    ((alt::IBlip *)_instance)->SetColor((uint8_t)color);
}

CAPI void alt_IBlip_SetRoute(struct alt_IBlip* _instance, _Bool state)
{
    ((alt::IBlip *)_instance)->SetRoute((_Bool)state);
}

CAPI void alt_IBlip_SetRouteColor(struct alt_IBlip* _instance, unsigned char color)
{
    ((alt::IBlip *)_instance)->SetRouteColor((uint8_t)color);
}

CAPI struct alt_IVoiceChannel* alt_CRefCountable_to_alt_IVoiceChannel(struct alt_CRefCountable* from)
{
    return (alt_IVoiceChannel*)dynamic_cast<alt::IVoiceChannel*>((alt::CRefCountable*)from);
}

CAPI struct alt_CRefCountable* alt_IVoiceChannel_to_alt_CRefCountable(struct alt_IVoiceChannel* from)
{
    return (alt_CRefCountable*)static_cast<alt::CRefCountable*>((alt::IVoiceChannel*)from);
}

CAPI unsigned long long alt_IVoiceChannel_GetRefCount(struct alt_IVoiceChannel* _instance)
{
    return (unsigned long long)static_cast<alt::CRefCountable *>((alt::IVoiceChannel *)_instance)->GetRefCount();
}

CAPI void alt_IVoiceChannel_AddRef(struct alt_IVoiceChannel* _instance)
{
    static_cast<alt::CRefCountable *>((alt::IVoiceChannel *)_instance)->AddRef();
}

CAPI void alt_IVoiceChannel_RemoveRef(struct alt_IVoiceChannel* _instance)
{
    static_cast<alt::CRefCountable *>((alt::IVoiceChannel *)_instance)->RemoveRef();
}

CAPI void alt_IVoiceChannel_AddWeakRef(struct alt_IVoiceChannel* _instance, struct alt_IWeakRef* ref)
{
    static_cast<alt::CRefCountable *>((alt::IVoiceChannel *)_instance)->AddWeakRef((alt::IWeakRef *)ref);
}

CAPI void alt_IVoiceChannel_RemoveWeakRef(struct alt_IVoiceChannel* _instance, struct alt_IWeakRef* ref)
{
    static_cast<alt::CRefCountable *>((alt::IVoiceChannel *)_instance)->RemoveWeakRef((alt::IWeakRef *)ref);
}

CAPI struct alt_IVoiceChannel* alt_IBaseObject_to_alt_IVoiceChannel(struct alt_IBaseObject* from)
{
    return (alt_IVoiceChannel*)dynamic_cast<alt::IVoiceChannel*>((alt::IBaseObject*)from);
}

CAPI struct alt_IBaseObject* alt_IVoiceChannel_to_alt_IBaseObject(struct alt_IVoiceChannel* from)
{
    return (alt_IBaseObject*)static_cast<alt::IBaseObject*>((alt::IVoiceChannel*)from);
}

CAPI alt_IBaseObject_Type alt_IVoiceChannel_GetType(struct alt_IVoiceChannel* _instance)
{
    return (alt_IBaseObject_Type)static_cast<alt::IBaseObject *>((alt::IVoiceChannel *)_instance)->GetType();
}

CAPI struct alt_RefBase_RefStore_constIMValue* alt_IVoiceChannel_GetMetaData(struct alt_IVoiceChannel* _instance, struct alt_StringView* key)
{
    return (alt_RefBase_RefStore_constIMValue*)new class alt::RefBase<class alt::RefStore<const class alt::IMValue> >(static_cast<alt::IBaseObject *>((alt::IVoiceChannel *)_instance)->GetMetaData(*(alt::StringView*)key));
}

CAPI void alt_IVoiceChannel_SetMetaData(struct alt_IVoiceChannel* _instance, struct alt_StringView* key, struct alt_RefBase_RefStore_IMValue* val)
{
    static_cast<alt::IBaseObject *>((alt::IVoiceChannel *)_instance)->SetMetaData(*(alt::StringView*)key, *(alt::MValue*)val);
}

CAPI _Bool alt_IVoiceChannel_IsSpatial(struct alt_IVoiceChannel* _instance)
{
    return (_Bool)((alt::IVoiceChannel *)_instance)->IsSpatial();
}

CAPI float alt_IVoiceChannel_GetMaxDistance(struct alt_IVoiceChannel* _instance)
{
    return (float)((alt::IVoiceChannel *)_instance)->GetMaxDistance();
}

CAPI _Bool alt_IVoiceChannel_HasPlayer(struct alt_IVoiceChannel* _instance, struct alt_RefBase_RefStore_IPlayer* player)
{
    return (_Bool)((alt::IVoiceChannel *)_instance)->HasPlayer(*(Ref<alt::IPlayer>*)player);
}

CAPI void alt_IVoiceChannel_AddPlayer(struct alt_IVoiceChannel* _instance, struct alt_RefBase_RefStore_IPlayer* player)
{
    ((alt::IVoiceChannel *)_instance)->AddPlayer(*(Ref<alt::IPlayer>*)player);
}

CAPI void alt_IVoiceChannel_RemovePlayer(struct alt_IVoiceChannel* _instance, struct alt_RefBase_RefStore_IPlayer* player)
{
    ((alt::IVoiceChannel *)_instance)->RemovePlayer(*(Ref<alt::IPlayer>*)player);
}

CAPI _Bool alt_IVoiceChannel_IsPlayerMuted(struct alt_IVoiceChannel* _instance, struct alt_RefBase_RefStore_IPlayer* player)
{
    return (_Bool)((alt::IVoiceChannel *)_instance)->IsPlayerMuted(*(Ref<alt::IPlayer>*)player);
}

CAPI void alt_IVoiceChannel_MutePlayer(struct alt_IVoiceChannel* _instance, struct alt_RefBase_RefStore_IPlayer* player)
{
    ((alt::IVoiceChannel *)_instance)->MutePlayer(*(Ref<alt::IPlayer>*)player);
}

CAPI void alt_IVoiceChannel_UnmutePlayer(struct alt_IVoiceChannel* _instance, struct alt_RefBase_RefStore_IPlayer* player)
{
    ((alt::IVoiceChannel *)_instance)->UnmutePlayer(*(Ref<alt::IPlayer>*)player);
}

CAPI void alt_CEvent_free(struct alt_CEvent* ptr)
{
    delete (class alt::CEvent *)ptr;
}

CAPI struct alt_CEvent* alt_CEvent_Create(alt_CEvent_Type _type)
{
    return (struct alt_CEvent*)new alt::CEvent((alt::CEvent::Type)_type);
}

CAPI alt_CEvent_Type alt_CEvent_GetType(struct alt_CEvent* _instance)
{
    return (alt_CEvent_Type)((alt::CEvent *)_instance)->GetType();
}

CAPI _Bool alt_CEvent_WasCancelled(struct alt_CEvent* _instance)
{
    return (_Bool)((alt::CEvent *)_instance)->WasCancelled();
}

CAPI void alt_CEvent_Cancel(struct alt_CEvent* _instance)
{
    ((alt::CEvent *)_instance)->Cancel();
}

CAPI struct alt_CEvent* alt_CEvent_Create_1(struct alt_CEvent* _p0)
{
    return (struct alt_CEvent*)new alt::CEvent(*(const alt::CEvent *)_p0);
}

CAPI void alt_CEvent_Assign_constCEventRef(struct alt_CEvent* _instance, struct alt_CEvent* _p0)
{
    ((alt::CEvent *)_instance)->operator=(*(const alt::CEvent *)_p0);
}

CAPI struct alt_CEvent* alt_CEvent_Create_2(struct alt_CEvent* _p0)
{
    return (struct alt_CEvent*)new alt::CEvent(*(alt::CEvent *)_p0);
}

CAPI void alt_CEvent_Assign_CEventRefRef(struct alt_CEvent* _instance, struct alt_CEvent* _p0)
{
    ((alt::CEvent *)_instance)->operator=(*(alt::CEvent *)_p0);
}

CAPI void alt_CServerScriptEvent_free(struct alt_CServerScriptEvent* ptr)
{
    delete (class alt::CServerScriptEvent *)ptr;
}

CAPI struct alt_CServerScriptEvent* alt_CEvent_to_alt_CServerScriptEvent(struct alt_CEvent* from)
{
    return (alt_CServerScriptEvent*)static_cast<alt::CServerScriptEvent*>((alt::CEvent*)from);
}

CAPI struct alt_CEvent* alt_CServerScriptEvent_to_alt_CEvent(struct alt_CServerScriptEvent* from)
{
    return (alt_CEvent*)static_cast<alt::CEvent*>((alt::CServerScriptEvent*)from);
}

CAPI struct alt_CServerScriptEvent* alt_CServerScriptEvent_Create(alt_CEvent_Type _type)
{
    return (struct alt_CServerScriptEvent*)new alt::CEvent((alt::CEvent::Type)_type);
}

CAPI alt_CEvent_Type alt_CServerScriptEvent_GetType(struct alt_CServerScriptEvent* _instance)
{
    return (alt_CEvent_Type)static_cast<alt::CEvent *>((alt::CServerScriptEvent *)_instance)->GetType();
}

CAPI _Bool alt_CServerScriptEvent_WasCancelled(struct alt_CServerScriptEvent* _instance)
{
    return (_Bool)static_cast<alt::CEvent *>((alt::CServerScriptEvent *)_instance)->WasCancelled();
}

CAPI void alt_CServerScriptEvent_Cancel(struct alt_CServerScriptEvent* _instance)
{
    static_cast<alt::CEvent *>((alt::CServerScriptEvent *)_instance)->Cancel();
}

CAPI struct alt_CServerScriptEvent* alt_CServerScriptEvent_Create_1(struct alt_CEvent* _p0)
{
    return (struct alt_CServerScriptEvent*)new alt::CEvent(*(const alt::CEvent *)_p0);
}

CAPI void alt_CServerScriptEvent_Assign_constCEventRef(struct alt_CServerScriptEvent* _instance, struct alt_CEvent* _p0)
{
    static_cast<alt::CEvent *>((alt::CServerScriptEvent *)_instance)->operator=(*(const alt::CEvent *)_p0);
}

CAPI struct alt_CServerScriptEvent* alt_CServerScriptEvent_Create_2(struct alt_CEvent* _p0)
{
    return (struct alt_CServerScriptEvent*)new alt::CEvent(*(alt::CEvent *)_p0);
}

CAPI void alt_CServerScriptEvent_Assign_CEventRefRef(struct alt_CServerScriptEvent* _instance, struct alt_CEvent* _p0)
{
    static_cast<alt::CEvent *>((alt::CServerScriptEvent *)_instance)->operator=(*(alt::CEvent *)_p0);
}

CAPI struct alt_CServerScriptEvent* alt_CServerScriptEvent_Create_3(struct alt_StringView* _name, struct alt_Array_RefBase_RefStore_constIMValue* _args)
{
    return (struct alt_CServerScriptEvent*)new alt::CServerScriptEvent(*(alt::StringView*)_name, *(const alt::MValueArgs *)_args);
}

CAPI struct alt_StringView* alt_CServerScriptEvent_GetName(struct alt_CServerScriptEvent* _instance)
{
    return (alt_StringView*)new class alt::StringView(((alt::CServerScriptEvent *)_instance)->GetName());
}

CAPI struct alt_Array_RefBase_RefStore_constIMValue* alt_CServerScriptEvent_GetArgs(struct alt_CServerScriptEvent* _instance)
{
    return (alt_Array_RefBase_RefStore_constIMValue*)&((alt::CServerScriptEvent *)_instance)->GetArgs();
}

CAPI struct alt_CServerScriptEvent* alt_CServerScriptEvent_Create_4(struct alt_CServerScriptEvent* _p0)
{
    return (struct alt_CServerScriptEvent*)new alt::CServerScriptEvent(*(const alt::CServerScriptEvent *)_p0);
}

CAPI struct alt_CServerScriptEvent* alt_CServerScriptEvent_Create_5(struct alt_CServerScriptEvent* _p0)
{
    return (struct alt_CServerScriptEvent*)new alt::CServerScriptEvent(*(alt::CServerScriptEvent *)_p0);
}

CAPI void alt_CServerScriptEvent_Assign_constCServerScriptEventRef(struct alt_CServerScriptEvent* _instance, struct alt_CServerScriptEvent* _p0)
{
    ((alt::CServerScriptEvent *)_instance)->operator=(*(const alt::CServerScriptEvent *)_p0);
}

CAPI void alt_CServerScriptEvent_Assign_CServerScriptEventRefRef(struct alt_CServerScriptEvent* _instance, struct alt_CServerScriptEvent* _p0)
{
    ((alt::CServerScriptEvent *)_instance)->operator=(*(alt::CServerScriptEvent *)_p0);
}

CAPI void alt_CClientScriptEvent_free(struct alt_CClientScriptEvent* ptr)
{
    delete (class alt::CClientScriptEvent *)ptr;
}

CAPI struct alt_CClientScriptEvent* alt_CEvent_to_alt_CClientScriptEvent(struct alt_CEvent* from)
{
    return (alt_CClientScriptEvent*)static_cast<alt::CClientScriptEvent*>((alt::CEvent*)from);
}

CAPI struct alt_CEvent* alt_CClientScriptEvent_to_alt_CEvent(struct alt_CClientScriptEvent* from)
{
    return (alt_CEvent*)static_cast<alt::CEvent*>((alt::CClientScriptEvent*)from);
}

CAPI struct alt_CClientScriptEvent* alt_CClientScriptEvent_Create(alt_CEvent_Type _type)
{
    return (struct alt_CClientScriptEvent*)new alt::CEvent((alt::CEvent::Type)_type);
}

CAPI alt_CEvent_Type alt_CClientScriptEvent_GetType(struct alt_CClientScriptEvent* _instance)
{
    return (alt_CEvent_Type)static_cast<alt::CEvent *>((alt::CClientScriptEvent *)_instance)->GetType();
}

CAPI _Bool alt_CClientScriptEvent_WasCancelled(struct alt_CClientScriptEvent* _instance)
{
    return (_Bool)static_cast<alt::CEvent *>((alt::CClientScriptEvent *)_instance)->WasCancelled();
}

CAPI void alt_CClientScriptEvent_Cancel(struct alt_CClientScriptEvent* _instance)
{
    static_cast<alt::CEvent *>((alt::CClientScriptEvent *)_instance)->Cancel();
}

CAPI struct alt_CClientScriptEvent* alt_CClientScriptEvent_Create_1(struct alt_CEvent* _p0)
{
    return (struct alt_CClientScriptEvent*)new alt::CEvent(*(const alt::CEvent *)_p0);
}

CAPI void alt_CClientScriptEvent_Assign_constCEventRef(struct alt_CClientScriptEvent* _instance, struct alt_CEvent* _p0)
{
    static_cast<alt::CEvent *>((alt::CClientScriptEvent *)_instance)->operator=(*(const alt::CEvent *)_p0);
}

CAPI struct alt_CClientScriptEvent* alt_CClientScriptEvent_Create_2(struct alt_CEvent* _p0)
{
    return (struct alt_CClientScriptEvent*)new alt::CEvent(*(alt::CEvent *)_p0);
}

CAPI void alt_CClientScriptEvent_Assign_CEventRefRef(struct alt_CClientScriptEvent* _instance, struct alt_CEvent* _p0)
{
    static_cast<alt::CEvent *>((alt::CClientScriptEvent *)_instance)->operator=(*(alt::CEvent *)_p0);
}

CAPI struct alt_CClientScriptEvent* alt_CClientScriptEvent_Create_3(struct alt_StringView* _name, struct alt_Array_RefBase_RefStore_constIMValue* _args)
{
    return (struct alt_CClientScriptEvent*)new alt::CClientScriptEvent(*(alt::StringView*)_name, *(const alt::MValueArgs *)_args);
}

CAPI struct alt_StringView* alt_CClientScriptEvent_GetName(struct alt_CClientScriptEvent* _instance)
{
    return (alt_StringView*)new class alt::StringView(((alt::CClientScriptEvent *)_instance)->GetName());
}

CAPI struct alt_Array_RefBase_RefStore_constIMValue* alt_CClientScriptEvent_GetArgs(struct alt_CClientScriptEvent* _instance)
{
    return (alt_Array_RefBase_RefStore_constIMValue*)&((alt::CClientScriptEvent *)_instance)->GetArgs();
}

CAPI struct alt_CClientScriptEvent* alt_CClientScriptEvent_Create_4(struct alt_CClientScriptEvent* _p0)
{
    return (struct alt_CClientScriptEvent*)new alt::CClientScriptEvent(*(const alt::CClientScriptEvent *)_p0);
}

CAPI struct alt_CClientScriptEvent* alt_CClientScriptEvent_Create_5(struct alt_CClientScriptEvent* _p0)
{
    return (struct alt_CClientScriptEvent*)new alt::CClientScriptEvent(*(alt::CClientScriptEvent *)_p0);
}

CAPI void alt_CClientScriptEvent_Assign_constCClientScriptEventRef(struct alt_CClientScriptEvent* _instance, struct alt_CClientScriptEvent* _p0)
{
    ((alt::CClientScriptEvent *)_instance)->operator=(*(const alt::CClientScriptEvent *)_p0);
}

CAPI void alt_CClientScriptEvent_Assign_CClientScriptEventRefRef(struct alt_CClientScriptEvent* _instance, struct alt_CClientScriptEvent* _p0)
{
    ((alt::CClientScriptEvent *)_instance)->operator=(*(alt::CClientScriptEvent *)_p0);
}

CAPI void alt_CPlayerConnectEvent_free(struct alt_CPlayerConnectEvent* ptr)
{
    delete (class alt::CPlayerConnectEvent *)ptr;
}

CAPI struct alt_CPlayerConnectEvent* alt_CEvent_to_alt_CPlayerConnectEvent(struct alt_CEvent* from)
{
    return (alt_CPlayerConnectEvent*)static_cast<alt::CPlayerConnectEvent*>((alt::CEvent*)from);
}

CAPI struct alt_CEvent* alt_CPlayerConnectEvent_to_alt_CEvent(struct alt_CPlayerConnectEvent* from)
{
    return (alt_CEvent*)static_cast<alt::CEvent*>((alt::CPlayerConnectEvent*)from);
}

CAPI struct alt_CPlayerConnectEvent* alt_CPlayerConnectEvent_Create(alt_CEvent_Type _type)
{
    return (struct alt_CPlayerConnectEvent*)new alt::CEvent((alt::CEvent::Type)_type);
}

CAPI alt_CEvent_Type alt_CPlayerConnectEvent_GetType(struct alt_CPlayerConnectEvent* _instance)
{
    return (alt_CEvent_Type)static_cast<alt::CEvent *>((alt::CPlayerConnectEvent *)_instance)->GetType();
}

CAPI _Bool alt_CPlayerConnectEvent_WasCancelled(struct alt_CPlayerConnectEvent* _instance)
{
    return (_Bool)static_cast<alt::CEvent *>((alt::CPlayerConnectEvent *)_instance)->WasCancelled();
}

CAPI void alt_CPlayerConnectEvent_Cancel(struct alt_CPlayerConnectEvent* _instance)
{
    static_cast<alt::CEvent *>((alt::CPlayerConnectEvent *)_instance)->Cancel();
}

CAPI struct alt_CPlayerConnectEvent* alt_CPlayerConnectEvent_Create_1(struct alt_CEvent* _p0)
{
    return (struct alt_CPlayerConnectEvent*)new alt::CEvent(*(const alt::CEvent *)_p0);
}

CAPI void alt_CPlayerConnectEvent_Assign_constCEventRef(struct alt_CPlayerConnectEvent* _instance, struct alt_CEvent* _p0)
{
    static_cast<alt::CEvent *>((alt::CPlayerConnectEvent *)_instance)->operator=(*(const alt::CEvent *)_p0);
}

CAPI struct alt_CPlayerConnectEvent* alt_CPlayerConnectEvent_Create_2(struct alt_CEvent* _p0)
{
    return (struct alt_CPlayerConnectEvent*)new alt::CEvent(*(alt::CEvent *)_p0);
}

CAPI void alt_CPlayerConnectEvent_Assign_CEventRefRef(struct alt_CPlayerConnectEvent* _instance, struct alt_CEvent* _p0)
{
    static_cast<alt::CEvent *>((alt::CPlayerConnectEvent *)_instance)->operator=(*(alt::CEvent *)_p0);
}

CAPI struct alt_CPlayerConnectEvent* alt_CPlayerConnectEvent_Create_3(struct alt_RefBase_RefStore_IPlayer* _target)
{
    return (struct alt_CPlayerConnectEvent*)new alt::CPlayerConnectEvent(*(Ref<alt::IPlayer>*)_target);
}

CAPI struct alt_RefBase_RefStore_IPlayer* alt_CPlayerConnectEvent_GetTarget(struct alt_CPlayerConnectEvent* _instance)
{
    return (alt_RefBase_RefStore_IPlayer*)new class alt::RefBase<class alt::RefStore<class alt::IPlayer> >(((alt::CPlayerConnectEvent *)_instance)->GetTarget());
}

CAPI struct alt_StringView* alt_CPlayerConnectEvent_GetReason(struct alt_CPlayerConnectEvent* _instance)
{
    return (alt_StringView*)new class alt::StringView(((alt::CPlayerConnectEvent *)_instance)->GetReason());
}

CAPI void alt_CPlayerConnectEvent_Cancel_1(struct alt_CPlayerConnectEvent* _instance, struct alt_StringView* _reason)
{
    ((alt::CPlayerConnectEvent *)_instance)->Cancel(*(alt::StringView*)_reason);
}

CAPI struct alt_CPlayerConnectEvent* alt_CPlayerConnectEvent_Create_4(struct alt_CPlayerConnectEvent* _p0)
{
    return (struct alt_CPlayerConnectEvent*)new alt::CPlayerConnectEvent(*(const alt::CPlayerConnectEvent *)_p0);
}

CAPI struct alt_CPlayerConnectEvent* alt_CPlayerConnectEvent_Create_5(struct alt_CPlayerConnectEvent* _p0)
{
    return (struct alt_CPlayerConnectEvent*)new alt::CPlayerConnectEvent(*(alt::CPlayerConnectEvent *)_p0);
}

CAPI void alt_CPlayerConnectEvent_Assign_constCPlayerConnectEventRef(struct alt_CPlayerConnectEvent* _instance, struct alt_CPlayerConnectEvent* _p0)
{
    ((alt::CPlayerConnectEvent *)_instance)->operator=(*(const alt::CPlayerConnectEvent *)_p0);
}

CAPI void alt_CPlayerConnectEvent_Assign_CPlayerConnectEventRefRef(struct alt_CPlayerConnectEvent* _instance, struct alt_CPlayerConnectEvent* _p0)
{
    ((alt::CPlayerConnectEvent *)_instance)->operator=(*(alt::CPlayerConnectEvent *)_p0);
}

CAPI void alt_CPlayerDisconnectEvent_free(struct alt_CPlayerDisconnectEvent* ptr)
{
    delete (class alt::CPlayerDisconnectEvent *)ptr;
}

CAPI struct alt_CPlayerDisconnectEvent* alt_CEvent_to_alt_CPlayerDisconnectEvent(struct alt_CEvent* from)
{
    return (alt_CPlayerDisconnectEvent*)static_cast<alt::CPlayerDisconnectEvent*>((alt::CEvent*)from);
}

CAPI struct alt_CEvent* alt_CPlayerDisconnectEvent_to_alt_CEvent(struct alt_CPlayerDisconnectEvent* from)
{
    return (alt_CEvent*)static_cast<alt::CEvent*>((alt::CPlayerDisconnectEvent*)from);
}

CAPI struct alt_CPlayerDisconnectEvent* alt_CPlayerDisconnectEvent_Create(alt_CEvent_Type _type)
{
    return (struct alt_CPlayerDisconnectEvent*)new alt::CEvent((alt::CEvent::Type)_type);
}

CAPI alt_CEvent_Type alt_CPlayerDisconnectEvent_GetType(struct alt_CPlayerDisconnectEvent* _instance)
{
    return (alt_CEvent_Type)static_cast<alt::CEvent *>((alt::CPlayerDisconnectEvent *)_instance)->GetType();
}

CAPI _Bool alt_CPlayerDisconnectEvent_WasCancelled(struct alt_CPlayerDisconnectEvent* _instance)
{
    return (_Bool)static_cast<alt::CEvent *>((alt::CPlayerDisconnectEvent *)_instance)->WasCancelled();
}

CAPI void alt_CPlayerDisconnectEvent_Cancel(struct alt_CPlayerDisconnectEvent* _instance)
{
    static_cast<alt::CEvent *>((alt::CPlayerDisconnectEvent *)_instance)->Cancel();
}

CAPI struct alt_CPlayerDisconnectEvent* alt_CPlayerDisconnectEvent_Create_1(struct alt_CEvent* _p0)
{
    return (struct alt_CPlayerDisconnectEvent*)new alt::CEvent(*(const alt::CEvent *)_p0);
}

CAPI void alt_CPlayerDisconnectEvent_Assign_constCEventRef(struct alt_CPlayerDisconnectEvent* _instance, struct alt_CEvent* _p0)
{
    static_cast<alt::CEvent *>((alt::CPlayerDisconnectEvent *)_instance)->operator=(*(const alt::CEvent *)_p0);
}

CAPI struct alt_CPlayerDisconnectEvent* alt_CPlayerDisconnectEvent_Create_2(struct alt_CEvent* _p0)
{
    return (struct alt_CPlayerDisconnectEvent*)new alt::CEvent(*(alt::CEvent *)_p0);
}

CAPI void alt_CPlayerDisconnectEvent_Assign_CEventRefRef(struct alt_CPlayerDisconnectEvent* _instance, struct alt_CEvent* _p0)
{
    static_cast<alt::CEvent *>((alt::CPlayerDisconnectEvent *)_instance)->operator=(*(alt::CEvent *)_p0);
}

CAPI struct alt_CPlayerDisconnectEvent* alt_CPlayerDisconnectEvent_Create_3(struct alt_RefBase_RefStore_IPlayer* _target, struct alt_StringView* _reason)
{
    return (struct alt_CPlayerDisconnectEvent*)new alt::CPlayerDisconnectEvent(*(Ref<alt::IPlayer>*)_target, *(alt::StringView*)_reason);
}

CAPI struct alt_RefBase_RefStore_IPlayer* alt_CPlayerDisconnectEvent_GetTarget(struct alt_CPlayerDisconnectEvent* _instance)
{
    return (alt_RefBase_RefStore_IPlayer*)new class alt::RefBase<class alt::RefStore<class alt::IPlayer> >(((alt::CPlayerDisconnectEvent *)_instance)->GetTarget());
}

CAPI struct alt_StringView* alt_CPlayerDisconnectEvent_GetReason(struct alt_CPlayerDisconnectEvent* _instance)
{
    return (alt_StringView*)new class alt::StringView(((alt::CPlayerDisconnectEvent *)_instance)->GetReason());
}

CAPI struct alt_CPlayerDisconnectEvent* alt_CPlayerDisconnectEvent_Create_4(struct alt_CPlayerDisconnectEvent* _p0)
{
    return (struct alt_CPlayerDisconnectEvent*)new alt::CPlayerDisconnectEvent(*(const alt::CPlayerDisconnectEvent *)_p0);
}

CAPI struct alt_CPlayerDisconnectEvent* alt_CPlayerDisconnectEvent_Create_5(struct alt_CPlayerDisconnectEvent* _p0)
{
    return (struct alt_CPlayerDisconnectEvent*)new alt::CPlayerDisconnectEvent(*(alt::CPlayerDisconnectEvent *)_p0);
}

CAPI void alt_CPlayerDisconnectEvent_Assign_constCPlayerDisconnectEventRef(struct alt_CPlayerDisconnectEvent* _instance, struct alt_CPlayerDisconnectEvent* _p0)
{
    ((alt::CPlayerDisconnectEvent *)_instance)->operator=(*(const alt::CPlayerDisconnectEvent *)_p0);
}

CAPI void alt_CPlayerDisconnectEvent_Assign_CPlayerDisconnectEventRefRef(struct alt_CPlayerDisconnectEvent* _instance, struct alt_CPlayerDisconnectEvent* _p0)
{
    ((alt::CPlayerDisconnectEvent *)_instance)->operator=(*(alt::CPlayerDisconnectEvent *)_p0);
}

CAPI void alt_CPlayerDamageEvent_free(struct alt_CPlayerDamageEvent* ptr)
{
    delete (class alt::CPlayerDamageEvent *)ptr;
}

CAPI struct alt_CPlayerDamageEvent* alt_CEvent_to_alt_CPlayerDamageEvent(struct alt_CEvent* from)
{
    return (alt_CPlayerDamageEvent*)static_cast<alt::CPlayerDamageEvent*>((alt::CEvent*)from);
}

CAPI struct alt_CEvent* alt_CPlayerDamageEvent_to_alt_CEvent(struct alt_CPlayerDamageEvent* from)
{
    return (alt_CEvent*)static_cast<alt::CEvent*>((alt::CPlayerDamageEvent*)from);
}

CAPI struct alt_CPlayerDamageEvent* alt_CPlayerDamageEvent_Create(alt_CEvent_Type _type)
{
    return (struct alt_CPlayerDamageEvent*)new alt::CEvent((alt::CEvent::Type)_type);
}

CAPI alt_CEvent_Type alt_CPlayerDamageEvent_GetType(struct alt_CPlayerDamageEvent* _instance)
{
    return (alt_CEvent_Type)static_cast<alt::CEvent *>((alt::CPlayerDamageEvent *)_instance)->GetType();
}

CAPI _Bool alt_CPlayerDamageEvent_WasCancelled(struct alt_CPlayerDamageEvent* _instance)
{
    return (_Bool)static_cast<alt::CEvent *>((alt::CPlayerDamageEvent *)_instance)->WasCancelled();
}

CAPI void alt_CPlayerDamageEvent_Cancel(struct alt_CPlayerDamageEvent* _instance)
{
    static_cast<alt::CEvent *>((alt::CPlayerDamageEvent *)_instance)->Cancel();
}

CAPI struct alt_CPlayerDamageEvent* alt_CPlayerDamageEvent_Create_1(struct alt_CEvent* _p0)
{
    return (struct alt_CPlayerDamageEvent*)new alt::CEvent(*(const alt::CEvent *)_p0);
}

CAPI void alt_CPlayerDamageEvent_Assign_constCEventRef(struct alt_CPlayerDamageEvent* _instance, struct alt_CEvent* _p0)
{
    static_cast<alt::CEvent *>((alt::CPlayerDamageEvent *)_instance)->operator=(*(const alt::CEvent *)_p0);
}

CAPI struct alt_CPlayerDamageEvent* alt_CPlayerDamageEvent_Create_2(struct alt_CEvent* _p0)
{
    return (struct alt_CPlayerDamageEvent*)new alt::CEvent(*(alt::CEvent *)_p0);
}

CAPI void alt_CPlayerDamageEvent_Assign_CEventRefRef(struct alt_CPlayerDamageEvent* _instance, struct alt_CEvent* _p0)
{
    static_cast<alt::CEvent *>((alt::CPlayerDamageEvent *)_instance)->operator=(*(alt::CEvent *)_p0);
}

CAPI struct alt_CPlayerDamageEvent* alt_CPlayerDamageEvent_Create_3(struct alt_RefBase_RefStore_IPlayer* _target, struct alt_RefBase_RefStore_IEntity* _attacker, unsigned short _damage, unsigned int _weapon)
{
    return (struct alt_CPlayerDamageEvent*)new alt::CPlayerDamageEvent(*(Ref<alt::IPlayer>*)_target, *(Ref<alt::IEntity>*)_attacker, (uint16_t)_damage, (uint32_t)_weapon);
}

CAPI struct alt_RefBase_RefStore_IPlayer* alt_CPlayerDamageEvent_GetTarget(struct alt_CPlayerDamageEvent* _instance)
{
    return (alt_RefBase_RefStore_IPlayer*)new class alt::RefBase<class alt::RefStore<class alt::IPlayer> >(((alt::CPlayerDamageEvent *)_instance)->GetTarget());
}

CAPI struct alt_RefBase_RefStore_IEntity* alt_CPlayerDamageEvent_GetAttacker(struct alt_CPlayerDamageEvent* _instance)
{
    return (alt_RefBase_RefStore_IEntity*)new class alt::RefBase<class alt::RefStore<class alt::IEntity> >(((alt::CPlayerDamageEvent *)_instance)->GetAttacker());
}

CAPI unsigned short alt_CPlayerDamageEvent_GetDamage(struct alt_CPlayerDamageEvent* _instance)
{
    return (unsigned short)((alt::CPlayerDamageEvent *)_instance)->GetDamage();
}

CAPI unsigned int alt_CPlayerDamageEvent_GetWeapon(struct alt_CPlayerDamageEvent* _instance)
{
    return (unsigned int)((alt::CPlayerDamageEvent *)_instance)->GetWeapon();
}

CAPI struct alt_CPlayerDamageEvent* alt_CPlayerDamageEvent_Create_4(struct alt_CPlayerDamageEvent* _p0)
{
    return (struct alt_CPlayerDamageEvent*)new alt::CPlayerDamageEvent(*(const alt::CPlayerDamageEvent *)_p0);
}

CAPI struct alt_CPlayerDamageEvent* alt_CPlayerDamageEvent_Create_5(struct alt_CPlayerDamageEvent* _p0)
{
    return (struct alt_CPlayerDamageEvent*)new alt::CPlayerDamageEvent(*(alt::CPlayerDamageEvent *)_p0);
}

CAPI void alt_CPlayerDamageEvent_Assign_constCPlayerDamageEventRef(struct alt_CPlayerDamageEvent* _instance, struct alt_CPlayerDamageEvent* _p0)
{
    ((alt::CPlayerDamageEvent *)_instance)->operator=(*(const alt::CPlayerDamageEvent *)_p0);
}

CAPI void alt_CPlayerDamageEvent_Assign_CPlayerDamageEventRefRef(struct alt_CPlayerDamageEvent* _instance, struct alt_CPlayerDamageEvent* _p0)
{
    ((alt::CPlayerDamageEvent *)_instance)->operator=(*(alt::CPlayerDamageEvent *)_p0);
}

CAPI void alt_CPlayerDeathEvent_free(struct alt_CPlayerDeathEvent* ptr)
{
    delete (class alt::CPlayerDeathEvent *)ptr;
}

CAPI struct alt_CPlayerDeathEvent* alt_CEvent_to_alt_CPlayerDeathEvent(struct alt_CEvent* from)
{
    return (alt_CPlayerDeathEvent*)static_cast<alt::CPlayerDeathEvent*>((alt::CEvent*)from);
}

CAPI struct alt_CEvent* alt_CPlayerDeathEvent_to_alt_CEvent(struct alt_CPlayerDeathEvent* from)
{
    return (alt_CEvent*)static_cast<alt::CEvent*>((alt::CPlayerDeathEvent*)from);
}

CAPI struct alt_CPlayerDeathEvent* alt_CPlayerDeathEvent_Create(alt_CEvent_Type _type)
{
    return (struct alt_CPlayerDeathEvent*)new alt::CEvent((alt::CEvent::Type)_type);
}

CAPI alt_CEvent_Type alt_CPlayerDeathEvent_GetType(struct alt_CPlayerDeathEvent* _instance)
{
    return (alt_CEvent_Type)static_cast<alt::CEvent *>((alt::CPlayerDeathEvent *)_instance)->GetType();
}

CAPI _Bool alt_CPlayerDeathEvent_WasCancelled(struct alt_CPlayerDeathEvent* _instance)
{
    return (_Bool)static_cast<alt::CEvent *>((alt::CPlayerDeathEvent *)_instance)->WasCancelled();
}

CAPI void alt_CPlayerDeathEvent_Cancel(struct alt_CPlayerDeathEvent* _instance)
{
    static_cast<alt::CEvent *>((alt::CPlayerDeathEvent *)_instance)->Cancel();
}

CAPI struct alt_CPlayerDeathEvent* alt_CPlayerDeathEvent_Create_1(struct alt_CEvent* _p0)
{
    return (struct alt_CPlayerDeathEvent*)new alt::CEvent(*(const alt::CEvent *)_p0);
}

CAPI void alt_CPlayerDeathEvent_Assign_constCEventRef(struct alt_CPlayerDeathEvent* _instance, struct alt_CEvent* _p0)
{
    static_cast<alt::CEvent *>((alt::CPlayerDeathEvent *)_instance)->operator=(*(const alt::CEvent *)_p0);
}

CAPI struct alt_CPlayerDeathEvent* alt_CPlayerDeathEvent_Create_2(struct alt_CEvent* _p0)
{
    return (struct alt_CPlayerDeathEvent*)new alt::CEvent(*(alt::CEvent *)_p0);
}

CAPI void alt_CPlayerDeathEvent_Assign_CEventRefRef(struct alt_CPlayerDeathEvent* _instance, struct alt_CEvent* _p0)
{
    static_cast<alt::CEvent *>((alt::CPlayerDeathEvent *)_instance)->operator=(*(alt::CEvent *)_p0);
}

CAPI struct alt_CPlayerDeathEvent* alt_CPlayerDeathEvent_Create_3(struct alt_RefBase_RefStore_IPlayer* _target, struct alt_RefBase_RefStore_IEntity* _killer, unsigned int _weapon)
{
    return (struct alt_CPlayerDeathEvent*)new alt::CPlayerDeathEvent(*(Ref<alt::IPlayer>*)_target, *(Ref<alt::IEntity>*)_killer, (uint32_t)_weapon);
}

CAPI struct alt_RefBase_RefStore_IPlayer* alt_CPlayerDeathEvent_GetTarget(struct alt_CPlayerDeathEvent* _instance)
{
    return (alt_RefBase_RefStore_IPlayer*)new class alt::RefBase<class alt::RefStore<class alt::IPlayer> >(((alt::CPlayerDeathEvent *)_instance)->GetTarget());
}

CAPI struct alt_RefBase_RefStore_IEntity* alt_CPlayerDeathEvent_GetKiller(struct alt_CPlayerDeathEvent* _instance)
{
    return (alt_RefBase_RefStore_IEntity*)new class alt::RefBase<class alt::RefStore<class alt::IEntity> >(((alt::CPlayerDeathEvent *)_instance)->GetKiller());
}

CAPI unsigned int alt_CPlayerDeathEvent_GetWeapon(struct alt_CPlayerDeathEvent* _instance)
{
    return (unsigned int)((alt::CPlayerDeathEvent *)_instance)->GetWeapon();
}

CAPI struct alt_CPlayerDeathEvent* alt_CPlayerDeathEvent_Create_4(struct alt_CPlayerDeathEvent* _p0)
{
    return (struct alt_CPlayerDeathEvent*)new alt::CPlayerDeathEvent(*(const alt::CPlayerDeathEvent *)_p0);
}

CAPI struct alt_CPlayerDeathEvent* alt_CPlayerDeathEvent_Create_5(struct alt_CPlayerDeathEvent* _p0)
{
    return (struct alt_CPlayerDeathEvent*)new alt::CPlayerDeathEvent(*(alt::CPlayerDeathEvent *)_p0);
}

CAPI void alt_CPlayerDeathEvent_Assign_constCPlayerDeathEventRef(struct alt_CPlayerDeathEvent* _instance, struct alt_CPlayerDeathEvent* _p0)
{
    ((alt::CPlayerDeathEvent *)_instance)->operator=(*(const alt::CPlayerDeathEvent *)_p0);
}

CAPI void alt_CPlayerDeathEvent_Assign_CPlayerDeathEventRefRef(struct alt_CPlayerDeathEvent* _instance, struct alt_CPlayerDeathEvent* _p0)
{
    ((alt::CPlayerDeathEvent *)_instance)->operator=(*(alt::CPlayerDeathEvent *)_p0);
}

CAPI void alt_CColShapeEvent_free(struct alt_CColShapeEvent* ptr)
{
    delete (class alt::CColShapeEvent *)ptr;
}

CAPI struct alt_CColShapeEvent* alt_CEvent_to_alt_CColShapeEvent(struct alt_CEvent* from)
{
    return (alt_CColShapeEvent*)static_cast<alt::CColShapeEvent*>((alt::CEvent*)from);
}

CAPI struct alt_CEvent* alt_CColShapeEvent_to_alt_CEvent(struct alt_CColShapeEvent* from)
{
    return (alt_CEvent*)static_cast<alt::CEvent*>((alt::CColShapeEvent*)from);
}

CAPI struct alt_CColShapeEvent* alt_CColShapeEvent_Create(alt_CEvent_Type _type)
{
    return (struct alt_CColShapeEvent*)new alt::CEvent((alt::CEvent::Type)_type);
}

CAPI alt_CEvent_Type alt_CColShapeEvent_GetType(struct alt_CColShapeEvent* _instance)
{
    return (alt_CEvent_Type)static_cast<alt::CEvent *>((alt::CColShapeEvent *)_instance)->GetType();
}

CAPI _Bool alt_CColShapeEvent_WasCancelled(struct alt_CColShapeEvent* _instance)
{
    return (_Bool)static_cast<alt::CEvent *>((alt::CColShapeEvent *)_instance)->WasCancelled();
}

CAPI void alt_CColShapeEvent_Cancel(struct alt_CColShapeEvent* _instance)
{
    static_cast<alt::CEvent *>((alt::CColShapeEvent *)_instance)->Cancel();
}

CAPI struct alt_CColShapeEvent* alt_CColShapeEvent_Create_1(struct alt_CEvent* _p0)
{
    return (struct alt_CColShapeEvent*)new alt::CEvent(*(const alt::CEvent *)_p0);
}

CAPI void alt_CColShapeEvent_Assign_constCEventRef(struct alt_CColShapeEvent* _instance, struct alt_CEvent* _p0)
{
    static_cast<alt::CEvent *>((alt::CColShapeEvent *)_instance)->operator=(*(const alt::CEvent *)_p0);
}

CAPI struct alt_CColShapeEvent* alt_CColShapeEvent_Create_2(struct alt_CEvent* _p0)
{
    return (struct alt_CColShapeEvent*)new alt::CEvent(*(alt::CEvent *)_p0);
}

CAPI void alt_CColShapeEvent_Assign_CEventRefRef(struct alt_CColShapeEvent* _instance, struct alt_CEvent* _p0)
{
    static_cast<alt::CEvent *>((alt::CColShapeEvent *)_instance)->operator=(*(alt::CEvent *)_p0);
}

CAPI struct alt_CColShapeEvent* alt_CColShapeEvent_Create_3(struct alt_RefBase_RefStore_IColShape* _target, struct alt_RefBase_RefStore_IEntity* _entity, _Bool _state)
{
    return (struct alt_CColShapeEvent*)new alt::CColShapeEvent(*(Ref<alt::IColShape>*)_target, *(Ref<alt::IEntity>*)_entity, (_Bool)_state);
}

CAPI struct alt_RefBase_RefStore_IColShape* alt_CColShapeEvent_GetTarget(struct alt_CColShapeEvent* _instance)
{
    return (alt_RefBase_RefStore_IColShape*)new class alt::RefBase<class alt::RefStore<class alt::IColShape> >(((alt::CColShapeEvent *)_instance)->GetTarget());
}

CAPI struct alt_RefBase_RefStore_IEntity* alt_CColShapeEvent_GetEntity(struct alt_CColShapeEvent* _instance)
{
    return (alt_RefBase_RefStore_IEntity*)new class alt::RefBase<class alt::RefStore<class alt::IEntity> >(((alt::CColShapeEvent *)_instance)->GetEntity());
}

CAPI _Bool alt_CColShapeEvent_GetState(struct alt_CColShapeEvent* _instance)
{
    return (_Bool)((alt::CColShapeEvent *)_instance)->GetState();
}

CAPI struct alt_CColShapeEvent* alt_CColShapeEvent_Create_4(struct alt_CColShapeEvent* _p0)
{
    return (struct alt_CColShapeEvent*)new alt::CColShapeEvent(*(const alt::CColShapeEvent *)_p0);
}

CAPI struct alt_CColShapeEvent* alt_CColShapeEvent_Create_5(struct alt_CColShapeEvent* _p0)
{
    return (struct alt_CColShapeEvent*)new alt::CColShapeEvent(*(alt::CColShapeEvent *)_p0);
}

CAPI void alt_CColShapeEvent_Assign_constCColShapeEventRef(struct alt_CColShapeEvent* _instance, struct alt_CColShapeEvent* _p0)
{
    ((alt::CColShapeEvent *)_instance)->operator=(*(const alt::CColShapeEvent *)_p0);
}

CAPI void alt_CColShapeEvent_Assign_CColShapeEventRefRef(struct alt_CColShapeEvent* _instance, struct alt_CColShapeEvent* _p0)
{
    ((alt::CColShapeEvent *)_instance)->operator=(*(alt::CColShapeEvent *)_p0);
}

CAPI void alt_CPlayerEnterVehicleEvent_free(struct alt_CPlayerEnterVehicleEvent* ptr)
{
    delete (class alt::CPlayerEnterVehicleEvent *)ptr;
}

CAPI struct alt_CPlayerEnterVehicleEvent* alt_CEvent_to_alt_CPlayerEnterVehicleEvent(struct alt_CEvent* from)
{
    return (alt_CPlayerEnterVehicleEvent*)static_cast<alt::CPlayerEnterVehicleEvent*>((alt::CEvent*)from);
}

CAPI struct alt_CEvent* alt_CPlayerEnterVehicleEvent_to_alt_CEvent(struct alt_CPlayerEnterVehicleEvent* from)
{
    return (alt_CEvent*)static_cast<alt::CEvent*>((alt::CPlayerEnterVehicleEvent*)from);
}

CAPI struct alt_CPlayerEnterVehicleEvent* alt_CPlayerEnterVehicleEvent_Create(alt_CEvent_Type _type)
{
    return (struct alt_CPlayerEnterVehicleEvent*)new alt::CEvent((alt::CEvent::Type)_type);
}

CAPI alt_CEvent_Type alt_CPlayerEnterVehicleEvent_GetType(struct alt_CPlayerEnterVehicleEvent* _instance)
{
    return (alt_CEvent_Type)static_cast<alt::CEvent *>((alt::CPlayerEnterVehicleEvent *)_instance)->GetType();
}

CAPI _Bool alt_CPlayerEnterVehicleEvent_WasCancelled(struct alt_CPlayerEnterVehicleEvent* _instance)
{
    return (_Bool)static_cast<alt::CEvent *>((alt::CPlayerEnterVehicleEvent *)_instance)->WasCancelled();
}

CAPI void alt_CPlayerEnterVehicleEvent_Cancel(struct alt_CPlayerEnterVehicleEvent* _instance)
{
    static_cast<alt::CEvent *>((alt::CPlayerEnterVehicleEvent *)_instance)->Cancel();
}

CAPI struct alt_CPlayerEnterVehicleEvent* alt_CPlayerEnterVehicleEvent_Create_1(struct alt_CEvent* _p0)
{
    return (struct alt_CPlayerEnterVehicleEvent*)new alt::CEvent(*(const alt::CEvent *)_p0);
}

CAPI void alt_CPlayerEnterVehicleEvent_Assign_constCEventRef(struct alt_CPlayerEnterVehicleEvent* _instance, struct alt_CEvent* _p0)
{
    static_cast<alt::CEvent *>((alt::CPlayerEnterVehicleEvent *)_instance)->operator=(*(const alt::CEvent *)_p0);
}

CAPI struct alt_CPlayerEnterVehicleEvent* alt_CPlayerEnterVehicleEvent_Create_2(struct alt_CEvent* _p0)
{
    return (struct alt_CPlayerEnterVehicleEvent*)new alt::CEvent(*(alt::CEvent *)_p0);
}

CAPI void alt_CPlayerEnterVehicleEvent_Assign_CEventRefRef(struct alt_CPlayerEnterVehicleEvent* _instance, struct alt_CEvent* _p0)
{
    static_cast<alt::CEvent *>((alt::CPlayerEnterVehicleEvent *)_instance)->operator=(*(alt::CEvent *)_p0);
}

CAPI struct alt_CPlayerEnterVehicleEvent* alt_CPlayerEnterVehicleEvent_Create_3(struct alt_RefBase_RefStore_IVehicle* _target, struct alt_RefBase_RefStore_IPlayer* _player, unsigned char _seat)
{
    return (struct alt_CPlayerEnterVehicleEvent*)new alt::CPlayerEnterVehicleEvent(*(Ref<alt::IVehicle>*)_target, *(Ref<alt::IPlayer>*)_player, (uint8_t)_seat);
}

CAPI struct alt_RefBase_RefStore_IVehicle* alt_CPlayerEnterVehicleEvent_GetTarget(struct alt_CPlayerEnterVehicleEvent* _instance)
{
    return (alt_RefBase_RefStore_IVehicle*)new class alt::RefBase<class alt::RefStore<class alt::IVehicle> >(((alt::CPlayerEnterVehicleEvent *)_instance)->GetTarget());
}

CAPI struct alt_RefBase_RefStore_IPlayer* alt_CPlayerEnterVehicleEvent_GetPlayer(struct alt_CPlayerEnterVehicleEvent* _instance)
{
    return (alt_RefBase_RefStore_IPlayer*)new class alt::RefBase<class alt::RefStore<class alt::IPlayer> >(((alt::CPlayerEnterVehicleEvent *)_instance)->GetPlayer());
}

CAPI unsigned char alt_CPlayerEnterVehicleEvent_GetSeat(struct alt_CPlayerEnterVehicleEvent* _instance)
{
    return (unsigned char)((alt::CPlayerEnterVehicleEvent *)_instance)->GetSeat();
}

CAPI struct alt_CPlayerEnterVehicleEvent* alt_CPlayerEnterVehicleEvent_Create_4(struct alt_CPlayerEnterVehicleEvent* _p0)
{
    return (struct alt_CPlayerEnterVehicleEvent*)new alt::CPlayerEnterVehicleEvent(*(const alt::CPlayerEnterVehicleEvent *)_p0);
}

CAPI struct alt_CPlayerEnterVehicleEvent* alt_CPlayerEnterVehicleEvent_Create_5(struct alt_CPlayerEnterVehicleEvent* _p0)
{
    return (struct alt_CPlayerEnterVehicleEvent*)new alt::CPlayerEnterVehicleEvent(*(alt::CPlayerEnterVehicleEvent *)_p0);
}

CAPI void alt_CPlayerEnterVehicleEvent_Assign_constCPlayerEnterVehicleEventRef(struct alt_CPlayerEnterVehicleEvent* _instance, struct alt_CPlayerEnterVehicleEvent* _p0)
{
    ((alt::CPlayerEnterVehicleEvent *)_instance)->operator=(*(const alt::CPlayerEnterVehicleEvent *)_p0);
}

CAPI void alt_CPlayerEnterVehicleEvent_Assign_CPlayerEnterVehicleEventRefRef(struct alt_CPlayerEnterVehicleEvent* _instance, struct alt_CPlayerEnterVehicleEvent* _p0)
{
    ((alt::CPlayerEnterVehicleEvent *)_instance)->operator=(*(alt::CPlayerEnterVehicleEvent *)_p0);
}

CAPI void alt_CPlayerLeaveVehicleEvent_free(struct alt_CPlayerLeaveVehicleEvent* ptr)
{
    delete (class alt::CPlayerLeaveVehicleEvent *)ptr;
}

CAPI struct alt_CPlayerLeaveVehicleEvent* alt_CEvent_to_alt_CPlayerLeaveVehicleEvent(struct alt_CEvent* from)
{
    return (alt_CPlayerLeaveVehicleEvent*)static_cast<alt::CPlayerLeaveVehicleEvent*>((alt::CEvent*)from);
}

CAPI struct alt_CEvent* alt_CPlayerLeaveVehicleEvent_to_alt_CEvent(struct alt_CPlayerLeaveVehicleEvent* from)
{
    return (alt_CEvent*)static_cast<alt::CEvent*>((alt::CPlayerLeaveVehicleEvent*)from);
}

CAPI struct alt_CPlayerLeaveVehicleEvent* alt_CPlayerLeaveVehicleEvent_Create(alt_CEvent_Type _type)
{
    return (struct alt_CPlayerLeaveVehicleEvent*)new alt::CEvent((alt::CEvent::Type)_type);
}

CAPI alt_CEvent_Type alt_CPlayerLeaveVehicleEvent_GetType(struct alt_CPlayerLeaveVehicleEvent* _instance)
{
    return (alt_CEvent_Type)static_cast<alt::CEvent *>((alt::CPlayerLeaveVehicleEvent *)_instance)->GetType();
}

CAPI _Bool alt_CPlayerLeaveVehicleEvent_WasCancelled(struct alt_CPlayerLeaveVehicleEvent* _instance)
{
    return (_Bool)static_cast<alt::CEvent *>((alt::CPlayerLeaveVehicleEvent *)_instance)->WasCancelled();
}

CAPI void alt_CPlayerLeaveVehicleEvent_Cancel(struct alt_CPlayerLeaveVehicleEvent* _instance)
{
    static_cast<alt::CEvent *>((alt::CPlayerLeaveVehicleEvent *)_instance)->Cancel();
}

CAPI struct alt_CPlayerLeaveVehicleEvent* alt_CPlayerLeaveVehicleEvent_Create_1(struct alt_CEvent* _p0)
{
    return (struct alt_CPlayerLeaveVehicleEvent*)new alt::CEvent(*(const alt::CEvent *)_p0);
}

CAPI void alt_CPlayerLeaveVehicleEvent_Assign_constCEventRef(struct alt_CPlayerLeaveVehicleEvent* _instance, struct alt_CEvent* _p0)
{
    static_cast<alt::CEvent *>((alt::CPlayerLeaveVehicleEvent *)_instance)->operator=(*(const alt::CEvent *)_p0);
}

CAPI struct alt_CPlayerLeaveVehicleEvent* alt_CPlayerLeaveVehicleEvent_Create_2(struct alt_CEvent* _p0)
{
    return (struct alt_CPlayerLeaveVehicleEvent*)new alt::CEvent(*(alt::CEvent *)_p0);
}

CAPI void alt_CPlayerLeaveVehicleEvent_Assign_CEventRefRef(struct alt_CPlayerLeaveVehicleEvent* _instance, struct alt_CEvent* _p0)
{
    static_cast<alt::CEvent *>((alt::CPlayerLeaveVehicleEvent *)_instance)->operator=(*(alt::CEvent *)_p0);
}

CAPI struct alt_CPlayerLeaveVehicleEvent* alt_CPlayerLeaveVehicleEvent_Create_3(struct alt_RefBase_RefStore_IVehicle* _target, struct alt_RefBase_RefStore_IPlayer* _player, unsigned char _seat)
{
    return (struct alt_CPlayerLeaveVehicleEvent*)new alt::CPlayerLeaveVehicleEvent(*(Ref<alt::IVehicle>*)_target, *(Ref<alt::IPlayer>*)_player, (uint8_t)_seat);
}

CAPI struct alt_RefBase_RefStore_IVehicle* alt_CPlayerLeaveVehicleEvent_GetTarget(struct alt_CPlayerLeaveVehicleEvent* _instance)
{
    return (alt_RefBase_RefStore_IVehicle*)new class alt::RefBase<class alt::RefStore<class alt::IVehicle> >(((alt::CPlayerLeaveVehicleEvent *)_instance)->GetTarget());
}

CAPI struct alt_RefBase_RefStore_IPlayer* alt_CPlayerLeaveVehicleEvent_GetPlayer(struct alt_CPlayerLeaveVehicleEvent* _instance)
{
    return (alt_RefBase_RefStore_IPlayer*)new class alt::RefBase<class alt::RefStore<class alt::IPlayer> >(((alt::CPlayerLeaveVehicleEvent *)_instance)->GetPlayer());
}

CAPI unsigned char alt_CPlayerLeaveVehicleEvent_GetSeat(struct alt_CPlayerLeaveVehicleEvent* _instance)
{
    return (unsigned char)((alt::CPlayerLeaveVehicleEvent *)_instance)->GetSeat();
}

CAPI struct alt_CPlayerLeaveVehicleEvent* alt_CPlayerLeaveVehicleEvent_Create_4(struct alt_CPlayerLeaveVehicleEvent* _p0)
{
    return (struct alt_CPlayerLeaveVehicleEvent*)new alt::CPlayerLeaveVehicleEvent(*(const alt::CPlayerLeaveVehicleEvent *)_p0);
}

CAPI struct alt_CPlayerLeaveVehicleEvent* alt_CPlayerLeaveVehicleEvent_Create_5(struct alt_CPlayerLeaveVehicleEvent* _p0)
{
    return (struct alt_CPlayerLeaveVehicleEvent*)new alt::CPlayerLeaveVehicleEvent(*(alt::CPlayerLeaveVehicleEvent *)_p0);
}

CAPI void alt_CPlayerLeaveVehicleEvent_Assign_constCPlayerLeaveVehicleEventRef(struct alt_CPlayerLeaveVehicleEvent* _instance, struct alt_CPlayerLeaveVehicleEvent* _p0)
{
    ((alt::CPlayerLeaveVehicleEvent *)_instance)->operator=(*(const alt::CPlayerLeaveVehicleEvent *)_p0);
}

CAPI void alt_CPlayerLeaveVehicleEvent_Assign_CPlayerLeaveVehicleEventRefRef(struct alt_CPlayerLeaveVehicleEvent* _instance, struct alt_CPlayerLeaveVehicleEvent* _p0)
{
    ((alt::CPlayerLeaveVehicleEvent *)_instance)->operator=(*(alt::CPlayerLeaveVehicleEvent *)_p0);
}

CAPI void alt_CPlayerChangeVehicleSeatEvent_free(struct alt_CPlayerChangeVehicleSeatEvent* ptr)
{
    delete (class alt::CPlayerChangeVehicleSeatEvent *)ptr;
}

CAPI struct alt_CPlayerChangeVehicleSeatEvent* alt_CEvent_to_alt_CPlayerChangeVehicleSeatEvent(struct alt_CEvent* from)
{
    return (alt_CPlayerChangeVehicleSeatEvent*)static_cast<alt::CPlayerChangeVehicleSeatEvent*>((alt::CEvent*)from);
}

CAPI struct alt_CEvent* alt_CPlayerChangeVehicleSeatEvent_to_alt_CEvent(struct alt_CPlayerChangeVehicleSeatEvent* from)
{
    return (alt_CEvent*)static_cast<alt::CEvent*>((alt::CPlayerChangeVehicleSeatEvent*)from);
}

CAPI struct alt_CPlayerChangeVehicleSeatEvent* alt_CPlayerChangeVehicleSeatEvent_Create(alt_CEvent_Type _type)
{
    return (struct alt_CPlayerChangeVehicleSeatEvent*)new alt::CEvent((alt::CEvent::Type)_type);
}

CAPI alt_CEvent_Type alt_CPlayerChangeVehicleSeatEvent_GetType(struct alt_CPlayerChangeVehicleSeatEvent* _instance)
{
    return (alt_CEvent_Type)static_cast<alt::CEvent *>((alt::CPlayerChangeVehicleSeatEvent *)_instance)->GetType();
}

CAPI _Bool alt_CPlayerChangeVehicleSeatEvent_WasCancelled(struct alt_CPlayerChangeVehicleSeatEvent* _instance)
{
    return (_Bool)static_cast<alt::CEvent *>((alt::CPlayerChangeVehicleSeatEvent *)_instance)->WasCancelled();
}

CAPI void alt_CPlayerChangeVehicleSeatEvent_Cancel(struct alt_CPlayerChangeVehicleSeatEvent* _instance)
{
    static_cast<alt::CEvent *>((alt::CPlayerChangeVehicleSeatEvent *)_instance)->Cancel();
}

CAPI struct alt_CPlayerChangeVehicleSeatEvent* alt_CPlayerChangeVehicleSeatEvent_Create_1(struct alt_CEvent* _p0)
{
    return (struct alt_CPlayerChangeVehicleSeatEvent*)new alt::CEvent(*(const alt::CEvent *)_p0);
}

CAPI void alt_CPlayerChangeVehicleSeatEvent_Assign_constCEventRef(struct alt_CPlayerChangeVehicleSeatEvent* _instance, struct alt_CEvent* _p0)
{
    static_cast<alt::CEvent *>((alt::CPlayerChangeVehicleSeatEvent *)_instance)->operator=(*(const alt::CEvent *)_p0);
}

CAPI struct alt_CPlayerChangeVehicleSeatEvent* alt_CPlayerChangeVehicleSeatEvent_Create_2(struct alt_CEvent* _p0)
{
    return (struct alt_CPlayerChangeVehicleSeatEvent*)new alt::CEvent(*(alt::CEvent *)_p0);
}

CAPI void alt_CPlayerChangeVehicleSeatEvent_Assign_CEventRefRef(struct alt_CPlayerChangeVehicleSeatEvent* _instance, struct alt_CEvent* _p0)
{
    static_cast<alt::CEvent *>((alt::CPlayerChangeVehicleSeatEvent *)_instance)->operator=(*(alt::CEvent *)_p0);
}

CAPI struct alt_CPlayerChangeVehicleSeatEvent* alt_CPlayerChangeVehicleSeatEvent_Create_3(struct alt_RefBase_RefStore_IVehicle* _target, struct alt_RefBase_RefStore_IPlayer* _player, unsigned char _oldSeat, unsigned char _newSeat)
{
    return (struct alt_CPlayerChangeVehicleSeatEvent*)new alt::CPlayerChangeVehicleSeatEvent(*(Ref<alt::IVehicle>*)_target, *(Ref<alt::IPlayer>*)_player, (uint8_t)_oldSeat, (uint8_t)_newSeat);
}

CAPI struct alt_RefBase_RefStore_IVehicle* alt_CPlayerChangeVehicleSeatEvent_GetTarget(struct alt_CPlayerChangeVehicleSeatEvent* _instance)
{
    return (alt_RefBase_RefStore_IVehicle*)new class alt::RefBase<class alt::RefStore<class alt::IVehicle> >(((alt::CPlayerChangeVehicleSeatEvent *)_instance)->GetTarget());
}

CAPI struct alt_RefBase_RefStore_IPlayer* alt_CPlayerChangeVehicleSeatEvent_GetPlayer(struct alt_CPlayerChangeVehicleSeatEvent* _instance)
{
    return (alt_RefBase_RefStore_IPlayer*)new class alt::RefBase<class alt::RefStore<class alt::IPlayer> >(((alt::CPlayerChangeVehicleSeatEvent *)_instance)->GetPlayer());
}

CAPI unsigned char alt_CPlayerChangeVehicleSeatEvent_GetOldSeat(struct alt_CPlayerChangeVehicleSeatEvent* _instance)
{
    return (unsigned char)((alt::CPlayerChangeVehicleSeatEvent *)_instance)->GetOldSeat();
}

CAPI unsigned char alt_CPlayerChangeVehicleSeatEvent_GetNewSeat(struct alt_CPlayerChangeVehicleSeatEvent* _instance)
{
    return (unsigned char)((alt::CPlayerChangeVehicleSeatEvent *)_instance)->GetNewSeat();
}

CAPI struct alt_CPlayerChangeVehicleSeatEvent* alt_CPlayerChangeVehicleSeatEvent_Create_4(struct alt_CPlayerChangeVehicleSeatEvent* _p0)
{
    return (struct alt_CPlayerChangeVehicleSeatEvent*)new alt::CPlayerChangeVehicleSeatEvent(*(const alt::CPlayerChangeVehicleSeatEvent *)_p0);
}

CAPI struct alt_CPlayerChangeVehicleSeatEvent* alt_CPlayerChangeVehicleSeatEvent_Create_5(struct alt_CPlayerChangeVehicleSeatEvent* _p0)
{
    return (struct alt_CPlayerChangeVehicleSeatEvent*)new alt::CPlayerChangeVehicleSeatEvent(*(alt::CPlayerChangeVehicleSeatEvent *)_p0);
}

CAPI void alt_CPlayerChangeVehicleSeatEvent_Assign_constCPlayerChangeVehicleSeatEventRef(struct alt_CPlayerChangeVehicleSeatEvent* _instance, struct alt_CPlayerChangeVehicleSeatEvent* _p0)
{
    ((alt::CPlayerChangeVehicleSeatEvent *)_instance)->operator=(*(const alt::CPlayerChangeVehicleSeatEvent *)_p0);
}

CAPI void alt_CPlayerChangeVehicleSeatEvent_Assign_CPlayerChangeVehicleSeatEventRefRef(struct alt_CPlayerChangeVehicleSeatEvent* _instance, struct alt_CPlayerChangeVehicleSeatEvent* _p0)
{
    ((alt::CPlayerChangeVehicleSeatEvent *)_instance)->operator=(*(alt::CPlayerChangeVehicleSeatEvent *)_p0);
}

CAPI void alt_CDataNodeReceivedEvent_free(struct alt_CDataNodeReceivedEvent* ptr)
{
    delete (class alt::CDataNodeReceivedEvent *)ptr;
}

CAPI struct alt_CDataNodeReceivedEvent* alt_CEvent_to_alt_CDataNodeReceivedEvent(struct alt_CEvent* from)
{
    return (alt_CDataNodeReceivedEvent*)static_cast<alt::CDataNodeReceivedEvent*>((alt::CEvent*)from);
}

CAPI struct alt_CEvent* alt_CDataNodeReceivedEvent_to_alt_CEvent(struct alt_CDataNodeReceivedEvent* from)
{
    return (alt_CEvent*)static_cast<alt::CEvent*>((alt::CDataNodeReceivedEvent*)from);
}

CAPI struct alt_CDataNodeReceivedEvent* alt_CDataNodeReceivedEvent_Create(alt_CEvent_Type _type)
{
    return (struct alt_CDataNodeReceivedEvent*)new alt::CEvent((alt::CEvent::Type)_type);
}

CAPI alt_CEvent_Type alt_CDataNodeReceivedEvent_GetType(struct alt_CDataNodeReceivedEvent* _instance)
{
    return (alt_CEvent_Type)static_cast<alt::CEvent *>((alt::CDataNodeReceivedEvent *)_instance)->GetType();
}

CAPI _Bool alt_CDataNodeReceivedEvent_WasCancelled(struct alt_CDataNodeReceivedEvent* _instance)
{
    return (_Bool)static_cast<alt::CEvent *>((alt::CDataNodeReceivedEvent *)_instance)->WasCancelled();
}

CAPI void alt_CDataNodeReceivedEvent_Cancel(struct alt_CDataNodeReceivedEvent* _instance)
{
    static_cast<alt::CEvent *>((alt::CDataNodeReceivedEvent *)_instance)->Cancel();
}

CAPI struct alt_CDataNodeReceivedEvent* alt_CDataNodeReceivedEvent_Create_1(struct alt_CEvent* _p0)
{
    return (struct alt_CDataNodeReceivedEvent*)new alt::CEvent(*(const alt::CEvent *)_p0);
}

CAPI void alt_CDataNodeReceivedEvent_Assign_constCEventRef(struct alt_CDataNodeReceivedEvent* _instance, struct alt_CEvent* _p0)
{
    static_cast<alt::CEvent *>((alt::CDataNodeReceivedEvent *)_instance)->operator=(*(const alt::CEvent *)_p0);
}

CAPI struct alt_CDataNodeReceivedEvent* alt_CDataNodeReceivedEvent_Create_2(struct alt_CEvent* _p0)
{
    return (struct alt_CDataNodeReceivedEvent*)new alt::CEvent(*(alt::CEvent *)_p0);
}

CAPI void alt_CDataNodeReceivedEvent_Assign_CEventRefRef(struct alt_CDataNodeReceivedEvent* _instance, struct alt_CEvent* _p0)
{
    static_cast<alt::CEvent *>((alt::CDataNodeReceivedEvent *)_instance)->operator=(*(alt::CEvent *)_p0);
}

CAPI struct alt_CDataNodeReceivedEvent* alt_CDataNodeReceivedEvent_Create_3(struct alt_StringView* _name, struct alt_StringView* _logJson)
{
    return (struct alt_CDataNodeReceivedEvent*)new alt::CDataNodeReceivedEvent(*(alt::StringView*)_name, *(alt::StringView*)_logJson);
}

CAPI struct alt_StringView* alt_CDataNodeReceivedEvent_GetName(struct alt_CDataNodeReceivedEvent* _instance)
{
    return (alt_StringView*)new class alt::StringView(((alt::CDataNodeReceivedEvent *)_instance)->GetName());
}

CAPI struct alt_StringView* alt_CDataNodeReceivedEvent_GetJson(struct alt_CDataNodeReceivedEvent* _instance)
{
    return (alt_StringView*)new class alt::StringView(((alt::CDataNodeReceivedEvent *)_instance)->GetJson());
}

CAPI struct alt_CDataNodeReceivedEvent* alt_CDataNodeReceivedEvent_Create_4(struct alt_CDataNodeReceivedEvent* _p0)
{
    return (struct alt_CDataNodeReceivedEvent*)new alt::CDataNodeReceivedEvent(*(const alt::CDataNodeReceivedEvent *)_p0);
}

CAPI struct alt_CDataNodeReceivedEvent* alt_CDataNodeReceivedEvent_Create_5(struct alt_CDataNodeReceivedEvent* _p0)
{
    return (struct alt_CDataNodeReceivedEvent*)new alt::CDataNodeReceivedEvent(*(alt::CDataNodeReceivedEvent *)_p0);
}

CAPI void alt_CDataNodeReceivedEvent_Assign_constCDataNodeReceivedEventRef(struct alt_CDataNodeReceivedEvent* _instance, struct alt_CDataNodeReceivedEvent* _p0)
{
    ((alt::CDataNodeReceivedEvent *)_instance)->operator=(*(const alt::CDataNodeReceivedEvent *)_p0);
}

CAPI void alt_CDataNodeReceivedEvent_Assign_CDataNodeReceivedEventRefRef(struct alt_CDataNodeReceivedEvent* _instance, struct alt_CDataNodeReceivedEvent* _p0)
{
    ((alt::CDataNodeReceivedEvent *)_instance)->operator=(*(alt::CDataNodeReceivedEvent *)_p0);
}

CAPI void alt_CRemoveEntityEvent_free(struct alt_CRemoveEntityEvent* ptr)
{
    delete (class alt::CRemoveEntityEvent *)ptr;
}

CAPI struct alt_CRemoveEntityEvent* alt_CEvent_to_alt_CRemoveEntityEvent(struct alt_CEvent* from)
{
    return (alt_CRemoveEntityEvent*)static_cast<alt::CRemoveEntityEvent*>((alt::CEvent*)from);
}

CAPI struct alt_CEvent* alt_CRemoveEntityEvent_to_alt_CEvent(struct alt_CRemoveEntityEvent* from)
{
    return (alt_CEvent*)static_cast<alt::CEvent*>((alt::CRemoveEntityEvent*)from);
}

CAPI struct alt_CRemoveEntityEvent* alt_CRemoveEntityEvent_Create(alt_CEvent_Type _type)
{
    return (struct alt_CRemoveEntityEvent*)new alt::CEvent((alt::CEvent::Type)_type);
}

CAPI alt_CEvent_Type alt_CRemoveEntityEvent_GetType(struct alt_CRemoveEntityEvent* _instance)
{
    return (alt_CEvent_Type)static_cast<alt::CEvent *>((alt::CRemoveEntityEvent *)_instance)->GetType();
}

CAPI _Bool alt_CRemoveEntityEvent_WasCancelled(struct alt_CRemoveEntityEvent* _instance)
{
    return (_Bool)static_cast<alt::CEvent *>((alt::CRemoveEntityEvent *)_instance)->WasCancelled();
}

CAPI void alt_CRemoveEntityEvent_Cancel(struct alt_CRemoveEntityEvent* _instance)
{
    static_cast<alt::CEvent *>((alt::CRemoveEntityEvent *)_instance)->Cancel();
}

CAPI struct alt_CRemoveEntityEvent* alt_CRemoveEntityEvent_Create_1(struct alt_CEvent* _p0)
{
    return (struct alt_CRemoveEntityEvent*)new alt::CEvent(*(const alt::CEvent *)_p0);
}

CAPI void alt_CRemoveEntityEvent_Assign_constCEventRef(struct alt_CRemoveEntityEvent* _instance, struct alt_CEvent* _p0)
{
    static_cast<alt::CEvent *>((alt::CRemoveEntityEvent *)_instance)->operator=(*(const alt::CEvent *)_p0);
}

CAPI struct alt_CRemoveEntityEvent* alt_CRemoveEntityEvent_Create_2(struct alt_CEvent* _p0)
{
    return (struct alt_CRemoveEntityEvent*)new alt::CEvent(*(alt::CEvent *)_p0);
}

CAPI void alt_CRemoveEntityEvent_Assign_CEventRefRef(struct alt_CRemoveEntityEvent* _instance, struct alt_CEvent* _p0)
{
    static_cast<alt::CEvent *>((alt::CRemoveEntityEvent *)_instance)->operator=(*(alt::CEvent *)_p0);
}

CAPI struct alt_CRemoveEntityEvent* alt_CRemoveEntityEvent_Create_3(struct alt_RefBase_RefStore_IEntity* _target)
{
    return (struct alt_CRemoveEntityEvent*)new alt::CRemoveEntityEvent(*(Ref<alt::IEntity>*)_target);
}

CAPI struct alt_RefBase_RefStore_IEntity* alt_CRemoveEntityEvent_GetEntity(struct alt_CRemoveEntityEvent* _instance)
{
    return (alt_RefBase_RefStore_IEntity*)new class alt::RefBase<class alt::RefStore<class alt::IEntity> >(((alt::CRemoveEntityEvent *)_instance)->GetEntity());
}

CAPI struct alt_CRemoveEntityEvent* alt_CRemoveEntityEvent_Create_4(struct alt_CRemoveEntityEvent* _p0)
{
    return (struct alt_CRemoveEntityEvent*)new alt::CRemoveEntityEvent(*(const alt::CRemoveEntityEvent *)_p0);
}

CAPI struct alt_CRemoveEntityEvent* alt_CRemoveEntityEvent_Create_5(struct alt_CRemoveEntityEvent* _p0)
{
    return (struct alt_CRemoveEntityEvent*)new alt::CRemoveEntityEvent(*(alt::CRemoveEntityEvent *)_p0);
}

CAPI void alt_CRemoveEntityEvent_Assign_constCRemoveEntityEventRef(struct alt_CRemoveEntityEvent* _instance, struct alt_CRemoveEntityEvent* _p0)
{
    ((alt::CRemoveEntityEvent *)_instance)->operator=(*(const alt::CRemoveEntityEvent *)_p0);
}

CAPI void alt_CRemoveEntityEvent_Assign_CRemoveEntityEventRefRef(struct alt_CRemoveEntityEvent* _instance, struct alt_CRemoveEntityEvent* _p0)
{
    ((alt::CRemoveEntityEvent *)_instance)->operator=(*(alt::CRemoveEntityEvent *)_p0);
}

CAPI void alt_CConsoleCommandEvent_free(struct alt_CConsoleCommandEvent* ptr)
{
    delete (class alt::CConsoleCommandEvent *)ptr;
}

CAPI struct alt_CConsoleCommandEvent* alt_CEvent_to_alt_CConsoleCommandEvent(struct alt_CEvent* from)
{
    return (alt_CConsoleCommandEvent*)static_cast<alt::CConsoleCommandEvent*>((alt::CEvent*)from);
}

CAPI struct alt_CEvent* alt_CConsoleCommandEvent_to_alt_CEvent(struct alt_CConsoleCommandEvent* from)
{
    return (alt_CEvent*)static_cast<alt::CEvent*>((alt::CConsoleCommandEvent*)from);
}

CAPI struct alt_CConsoleCommandEvent* alt_CConsoleCommandEvent_Create(alt_CEvent_Type _type)
{
    return (struct alt_CConsoleCommandEvent*)new alt::CEvent((alt::CEvent::Type)_type);
}

CAPI alt_CEvent_Type alt_CConsoleCommandEvent_GetType(struct alt_CConsoleCommandEvent* _instance)
{
    return (alt_CEvent_Type)static_cast<alt::CEvent *>((alt::CConsoleCommandEvent *)_instance)->GetType();
}

CAPI _Bool alt_CConsoleCommandEvent_WasCancelled(struct alt_CConsoleCommandEvent* _instance)
{
    return (_Bool)static_cast<alt::CEvent *>((alt::CConsoleCommandEvent *)_instance)->WasCancelled();
}

CAPI void alt_CConsoleCommandEvent_Cancel(struct alt_CConsoleCommandEvent* _instance)
{
    static_cast<alt::CEvent *>((alt::CConsoleCommandEvent *)_instance)->Cancel();
}

CAPI struct alt_CConsoleCommandEvent* alt_CConsoleCommandEvent_Create_1(struct alt_CEvent* _p0)
{
    return (struct alt_CConsoleCommandEvent*)new alt::CEvent(*(const alt::CEvent *)_p0);
}

CAPI void alt_CConsoleCommandEvent_Assign_constCEventRef(struct alt_CConsoleCommandEvent* _instance, struct alt_CEvent* _p0)
{
    static_cast<alt::CEvent *>((alt::CConsoleCommandEvent *)_instance)->operator=(*(const alt::CEvent *)_p0);
}

CAPI struct alt_CConsoleCommandEvent* alt_CConsoleCommandEvent_Create_2(struct alt_CEvent* _p0)
{
    return (struct alt_CConsoleCommandEvent*)new alt::CEvent(*(alt::CEvent *)_p0);
}

CAPI void alt_CConsoleCommandEvent_Assign_CEventRefRef(struct alt_CConsoleCommandEvent* _instance, struct alt_CEvent* _p0)
{
    static_cast<alt::CEvent *>((alt::CConsoleCommandEvent *)_instance)->operator=(*(alt::CEvent *)_p0);
}

CAPI struct alt_CConsoleCommandEvent* alt_CConsoleCommandEvent_Create_3(struct alt_StringView* _name, struct alt_Array_StringView* _args)
{
    return (struct alt_CConsoleCommandEvent*)new alt::CConsoleCommandEvent(*(alt::StringView*)_name, *(Array<alt::StringView>*)_args);
}

CAPI struct alt_StringView* alt_CConsoleCommandEvent_GetName(struct alt_CConsoleCommandEvent* _instance)
{
    return (alt_StringView*)new class alt::StringView(((alt::CConsoleCommandEvent *)_instance)->GetName());
}

CAPI struct alt_Array_StringView* alt_CConsoleCommandEvent_GetArgs(struct alt_CConsoleCommandEvent* _instance)
{
    return (alt_Array_StringView*)&((alt::CConsoleCommandEvent *)_instance)->GetArgs();
}

CAPI struct alt_CConsoleCommandEvent* alt_CConsoleCommandEvent_Create_4(struct alt_CConsoleCommandEvent* _p0)
{
    return (struct alt_CConsoleCommandEvent*)new alt::CConsoleCommandEvent(*(const alt::CConsoleCommandEvent *)_p0);
}

CAPI struct alt_CConsoleCommandEvent* alt_CConsoleCommandEvent_Create_5(struct alt_CConsoleCommandEvent* _p0)
{
    return (struct alt_CConsoleCommandEvent*)new alt::CConsoleCommandEvent(*(alt::CConsoleCommandEvent *)_p0);
}

CAPI void alt_CConsoleCommandEvent_Assign_constCConsoleCommandEventRef(struct alt_CConsoleCommandEvent* _instance, struct alt_CConsoleCommandEvent* _p0)
{
    ((alt::CConsoleCommandEvent *)_instance)->operator=(*(const alt::CConsoleCommandEvent *)_p0);
}

CAPI void alt_CConsoleCommandEvent_Assign_CConsoleCommandEventRefRef(struct alt_CConsoleCommandEvent* _instance, struct alt_CConsoleCommandEvent* _p0)
{
    ((alt::CConsoleCommandEvent *)_instance)->operator=(*(alt::CConsoleCommandEvent *)_p0);
}

CAPI void alt_CWeaponDamageEvent_free(struct alt_CWeaponDamageEvent* ptr)
{
    delete (class alt::CWeaponDamageEvent *)ptr;
}

CAPI struct alt_CWeaponDamageEvent* alt_CEvent_to_alt_CWeaponDamageEvent(struct alt_CEvent* from)
{
    return (alt_CWeaponDamageEvent*)static_cast<alt::CWeaponDamageEvent*>((alt::CEvent*)from);
}

CAPI struct alt_CEvent* alt_CWeaponDamageEvent_to_alt_CEvent(struct alt_CWeaponDamageEvent* from)
{
    return (alt_CEvent*)static_cast<alt::CEvent*>((alt::CWeaponDamageEvent*)from);
}

CAPI struct alt_CWeaponDamageEvent* alt_CWeaponDamageEvent_Create(alt_CEvent_Type _type)
{
    return (struct alt_CWeaponDamageEvent*)new alt::CEvent((alt::CEvent::Type)_type);
}

CAPI alt_CEvent_Type alt_CWeaponDamageEvent_GetType(struct alt_CWeaponDamageEvent* _instance)
{
    return (alt_CEvent_Type)static_cast<alt::CEvent *>((alt::CWeaponDamageEvent *)_instance)->GetType();
}

CAPI _Bool alt_CWeaponDamageEvent_WasCancelled(struct alt_CWeaponDamageEvent* _instance)
{
    return (_Bool)static_cast<alt::CEvent *>((alt::CWeaponDamageEvent *)_instance)->WasCancelled();
}

CAPI void alt_CWeaponDamageEvent_Cancel(struct alt_CWeaponDamageEvent* _instance)
{
    static_cast<alt::CEvent *>((alt::CWeaponDamageEvent *)_instance)->Cancel();
}

CAPI struct alt_CWeaponDamageEvent* alt_CWeaponDamageEvent_Create_1(struct alt_CEvent* _p0)
{
    return (struct alt_CWeaponDamageEvent*)new alt::CEvent(*(const alt::CEvent *)_p0);
}

CAPI void alt_CWeaponDamageEvent_Assign_constCEventRef(struct alt_CWeaponDamageEvent* _instance, struct alt_CEvent* _p0)
{
    static_cast<alt::CEvent *>((alt::CWeaponDamageEvent *)_instance)->operator=(*(const alt::CEvent *)_p0);
}

CAPI struct alt_CWeaponDamageEvent* alt_CWeaponDamageEvent_Create_2(struct alt_CEvent* _p0)
{
    return (struct alt_CWeaponDamageEvent*)new alt::CEvent(*(alt::CEvent *)_p0);
}

CAPI void alt_CWeaponDamageEvent_Assign_CEventRefRef(struct alt_CWeaponDamageEvent* _instance, struct alt_CEvent* _p0)
{
    static_cast<alt::CEvent *>((alt::CWeaponDamageEvent *)_instance)->operator=(*(alt::CEvent *)_p0);
}

CAPI struct alt_CWeaponDamageEvent* alt_CWeaponDamageEvent_Create_3(struct alt_RefBase_RefStore_IPlayer* _source, struct alt_RefBase_RefStore_IEntity* _target, unsigned int _weaponHash, unsigned short _damageValue, struct alt_Vector_float_3_VectorLayout_float_3* _shotOffset, alt_CWeaponDamageEvent_BodyPart _bodyPart)
{
    return (struct alt_CWeaponDamageEvent*)new alt::CWeaponDamageEvent(*(Ref<alt::IPlayer>*)_source, *(Ref<alt::IEntity>*)_target, (uint32_t)_weaponHash, (uint16_t)_damageValue, *(alt::Vector3f*)_shotOffset, (alt::CWeaponDamageEvent::BodyPart)_bodyPart);
}

CAPI struct alt_RefBase_RefStore_IPlayer* alt_CWeaponDamageEvent_GetSource(struct alt_CWeaponDamageEvent* _instance)
{
    return (alt_RefBase_RefStore_IPlayer*)new class alt::RefBase<class alt::RefStore<class alt::IPlayer> >(((alt::CWeaponDamageEvent *)_instance)->GetSource());
}

CAPI struct alt_RefBase_RefStore_IEntity* alt_CWeaponDamageEvent_GetTarget(struct alt_CWeaponDamageEvent* _instance)
{
    return (alt_RefBase_RefStore_IEntity*)new class alt::RefBase<class alt::RefStore<class alt::IEntity> >(((alt::CWeaponDamageEvent *)_instance)->GetTarget());
}

CAPI unsigned int alt_CWeaponDamageEvent_GetWeaponHash(struct alt_CWeaponDamageEvent* _instance)
{
    return (unsigned int)((alt::CWeaponDamageEvent *)_instance)->GetWeaponHash();
}

CAPI unsigned short alt_CWeaponDamageEvent_GetDamageValue(struct alt_CWeaponDamageEvent* _instance)
{
    return (unsigned short)((alt::CWeaponDamageEvent *)_instance)->GetDamageValue();
}

CAPI struct alt_Vector_float_3_VectorLayout_float_3* alt_CWeaponDamageEvent_GetShotOffset(struct alt_CWeaponDamageEvent* _instance)
{
    return (alt_Vector_float_3_VectorLayout_float_3*)new class alt::Vector<float, 3, class alt::VectorLayout<float, 3> >(((alt::CWeaponDamageEvent *)_instance)->GetShotOffset());
}

CAPI alt_CWeaponDamageEvent_BodyPart alt_CWeaponDamageEvent_GetBodyPart(struct alt_CWeaponDamageEvent* _instance)
{
    return (alt_CWeaponDamageEvent_BodyPart)((alt::CWeaponDamageEvent *)_instance)->GetBodyPart();
}

CAPI struct alt_CWeaponDamageEvent* alt_CWeaponDamageEvent_Create_4(struct alt_CWeaponDamageEvent* _p0)
{
    return (struct alt_CWeaponDamageEvent*)new alt::CWeaponDamageEvent(*(const alt::CWeaponDamageEvent *)_p0);
}

CAPI struct alt_CWeaponDamageEvent* alt_CWeaponDamageEvent_Create_5(struct alt_CWeaponDamageEvent* _p0)
{
    return (struct alt_CWeaponDamageEvent*)new alt::CWeaponDamageEvent(*(alt::CWeaponDamageEvent *)_p0);
}

CAPI void alt_CWeaponDamageEvent_Assign_constCWeaponDamageEventRef(struct alt_CWeaponDamageEvent* _instance, struct alt_CWeaponDamageEvent* _p0)
{
    ((alt::CWeaponDamageEvent *)_instance)->operator=(*(const alt::CWeaponDamageEvent *)_p0);
}

CAPI void alt_CWeaponDamageEvent_Assign_CWeaponDamageEventRefRef(struct alt_CWeaponDamageEvent* _instance, struct alt_CWeaponDamageEvent* _p0)
{
    ((alt::CWeaponDamageEvent *)_instance)->operator=(*(alt::CWeaponDamageEvent *)_p0);
}

CAPI void alt_CExplosionEvent_free(struct alt_CExplosionEvent* ptr)
{
    delete (class alt::CExplosionEvent *)ptr;
}

CAPI struct alt_CExplosionEvent* alt_CEvent_to_alt_CExplosionEvent(struct alt_CEvent* from)
{
    return (alt_CExplosionEvent*)static_cast<alt::CExplosionEvent*>((alt::CEvent*)from);
}

CAPI struct alt_CEvent* alt_CExplosionEvent_to_alt_CEvent(struct alt_CExplosionEvent* from)
{
    return (alt_CEvent*)static_cast<alt::CEvent*>((alt::CExplosionEvent*)from);
}

CAPI struct alt_CExplosionEvent* alt_CExplosionEvent_Create(alt_CEvent_Type _type)
{
    return (struct alt_CExplosionEvent*)new alt::CEvent((alt::CEvent::Type)_type);
}

CAPI alt_CEvent_Type alt_CExplosionEvent_GetType(struct alt_CExplosionEvent* _instance)
{
    return (alt_CEvent_Type)static_cast<alt::CEvent *>((alt::CExplosionEvent *)_instance)->GetType();
}

CAPI _Bool alt_CExplosionEvent_WasCancelled(struct alt_CExplosionEvent* _instance)
{
    return (_Bool)static_cast<alt::CEvent *>((alt::CExplosionEvent *)_instance)->WasCancelled();
}

CAPI void alt_CExplosionEvent_Cancel(struct alt_CExplosionEvent* _instance)
{
    static_cast<alt::CEvent *>((alt::CExplosionEvent *)_instance)->Cancel();
}

CAPI struct alt_CExplosionEvent* alt_CExplosionEvent_Create_1(struct alt_CEvent* _p0)
{
    return (struct alt_CExplosionEvent*)new alt::CEvent(*(const alt::CEvent *)_p0);
}

CAPI void alt_CExplosionEvent_Assign_constCEventRef(struct alt_CExplosionEvent* _instance, struct alt_CEvent* _p0)
{
    static_cast<alt::CEvent *>((alt::CExplosionEvent *)_instance)->operator=(*(const alt::CEvent *)_p0);
}

CAPI struct alt_CExplosionEvent* alt_CExplosionEvent_Create_2(struct alt_CEvent* _p0)
{
    return (struct alt_CExplosionEvent*)new alt::CEvent(*(alt::CEvent *)_p0);
}

CAPI void alt_CExplosionEvent_Assign_CEventRefRef(struct alt_CExplosionEvent* _instance, struct alt_CEvent* _p0)
{
    static_cast<alt::CEvent *>((alt::CExplosionEvent *)_instance)->operator=(*(alt::CEvent *)_p0);
}

CAPI struct alt_CExplosionEvent* alt_CExplosionEvent_Create_3(struct alt_RefBase_RefStore_IPlayer* _source, alt_CExplosionEvent_ExplosionType _explosionType, struct alt_Vector_float_3_PointLayout* _position, unsigned int _explosionFX)
{
    return (struct alt_CExplosionEvent*)new alt::CExplosionEvent(*(Ref<alt::IPlayer>*)_source, (alt::CExplosionEvent::ExplosionType)_explosionType, *(alt::Position*)_position, (uint32_t)_explosionFX);
}

CAPI struct alt_RefBase_RefStore_IPlayer* alt_CExplosionEvent_GetSource(struct alt_CExplosionEvent* _instance)
{
    return (alt_RefBase_RefStore_IPlayer*)new class alt::RefBase<class alt::RefStore<class alt::IPlayer> >(((alt::CExplosionEvent *)_instance)->GetSource());
}

CAPI alt_CExplosionEvent_ExplosionType alt_CExplosionEvent_GetExplosionType(struct alt_CExplosionEvent* _instance)
{
    return (alt_CExplosionEvent_ExplosionType)((alt::CExplosionEvent *)_instance)->GetExplosionType();
}

CAPI struct alt_Vector_float_3_PointLayout* alt_CExplosionEvent_GetPosition(struct alt_CExplosionEvent* _instance)
{
    return (alt_Vector_float_3_PointLayout*)new class alt::Vector<float, 3, class alt::PointLayout>(((alt::CExplosionEvent *)_instance)->GetPosition());
}

CAPI unsigned int alt_CExplosionEvent_GetExplosionFX(struct alt_CExplosionEvent* _instance)
{
    return (unsigned int)((alt::CExplosionEvent *)_instance)->GetExplosionFX();
}

CAPI struct alt_CExplosionEvent* alt_CExplosionEvent_Create_4(struct alt_CExplosionEvent* _p0)
{
    return (struct alt_CExplosionEvent*)new alt::CExplosionEvent(*(const alt::CExplosionEvent *)_p0);
}

CAPI struct alt_CExplosionEvent* alt_CExplosionEvent_Create_5(struct alt_CExplosionEvent* _p0)
{
    return (struct alt_CExplosionEvent*)new alt::CExplosionEvent(*(alt::CExplosionEvent *)_p0);
}

CAPI void alt_CExplosionEvent_Assign_constCExplosionEventRef(struct alt_CExplosionEvent* _instance, struct alt_CExplosionEvent* _p0)
{
    ((alt::CExplosionEvent *)_instance)->operator=(*(const alt::CExplosionEvent *)_p0);
}

CAPI void alt_CExplosionEvent_Assign_CExplosionEventRefRef(struct alt_CExplosionEvent* _instance, struct alt_CExplosionEvent* _p0)
{
    ((alt::CExplosionEvent *)_instance)->operator=(*(alt::CExplosionEvent *)_p0);
}

CAPI struct alt_IScriptRuntime* alt_IResource_GetRuntime(struct alt_IResource* _instance)
{
    return (alt_IScriptRuntime*)((alt::IResource *)_instance)->GetRuntime();
}

CAPI struct alt_IResource_Impl* alt_IResource_GetImpl(struct alt_IResource* _instance)
{
    return (alt_IResource_Impl*)((alt::IResource *)_instance)->GetImpl();
}

CAPI _Bool alt_IResource_IsStarted(struct alt_IResource* _instance)
{
    return (_Bool)((alt::IResource *)_instance)->IsStarted();
}

CAPI struct alt_StringView* alt_IResource_GetType(struct alt_IResource* _instance)
{
    return (alt_StringView*)new class alt::StringView(((alt::IResource *)_instance)->GetType());
}

CAPI struct alt_StringView* alt_IResource_GetName(struct alt_IResource* _instance)
{
    return (alt_StringView*)new class alt::StringView(((alt::IResource *)_instance)->GetName());
}

CAPI struct alt_StringView* alt_IResource_GetPath(struct alt_IResource* _instance)
{
    return (alt_StringView*)new class alt::StringView(((alt::IResource *)_instance)->GetPath());
}

CAPI struct alt_StringView* alt_IResource_GetMain(struct alt_IResource* _instance)
{
    return (alt_StringView*)new class alt::StringView(((alt::IResource *)_instance)->GetMain());
}

CAPI struct alt_IPackage* alt_IResource_GetPackage(struct alt_IResource* _instance)
{
    return (alt_IPackage*)((alt::IResource *)_instance)->GetPackage();
}

CAPI struct alt_RefBase_RefStore_IMValueDict* alt_IResource_GetExports(struct alt_IResource* _instance)
{
    return (alt_RefBase_RefStore_IMValueDict*)new class alt::RefBase<class alt::RefStore<class alt::IMValueDict> >(((alt::IResource *)_instance)->GetExports());
}

CAPI void alt_IResource_SetExports(struct alt_IResource* _instance, struct alt_RefBase_RefStore_IMValueDict* exports)
{
    ((alt::IResource *)_instance)->SetExports(*(alt::MValueDict*)exports);
}

CAPI void alt_IResource_Assign_constIResourceRef(struct alt_IResource* _instance, struct alt_IResource* _p0)
{
    ((alt::IResource *)_instance)->operator=(*(const alt::IResource *)_p0);
}

CAPI void alt_IResource_CreationInfo_free(struct alt_IResource_CreationInfo* ptr)
{
    delete (struct alt::IResource::CreationInfo *)ptr;
}

CAPI struct alt_IResource_CreationInfo* alt_IResource_CreationInfo_Create(struct alt_IResource_CreationInfo* _p0)
{
    return (struct alt_IResource_CreationInfo*)new alt::IResource::CreationInfo(*(const alt::IResource::CreationInfo *)_p0);
}

CAPI struct alt_IResource_CreationInfo* alt_IResource_CreationInfo_Create_1(struct alt_IResource_CreationInfo* _p0)
{
    return (struct alt_IResource_CreationInfo*)new alt::IResource::CreationInfo(*(alt::IResource::CreationInfo *)_p0);
}

CAPI void alt_IResource_CreationInfo_Assign_IResource_CreationInfoRefRef(struct alt_IResource_CreationInfo* _instance, struct alt_IResource_CreationInfo* _p0)
{
    ((alt::IResource::CreationInfo *)_instance)->operator=(*(alt::IResource::CreationInfo *)_p0);
}

CAPI void alt_IResource_Impl_free(struct alt_IResource_Impl* ptr)
{
    delete (class alt::IResource::Impl *)ptr;
}

CAPI _Bool alt_IResource_Impl_Start(struct alt_IResource_Impl* _instance)
{
    return (_Bool)((alt::IResource::Impl *)_instance)->Start();
}

CAPI _Bool alt_IResource_Impl_Stop(struct alt_IResource_Impl* _instance)
{
    return (_Bool)((alt::IResource::Impl *)_instance)->Stop();
}

CAPI _Bool alt_IResource_Impl_OnEvent(struct alt_IResource_Impl* _instance, struct alt_CEvent* ev)
{
    return (_Bool)((alt::IResource::Impl *)_instance)->OnEvent((const alt::CEvent *)ev);
}

CAPI void alt_IResource_Impl_OnTick(struct alt_IResource_Impl* _instance)
{
    ((alt::IResource::Impl *)_instance)->OnTick();
}

CAPI void alt_IResource_Impl_OnCreateBaseObject(struct alt_IResource_Impl* _instance, struct alt_RefBase_RefStore_IBaseObject* object)
{
    ((alt::IResource::Impl *)_instance)->OnCreateBaseObject(*(Ref<alt::IBaseObject>*)object);
}

CAPI void alt_IResource_Impl_OnRemoveBaseObject(struct alt_IResource_Impl* _instance, struct alt_RefBase_RefStore_IBaseObject* object)
{
    ((alt::IResource::Impl *)_instance)->OnRemoveBaseObject(*(Ref<alt::IBaseObject>*)object);
}

CAPI void alt_IResource_Impl_Assign_constIResource_ImplRef(struct alt_IResource_Impl* _instance, struct alt_IResource_Impl* _p0)
{
    ((alt::IResource::Impl *)_instance)->operator=(*(const alt::IResource::Impl *)_p0);
}

CAPI void alt_CResourceStartEvent_free(struct alt_CResourceStartEvent* ptr)
{
    delete (class alt::CResourceStartEvent *)ptr;
}

CAPI struct alt_CResourceStartEvent* alt_CEvent_to_alt_CResourceStartEvent(struct alt_CEvent* from)
{
    return (alt_CResourceStartEvent*)static_cast<alt::CResourceStartEvent*>((alt::CEvent*)from);
}

CAPI struct alt_CEvent* alt_CResourceStartEvent_to_alt_CEvent(struct alt_CResourceStartEvent* from)
{
    return (alt_CEvent*)static_cast<alt::CEvent*>((alt::CResourceStartEvent*)from);
}

CAPI struct alt_CResourceStartEvent* alt_CResourceStartEvent_Create(alt_CEvent_Type _type)
{
    return (struct alt_CResourceStartEvent*)new alt::CEvent((alt::CEvent::Type)_type);
}

CAPI alt_CEvent_Type alt_CResourceStartEvent_GetType(struct alt_CResourceStartEvent* _instance)
{
    return (alt_CEvent_Type)static_cast<alt::CEvent *>((alt::CResourceStartEvent *)_instance)->GetType();
}

CAPI _Bool alt_CResourceStartEvent_WasCancelled(struct alt_CResourceStartEvent* _instance)
{
    return (_Bool)static_cast<alt::CEvent *>((alt::CResourceStartEvent *)_instance)->WasCancelled();
}

CAPI void alt_CResourceStartEvent_Cancel(struct alt_CResourceStartEvent* _instance)
{
    static_cast<alt::CEvent *>((alt::CResourceStartEvent *)_instance)->Cancel();
}

CAPI struct alt_CResourceStartEvent* alt_CResourceStartEvent_Create_1(struct alt_CEvent* _p0)
{
    return (struct alt_CResourceStartEvent*)new alt::CEvent(*(const alt::CEvent *)_p0);
}

CAPI void alt_CResourceStartEvent_Assign_constCEventRef(struct alt_CResourceStartEvent* _instance, struct alt_CEvent* _p0)
{
    static_cast<alt::CEvent *>((alt::CResourceStartEvent *)_instance)->operator=(*(const alt::CEvent *)_p0);
}

CAPI struct alt_CResourceStartEvent* alt_CResourceStartEvent_Create_2(struct alt_CEvent* _p0)
{
    return (struct alt_CResourceStartEvent*)new alt::CEvent(*(alt::CEvent *)_p0);
}

CAPI void alt_CResourceStartEvent_Assign_CEventRefRef(struct alt_CResourceStartEvent* _instance, struct alt_CEvent* _p0)
{
    static_cast<alt::CEvent *>((alt::CResourceStartEvent *)_instance)->operator=(*(alt::CEvent *)_p0);
}

CAPI struct alt_CResourceStartEvent* alt_CResourceStartEvent_Create_3(struct alt_IResource* _resource)
{
    return (struct alt_CResourceStartEvent*)new alt::CResourceStartEvent((alt::IResource *)_resource);
}

CAPI struct alt_IResource* alt_CResourceStartEvent_GetResource(struct alt_CResourceStartEvent* _instance)
{
    return (alt_IResource*)((alt::CResourceStartEvent *)_instance)->GetResource();
}

CAPI struct alt_CResourceStartEvent* alt_CResourceStartEvent_Create_4(struct alt_CResourceStartEvent* _p0)
{
    return (struct alt_CResourceStartEvent*)new alt::CResourceStartEvent(*(const alt::CResourceStartEvent *)_p0);
}

CAPI void alt_CResourceStartEvent_Assign_constCResourceStartEventRef(struct alt_CResourceStartEvent* _instance, struct alt_CResourceStartEvent* _p0)
{
    ((alt::CResourceStartEvent *)_instance)->operator=(*(const alt::CResourceStartEvent *)_p0);
}

CAPI void alt_CResourceStopEvent_free(struct alt_CResourceStopEvent* ptr)
{
    delete (class alt::CResourceStopEvent *)ptr;
}

CAPI struct alt_CResourceStopEvent* alt_CEvent_to_alt_CResourceStopEvent(struct alt_CEvent* from)
{
    return (alt_CResourceStopEvent*)static_cast<alt::CResourceStopEvent*>((alt::CEvent*)from);
}

CAPI struct alt_CEvent* alt_CResourceStopEvent_to_alt_CEvent(struct alt_CResourceStopEvent* from)
{
    return (alt_CEvent*)static_cast<alt::CEvent*>((alt::CResourceStopEvent*)from);
}

CAPI struct alt_CResourceStopEvent* alt_CResourceStopEvent_Create(alt_CEvent_Type _type)
{
    return (struct alt_CResourceStopEvent*)new alt::CEvent((alt::CEvent::Type)_type);
}

CAPI alt_CEvent_Type alt_CResourceStopEvent_GetType(struct alt_CResourceStopEvent* _instance)
{
    return (alt_CEvent_Type)static_cast<alt::CEvent *>((alt::CResourceStopEvent *)_instance)->GetType();
}

CAPI _Bool alt_CResourceStopEvent_WasCancelled(struct alt_CResourceStopEvent* _instance)
{
    return (_Bool)static_cast<alt::CEvent *>((alt::CResourceStopEvent *)_instance)->WasCancelled();
}

CAPI void alt_CResourceStopEvent_Cancel(struct alt_CResourceStopEvent* _instance)
{
    static_cast<alt::CEvent *>((alt::CResourceStopEvent *)_instance)->Cancel();
}

CAPI struct alt_CResourceStopEvent* alt_CResourceStopEvent_Create_1(struct alt_CEvent* _p0)
{
    return (struct alt_CResourceStopEvent*)new alt::CEvent(*(const alt::CEvent *)_p0);
}

CAPI void alt_CResourceStopEvent_Assign_constCEventRef(struct alt_CResourceStopEvent* _instance, struct alt_CEvent* _p0)
{
    static_cast<alt::CEvent *>((alt::CResourceStopEvent *)_instance)->operator=(*(const alt::CEvent *)_p0);
}

CAPI struct alt_CResourceStopEvent* alt_CResourceStopEvent_Create_2(struct alt_CEvent* _p0)
{
    return (struct alt_CResourceStopEvent*)new alt::CEvent(*(alt::CEvent *)_p0);
}

CAPI void alt_CResourceStopEvent_Assign_CEventRefRef(struct alt_CResourceStopEvent* _instance, struct alt_CEvent* _p0)
{
    static_cast<alt::CEvent *>((alt::CResourceStopEvent *)_instance)->operator=(*(alt::CEvent *)_p0);
}

CAPI struct alt_CResourceStopEvent* alt_CResourceStopEvent_Create_3(struct alt_IResource* _resource)
{
    return (struct alt_CResourceStopEvent*)new alt::CResourceStopEvent((alt::IResource *)_resource);
}

CAPI struct alt_IResource* alt_CResourceStopEvent_GetResource(struct alt_CResourceStopEvent* _instance)
{
    return (alt_IResource*)((alt::CResourceStopEvent *)_instance)->GetResource();
}

CAPI struct alt_CResourceStopEvent* alt_CResourceStopEvent_Create_4(struct alt_CResourceStopEvent* _p0)
{
    return (struct alt_CResourceStopEvent*)new alt::CResourceStopEvent(*(const alt::CResourceStopEvent *)_p0);
}

CAPI void alt_CResourceStopEvent_Assign_constCResourceStopEventRef(struct alt_CResourceStopEvent* _instance, struct alt_CResourceStopEvent* _p0)
{
    ((alt::CResourceStopEvent *)_instance)->operator=(*(const alt::CResourceStopEvent *)_p0);
}

CAPI void alt_CResourceErrorEvent_free(struct alt_CResourceErrorEvent* ptr)
{
    delete (class alt::CResourceErrorEvent *)ptr;
}

CAPI struct alt_CResourceErrorEvent* alt_CEvent_to_alt_CResourceErrorEvent(struct alt_CEvent* from)
{
    return (alt_CResourceErrorEvent*)static_cast<alt::CResourceErrorEvent*>((alt::CEvent*)from);
}

CAPI struct alt_CEvent* alt_CResourceErrorEvent_to_alt_CEvent(struct alt_CResourceErrorEvent* from)
{
    return (alt_CEvent*)static_cast<alt::CEvent*>((alt::CResourceErrorEvent*)from);
}

CAPI struct alt_CResourceErrorEvent* alt_CResourceErrorEvent_Create(alt_CEvent_Type _type)
{
    return (struct alt_CResourceErrorEvent*)new alt::CEvent((alt::CEvent::Type)_type);
}

CAPI alt_CEvent_Type alt_CResourceErrorEvent_GetType(struct alt_CResourceErrorEvent* _instance)
{
    return (alt_CEvent_Type)static_cast<alt::CEvent *>((alt::CResourceErrorEvent *)_instance)->GetType();
}

CAPI _Bool alt_CResourceErrorEvent_WasCancelled(struct alt_CResourceErrorEvent* _instance)
{
    return (_Bool)static_cast<alt::CEvent *>((alt::CResourceErrorEvent *)_instance)->WasCancelled();
}

CAPI void alt_CResourceErrorEvent_Cancel(struct alt_CResourceErrorEvent* _instance)
{
    static_cast<alt::CEvent *>((alt::CResourceErrorEvent *)_instance)->Cancel();
}

CAPI struct alt_CResourceErrorEvent* alt_CResourceErrorEvent_Create_1(struct alt_CEvent* _p0)
{
    return (struct alt_CResourceErrorEvent*)new alt::CEvent(*(const alt::CEvent *)_p0);
}

CAPI void alt_CResourceErrorEvent_Assign_constCEventRef(struct alt_CResourceErrorEvent* _instance, struct alt_CEvent* _p0)
{
    static_cast<alt::CEvent *>((alt::CResourceErrorEvent *)_instance)->operator=(*(const alt::CEvent *)_p0);
}

CAPI struct alt_CResourceErrorEvent* alt_CResourceErrorEvent_Create_2(struct alt_CEvent* _p0)
{
    return (struct alt_CResourceErrorEvent*)new alt::CEvent(*(alt::CEvent *)_p0);
}

CAPI void alt_CResourceErrorEvent_Assign_CEventRefRef(struct alt_CResourceErrorEvent* _instance, struct alt_CEvent* _p0)
{
    static_cast<alt::CEvent *>((alt::CResourceErrorEvent *)_instance)->operator=(*(alt::CEvent *)_p0);
}

CAPI struct alt_CResourceErrorEvent* alt_CResourceErrorEvent_Create_3(struct alt_IResource* _resource)
{
    return (struct alt_CResourceErrorEvent*)new alt::CResourceErrorEvent((alt::IResource *)_resource);
}

CAPI struct alt_IResource* alt_CResourceErrorEvent_GetResource(struct alt_CResourceErrorEvent* _instance)
{
    return (alt_IResource*)((alt::CResourceErrorEvent *)_instance)->GetResource();
}

CAPI struct alt_CResourceErrorEvent* alt_CResourceErrorEvent_Create_4(struct alt_CResourceErrorEvent* _p0)
{
    return (struct alt_CResourceErrorEvent*)new alt::CResourceErrorEvent(*(const alt::CResourceErrorEvent *)_p0);
}

CAPI void alt_CResourceErrorEvent_Assign_constCResourceErrorEventRef(struct alt_CResourceErrorEvent* _instance, struct alt_CResourceErrorEvent* _p0)
{
    ((alt::CResourceErrorEvent *)_instance)->operator=(*(const alt::CResourceErrorEvent *)_p0);
}

CAPI void alt_CSyncedMetaDataChangeEvent_free(struct alt_CSyncedMetaDataChangeEvent* ptr)
{
    delete (class alt::CSyncedMetaDataChangeEvent *)ptr;
}

CAPI struct alt_CSyncedMetaDataChangeEvent* alt_CEvent_to_alt_CSyncedMetaDataChangeEvent(struct alt_CEvent* from)
{
    return (alt_CSyncedMetaDataChangeEvent*)static_cast<alt::CSyncedMetaDataChangeEvent*>((alt::CEvent*)from);
}

CAPI struct alt_CEvent* alt_CSyncedMetaDataChangeEvent_to_alt_CEvent(struct alt_CSyncedMetaDataChangeEvent* from)
{
    return (alt_CEvent*)static_cast<alt::CEvent*>((alt::CSyncedMetaDataChangeEvent*)from);
}

CAPI struct alt_CSyncedMetaDataChangeEvent* alt_CSyncedMetaDataChangeEvent_Create(alt_CEvent_Type _type)
{
    return (struct alt_CSyncedMetaDataChangeEvent*)new alt::CEvent((alt::CEvent::Type)_type);
}

CAPI alt_CEvent_Type alt_CSyncedMetaDataChangeEvent_GetType(struct alt_CSyncedMetaDataChangeEvent* _instance)
{
    return (alt_CEvent_Type)static_cast<alt::CEvent *>((alt::CSyncedMetaDataChangeEvent *)_instance)->GetType();
}

CAPI _Bool alt_CSyncedMetaDataChangeEvent_WasCancelled(struct alt_CSyncedMetaDataChangeEvent* _instance)
{
    return (_Bool)static_cast<alt::CEvent *>((alt::CSyncedMetaDataChangeEvent *)_instance)->WasCancelled();
}

CAPI void alt_CSyncedMetaDataChangeEvent_Cancel(struct alt_CSyncedMetaDataChangeEvent* _instance)
{
    static_cast<alt::CEvent *>((alt::CSyncedMetaDataChangeEvent *)_instance)->Cancel();
}

CAPI struct alt_CSyncedMetaDataChangeEvent* alt_CSyncedMetaDataChangeEvent_Create_1(struct alt_CEvent* _p0)
{
    return (struct alt_CSyncedMetaDataChangeEvent*)new alt::CEvent(*(const alt::CEvent *)_p0);
}

CAPI void alt_CSyncedMetaDataChangeEvent_Assign_constCEventRef(struct alt_CSyncedMetaDataChangeEvent* _instance, struct alt_CEvent* _p0)
{
    static_cast<alt::CEvent *>((alt::CSyncedMetaDataChangeEvent *)_instance)->operator=(*(const alt::CEvent *)_p0);
}

CAPI struct alt_CSyncedMetaDataChangeEvent* alt_CSyncedMetaDataChangeEvent_Create_2(struct alt_CEvent* _p0)
{
    return (struct alt_CSyncedMetaDataChangeEvent*)new alt::CEvent(*(alt::CEvent *)_p0);
}

CAPI void alt_CSyncedMetaDataChangeEvent_Assign_CEventRefRef(struct alt_CSyncedMetaDataChangeEvent* _instance, struct alt_CEvent* _p0)
{
    static_cast<alt::CEvent *>((alt::CSyncedMetaDataChangeEvent *)_instance)->operator=(*(alt::CEvent *)_p0);
}

CAPI struct alt_CSyncedMetaDataChangeEvent* alt_CSyncedMetaDataChangeEvent_Create_3(struct alt_RefBase_RefStore_IEntity* _target, struct alt_StringView* _key, struct alt_RefBase_RefStore_IMValue* _val)
{
    return (struct alt_CSyncedMetaDataChangeEvent*)new alt::CSyncedMetaDataChangeEvent(*(Ref<alt::IEntity>*)_target, *(alt::StringView*)_key, *(alt::MValue*)_val);
}

CAPI struct alt_RefBase_RefStore_IEntity* alt_CSyncedMetaDataChangeEvent_GetTarget(struct alt_CSyncedMetaDataChangeEvent* _instance)
{
    return (alt_RefBase_RefStore_IEntity*)new class alt::RefBase<class alt::RefStore<class alt::IEntity> >(((alt::CSyncedMetaDataChangeEvent *)_instance)->GetTarget());
}

CAPI struct alt_StringView* alt_CSyncedMetaDataChangeEvent_GetKey(struct alt_CSyncedMetaDataChangeEvent* _instance)
{
    return (alt_StringView*)new class alt::StringView(((alt::CSyncedMetaDataChangeEvent *)_instance)->GetKey());
}

CAPI struct alt_RefBase_RefStore_IMValue* alt_CSyncedMetaDataChangeEvent_GetVal(struct alt_CSyncedMetaDataChangeEvent* _instance)
{
    return (alt_RefBase_RefStore_IMValue*)new class alt::RefBase<class alt::RefStore<class alt::IMValue> >(((alt::CSyncedMetaDataChangeEvent *)_instance)->GetVal());
}

CAPI struct alt_CSyncedMetaDataChangeEvent* alt_CSyncedMetaDataChangeEvent_Create_4(struct alt_CSyncedMetaDataChangeEvent* _p0)
{
    return (struct alt_CSyncedMetaDataChangeEvent*)new alt::CSyncedMetaDataChangeEvent(*(const alt::CSyncedMetaDataChangeEvent *)_p0);
}

CAPI struct alt_CSyncedMetaDataChangeEvent* alt_CSyncedMetaDataChangeEvent_Create_5(struct alt_CSyncedMetaDataChangeEvent* _p0)
{
    return (struct alt_CSyncedMetaDataChangeEvent*)new alt::CSyncedMetaDataChangeEvent(*(alt::CSyncedMetaDataChangeEvent *)_p0);
}

CAPI void alt_CSyncedMetaDataChangeEvent_Assign_constCSyncedMetaDataChangeEventRef(struct alt_CSyncedMetaDataChangeEvent* _instance, struct alt_CSyncedMetaDataChangeEvent* _p0)
{
    ((alt::CSyncedMetaDataChangeEvent *)_instance)->operator=(*(const alt::CSyncedMetaDataChangeEvent *)_p0);
}

CAPI void alt_CSyncedMetaDataChangeEvent_Assign_CSyncedMetaDataChangeEventRefRef(struct alt_CSyncedMetaDataChangeEvent* _instance, struct alt_CSyncedMetaDataChangeEvent* _p0)
{
    ((alt::CSyncedMetaDataChangeEvent *)_instance)->operator=(*(alt::CSyncedMetaDataChangeEvent *)_p0);
}

CAPI void alt_CConnectionCompleteEvent_free(struct alt_CConnectionCompleteEvent* ptr)
{
    delete (class alt::CConnectionCompleteEvent *)ptr;
}

CAPI struct alt_CConnectionCompleteEvent* alt_CEvent_to_alt_CConnectionCompleteEvent(struct alt_CEvent* from)
{
    return (alt_CConnectionCompleteEvent*)static_cast<alt::CConnectionCompleteEvent*>((alt::CEvent*)from);
}

CAPI struct alt_CEvent* alt_CConnectionCompleteEvent_to_alt_CEvent(struct alt_CConnectionCompleteEvent* from)
{
    return (alt_CEvent*)static_cast<alt::CEvent*>((alt::CConnectionCompleteEvent*)from);
}

CAPI struct alt_CConnectionCompleteEvent* alt_CConnectionCompleteEvent_Create(alt_CEvent_Type _type)
{
    return (struct alt_CConnectionCompleteEvent*)new alt::CEvent((alt::CEvent::Type)_type);
}

CAPI alt_CEvent_Type alt_CConnectionCompleteEvent_GetType(struct alt_CConnectionCompleteEvent* _instance)
{
    return (alt_CEvent_Type)static_cast<alt::CEvent *>((alt::CConnectionCompleteEvent *)_instance)->GetType();
}

CAPI _Bool alt_CConnectionCompleteEvent_WasCancelled(struct alt_CConnectionCompleteEvent* _instance)
{
    return (_Bool)static_cast<alt::CEvent *>((alt::CConnectionCompleteEvent *)_instance)->WasCancelled();
}

CAPI void alt_CConnectionCompleteEvent_Cancel(struct alt_CConnectionCompleteEvent* _instance)
{
    static_cast<alt::CEvent *>((alt::CConnectionCompleteEvent *)_instance)->Cancel();
}

CAPI struct alt_CConnectionCompleteEvent* alt_CConnectionCompleteEvent_Create_1(struct alt_CEvent* _p0)
{
    return (struct alt_CConnectionCompleteEvent*)new alt::CEvent(*(const alt::CEvent *)_p0);
}

CAPI void alt_CConnectionCompleteEvent_Assign_constCEventRef(struct alt_CConnectionCompleteEvent* _instance, struct alt_CEvent* _p0)
{
    static_cast<alt::CEvent *>((alt::CConnectionCompleteEvent *)_instance)->operator=(*(const alt::CEvent *)_p0);
}

CAPI struct alt_CConnectionCompleteEvent* alt_CConnectionCompleteEvent_Create_2(struct alt_CEvent* _p0)
{
    return (struct alt_CConnectionCompleteEvent*)new alt::CEvent(*(alt::CEvent *)_p0);
}

CAPI void alt_CConnectionCompleteEvent_Assign_CEventRefRef(struct alt_CConnectionCompleteEvent* _instance, struct alt_CEvent* _p0)
{
    static_cast<alt::CEvent *>((alt::CConnectionCompleteEvent *)_instance)->operator=(*(alt::CEvent *)_p0);
}

CAPI struct alt_CConnectionCompleteEvent* alt_CConnectionCompleteEvent_Create_3()
{
    return (struct alt_CConnectionCompleteEvent*)new alt::CConnectionCompleteEvent();
}

CAPI struct alt_CConnectionCompleteEvent* alt_CConnectionCompleteEvent_Create_4(struct alt_CConnectionCompleteEvent* _p0)
{
    return (struct alt_CConnectionCompleteEvent*)new alt::CConnectionCompleteEvent(*(const alt::CConnectionCompleteEvent *)_p0);
}

CAPI void alt_CConnectionCompleteEvent_Assign_constCConnectionCompleteEventRef(struct alt_CConnectionCompleteEvent* _instance, struct alt_CConnectionCompleteEvent* _p0)
{
    ((alt::CConnectionCompleteEvent *)_instance)->operator=(*(const alt::CConnectionCompleteEvent *)_p0);
}

CAPI void alt_CDisconnectEvent_free(struct alt_CDisconnectEvent* ptr)
{
    delete (class alt::CDisconnectEvent *)ptr;
}

CAPI struct alt_CDisconnectEvent* alt_CEvent_to_alt_CDisconnectEvent(struct alt_CEvent* from)
{
    return (alt_CDisconnectEvent*)static_cast<alt::CDisconnectEvent*>((alt::CEvent*)from);
}

CAPI struct alt_CEvent* alt_CDisconnectEvent_to_alt_CEvent(struct alt_CDisconnectEvent* from)
{
    return (alt_CEvent*)static_cast<alt::CEvent*>((alt::CDisconnectEvent*)from);
}

CAPI struct alt_CDisconnectEvent* alt_CDisconnectEvent_Create(alt_CEvent_Type _type)
{
    return (struct alt_CDisconnectEvent*)new alt::CEvent((alt::CEvent::Type)_type);
}

CAPI alt_CEvent_Type alt_CDisconnectEvent_GetType(struct alt_CDisconnectEvent* _instance)
{
    return (alt_CEvent_Type)static_cast<alt::CEvent *>((alt::CDisconnectEvent *)_instance)->GetType();
}

CAPI _Bool alt_CDisconnectEvent_WasCancelled(struct alt_CDisconnectEvent* _instance)
{
    return (_Bool)static_cast<alt::CEvent *>((alt::CDisconnectEvent *)_instance)->WasCancelled();
}

CAPI void alt_CDisconnectEvent_Cancel(struct alt_CDisconnectEvent* _instance)
{
    static_cast<alt::CEvent *>((alt::CDisconnectEvent *)_instance)->Cancel();
}

CAPI struct alt_CDisconnectEvent* alt_CDisconnectEvent_Create_1(struct alt_CEvent* _p0)
{
    return (struct alt_CDisconnectEvent*)new alt::CEvent(*(const alt::CEvent *)_p0);
}

CAPI void alt_CDisconnectEvent_Assign_constCEventRef(struct alt_CDisconnectEvent* _instance, struct alt_CEvent* _p0)
{
    static_cast<alt::CEvent *>((alt::CDisconnectEvent *)_instance)->operator=(*(const alt::CEvent *)_p0);
}

CAPI struct alt_CDisconnectEvent* alt_CDisconnectEvent_Create_2(struct alt_CEvent* _p0)
{
    return (struct alt_CDisconnectEvent*)new alt::CEvent(*(alt::CEvent *)_p0);
}

CAPI void alt_CDisconnectEvent_Assign_CEventRefRef(struct alt_CDisconnectEvent* _instance, struct alt_CEvent* _p0)
{
    static_cast<alt::CEvent *>((alt::CDisconnectEvent *)_instance)->operator=(*(alt::CEvent *)_p0);
}

CAPI struct alt_CDisconnectEvent* alt_CDisconnectEvent_Create_3()
{
    return (struct alt_CDisconnectEvent*)new alt::CDisconnectEvent();
}

CAPI struct alt_CDisconnectEvent* alt_CDisconnectEvent_Create_4(struct alt_CDisconnectEvent* _p0)
{
    return (struct alt_CDisconnectEvent*)new alt::CDisconnectEvent(*(const alt::CDisconnectEvent *)_p0);
}

CAPI void alt_CDisconnectEvent_Assign_constCDisconnectEventRef(struct alt_CDisconnectEvent* _instance, struct alt_CDisconnectEvent* _p0)
{
    ((alt::CDisconnectEvent *)_instance)->operator=(*(const alt::CDisconnectEvent *)_p0);
}

CAPI void alt_CGameEntityCreateEvent_free(struct alt_CGameEntityCreateEvent* ptr)
{
    delete (class alt::CGameEntityCreateEvent *)ptr;
}

CAPI struct alt_CGameEntityCreateEvent* alt_CEvent_to_alt_CGameEntityCreateEvent(struct alt_CEvent* from)
{
    return (alt_CGameEntityCreateEvent*)static_cast<alt::CGameEntityCreateEvent*>((alt::CEvent*)from);
}

CAPI struct alt_CEvent* alt_CGameEntityCreateEvent_to_alt_CEvent(struct alt_CGameEntityCreateEvent* from)
{
    return (alt_CEvent*)static_cast<alt::CEvent*>((alt::CGameEntityCreateEvent*)from);
}

CAPI struct alt_CGameEntityCreateEvent* alt_CGameEntityCreateEvent_Create(alt_CEvent_Type _type)
{
    return (struct alt_CGameEntityCreateEvent*)new alt::CEvent((alt::CEvent::Type)_type);
}

CAPI alt_CEvent_Type alt_CGameEntityCreateEvent_GetType(struct alt_CGameEntityCreateEvent* _instance)
{
    return (alt_CEvent_Type)static_cast<alt::CEvent *>((alt::CGameEntityCreateEvent *)_instance)->GetType();
}

CAPI _Bool alt_CGameEntityCreateEvent_WasCancelled(struct alt_CGameEntityCreateEvent* _instance)
{
    return (_Bool)static_cast<alt::CEvent *>((alt::CGameEntityCreateEvent *)_instance)->WasCancelled();
}

CAPI void alt_CGameEntityCreateEvent_Cancel(struct alt_CGameEntityCreateEvent* _instance)
{
    static_cast<alt::CEvent *>((alt::CGameEntityCreateEvent *)_instance)->Cancel();
}

CAPI struct alt_CGameEntityCreateEvent* alt_CGameEntityCreateEvent_Create_1(struct alt_CEvent* _p0)
{
    return (struct alt_CGameEntityCreateEvent*)new alt::CEvent(*(const alt::CEvent *)_p0);
}

CAPI void alt_CGameEntityCreateEvent_Assign_constCEventRef(struct alt_CGameEntityCreateEvent* _instance, struct alt_CEvent* _p0)
{
    static_cast<alt::CEvent *>((alt::CGameEntityCreateEvent *)_instance)->operator=(*(const alt::CEvent *)_p0);
}

CAPI struct alt_CGameEntityCreateEvent* alt_CGameEntityCreateEvent_Create_2(struct alt_CEvent* _p0)
{
    return (struct alt_CGameEntityCreateEvent*)new alt::CEvent(*(alt::CEvent *)_p0);
}

CAPI void alt_CGameEntityCreateEvent_Assign_CEventRefRef(struct alt_CGameEntityCreateEvent* _instance, struct alt_CEvent* _p0)
{
    static_cast<alt::CEvent *>((alt::CGameEntityCreateEvent *)_instance)->operator=(*(alt::CEvent *)_p0);
}

CAPI struct alt_CGameEntityCreateEvent* alt_CGameEntityCreateEvent_Create_3(struct alt_RefBase_RefStore_IEntity* _target)
{
    return (struct alt_CGameEntityCreateEvent*)new alt::CGameEntityCreateEvent(*(Ref<alt::IEntity>*)_target);
}

CAPI struct alt_RefBase_RefStore_IEntity* alt_CGameEntityCreateEvent_GetTarget(struct alt_CGameEntityCreateEvent* _instance)
{
    return (alt_RefBase_RefStore_IEntity*)new class alt::RefBase<class alt::RefStore<class alt::IEntity> >(((alt::CGameEntityCreateEvent *)_instance)->GetTarget());
}

CAPI struct alt_CGameEntityCreateEvent* alt_CGameEntityCreateEvent_Create_4(struct alt_CGameEntityCreateEvent* _p0)
{
    return (struct alt_CGameEntityCreateEvent*)new alt::CGameEntityCreateEvent(*(const alt::CGameEntityCreateEvent *)_p0);
}

CAPI struct alt_CGameEntityCreateEvent* alt_CGameEntityCreateEvent_Create_5(struct alt_CGameEntityCreateEvent* _p0)
{
    return (struct alt_CGameEntityCreateEvent*)new alt::CGameEntityCreateEvent(*(alt::CGameEntityCreateEvent *)_p0);
}

CAPI void alt_CGameEntityCreateEvent_Assign_constCGameEntityCreateEventRef(struct alt_CGameEntityCreateEvent* _instance, struct alt_CGameEntityCreateEvent* _p0)
{
    ((alt::CGameEntityCreateEvent *)_instance)->operator=(*(const alt::CGameEntityCreateEvent *)_p0);
}

CAPI void alt_CGameEntityCreateEvent_Assign_CGameEntityCreateEventRefRef(struct alt_CGameEntityCreateEvent* _instance, struct alt_CGameEntityCreateEvent* _p0)
{
    ((alt::CGameEntityCreateEvent *)_instance)->operator=(*(alt::CGameEntityCreateEvent *)_p0);
}

CAPI void alt_CGameEntityDestroyEvent_free(struct alt_CGameEntityDestroyEvent* ptr)
{
    delete (class alt::CGameEntityDestroyEvent *)ptr;
}

CAPI struct alt_CGameEntityDestroyEvent* alt_CEvent_to_alt_CGameEntityDestroyEvent(struct alt_CEvent* from)
{
    return (alt_CGameEntityDestroyEvent*)static_cast<alt::CGameEntityDestroyEvent*>((alt::CEvent*)from);
}

CAPI struct alt_CEvent* alt_CGameEntityDestroyEvent_to_alt_CEvent(struct alt_CGameEntityDestroyEvent* from)
{
    return (alt_CEvent*)static_cast<alt::CEvent*>((alt::CGameEntityDestroyEvent*)from);
}

CAPI struct alt_CGameEntityDestroyEvent* alt_CGameEntityDestroyEvent_Create(alt_CEvent_Type _type)
{
    return (struct alt_CGameEntityDestroyEvent*)new alt::CEvent((alt::CEvent::Type)_type);
}

CAPI alt_CEvent_Type alt_CGameEntityDestroyEvent_GetType(struct alt_CGameEntityDestroyEvent* _instance)
{
    return (alt_CEvent_Type)static_cast<alt::CEvent *>((alt::CGameEntityDestroyEvent *)_instance)->GetType();
}

CAPI _Bool alt_CGameEntityDestroyEvent_WasCancelled(struct alt_CGameEntityDestroyEvent* _instance)
{
    return (_Bool)static_cast<alt::CEvent *>((alt::CGameEntityDestroyEvent *)_instance)->WasCancelled();
}

CAPI void alt_CGameEntityDestroyEvent_Cancel(struct alt_CGameEntityDestroyEvent* _instance)
{
    static_cast<alt::CEvent *>((alt::CGameEntityDestroyEvent *)_instance)->Cancel();
}

CAPI struct alt_CGameEntityDestroyEvent* alt_CGameEntityDestroyEvent_Create_1(struct alt_CEvent* _p0)
{
    return (struct alt_CGameEntityDestroyEvent*)new alt::CEvent(*(const alt::CEvent *)_p0);
}

CAPI void alt_CGameEntityDestroyEvent_Assign_constCEventRef(struct alt_CGameEntityDestroyEvent* _instance, struct alt_CEvent* _p0)
{
    static_cast<alt::CEvent *>((alt::CGameEntityDestroyEvent *)_instance)->operator=(*(const alt::CEvent *)_p0);
}

CAPI struct alt_CGameEntityDestroyEvent* alt_CGameEntityDestroyEvent_Create_2(struct alt_CEvent* _p0)
{
    return (struct alt_CGameEntityDestroyEvent*)new alt::CEvent(*(alt::CEvent *)_p0);
}

CAPI void alt_CGameEntityDestroyEvent_Assign_CEventRefRef(struct alt_CGameEntityDestroyEvent* _instance, struct alt_CEvent* _p0)
{
    static_cast<alt::CEvent *>((alt::CGameEntityDestroyEvent *)_instance)->operator=(*(alt::CEvent *)_p0);
}

CAPI struct alt_CGameEntityDestroyEvent* alt_CGameEntityDestroyEvent_Create_3(struct alt_RefBase_RefStore_IEntity* _target)
{
    return (struct alt_CGameEntityDestroyEvent*)new alt::CGameEntityDestroyEvent(*(Ref<alt::IEntity>*)_target);
}

CAPI struct alt_RefBase_RefStore_IEntity* alt_CGameEntityDestroyEvent_GetTarget(struct alt_CGameEntityDestroyEvent* _instance)
{
    return (alt_RefBase_RefStore_IEntity*)new class alt::RefBase<class alt::RefStore<class alt::IEntity> >(((alt::CGameEntityDestroyEvent *)_instance)->GetTarget());
}

CAPI struct alt_CGameEntityDestroyEvent* alt_CGameEntityDestroyEvent_Create_4(struct alt_CGameEntityDestroyEvent* _p0)
{
    return (struct alt_CGameEntityDestroyEvent*)new alt::CGameEntityDestroyEvent(*(const alt::CGameEntityDestroyEvent *)_p0);
}

CAPI struct alt_CGameEntityDestroyEvent* alt_CGameEntityDestroyEvent_Create_5(struct alt_CGameEntityDestroyEvent* _p0)
{
    return (struct alt_CGameEntityDestroyEvent*)new alt::CGameEntityDestroyEvent(*(alt::CGameEntityDestroyEvent *)_p0);
}

CAPI void alt_CGameEntityDestroyEvent_Assign_constCGameEntityDestroyEventRef(struct alt_CGameEntityDestroyEvent* _instance, struct alt_CGameEntityDestroyEvent* _p0)
{
    ((alt::CGameEntityDestroyEvent *)_instance)->operator=(*(const alt::CGameEntityDestroyEvent *)_p0);
}

CAPI void alt_CGameEntityDestroyEvent_Assign_CGameEntityDestroyEventRefRef(struct alt_CGameEntityDestroyEvent* _instance, struct alt_CGameEntityDestroyEvent* _p0)
{
    ((alt::CGameEntityDestroyEvent *)_instance)->operator=(*(alt::CGameEntityDestroyEvent *)_p0);
}

CAPI void alt_CKeyboardEvent_free(struct alt_CKeyboardEvent* ptr)
{
    delete (class alt::CKeyboardEvent *)ptr;
}

CAPI struct alt_CKeyboardEvent* alt_CEvent_to_alt_CKeyboardEvent(struct alt_CEvent* from)
{
    return (alt_CKeyboardEvent*)static_cast<alt::CKeyboardEvent*>((alt::CEvent*)from);
}

CAPI struct alt_CEvent* alt_CKeyboardEvent_to_alt_CEvent(struct alt_CKeyboardEvent* from)
{
    return (alt_CEvent*)static_cast<alt::CEvent*>((alt::CKeyboardEvent*)from);
}

CAPI struct alt_CKeyboardEvent* alt_CKeyboardEvent_Create(alt_CEvent_Type _type)
{
    return (struct alt_CKeyboardEvent*)new alt::CEvent((alt::CEvent::Type)_type);
}

CAPI alt_CEvent_Type alt_CKeyboardEvent_GetType(struct alt_CKeyboardEvent* _instance)
{
    return (alt_CEvent_Type)static_cast<alt::CEvent *>((alt::CKeyboardEvent *)_instance)->GetType();
}

CAPI _Bool alt_CKeyboardEvent_WasCancelled(struct alt_CKeyboardEvent* _instance)
{
    return (_Bool)static_cast<alt::CEvent *>((alt::CKeyboardEvent *)_instance)->WasCancelled();
}

CAPI void alt_CKeyboardEvent_Cancel(struct alt_CKeyboardEvent* _instance)
{
    static_cast<alt::CEvent *>((alt::CKeyboardEvent *)_instance)->Cancel();
}

CAPI struct alt_CKeyboardEvent* alt_CKeyboardEvent_Create_1(struct alt_CEvent* _p0)
{
    return (struct alt_CKeyboardEvent*)new alt::CEvent(*(const alt::CEvent *)_p0);
}

CAPI void alt_CKeyboardEvent_Assign_constCEventRef(struct alt_CKeyboardEvent* _instance, struct alt_CEvent* _p0)
{
    static_cast<alt::CEvent *>((alt::CKeyboardEvent *)_instance)->operator=(*(const alt::CEvent *)_p0);
}

CAPI struct alt_CKeyboardEvent* alt_CKeyboardEvent_Create_2(struct alt_CEvent* _p0)
{
    return (struct alt_CKeyboardEvent*)new alt::CEvent(*(alt::CEvent *)_p0);
}

CAPI void alt_CKeyboardEvent_Assign_CEventRefRef(struct alt_CKeyboardEvent* _instance, struct alt_CEvent* _p0)
{
    static_cast<alt::CEvent *>((alt::CKeyboardEvent *)_instance)->operator=(*(alt::CEvent *)_p0);
}

CAPI struct alt_CKeyboardEvent* alt_CKeyboardEvent_Create_3(unsigned int _keyCode, alt_CKeyboardEvent_KeyState state)
{
    return (struct alt_CKeyboardEvent*)new alt::CKeyboardEvent((uint32_t)_keyCode, (alt::CKeyboardEvent::KeyState)state);
}

CAPI unsigned int alt_CKeyboardEvent_GetKeyCode(struct alt_CKeyboardEvent* _instance)
{
    return (unsigned int)((alt::CKeyboardEvent *)_instance)->GetKeyCode();
}

CAPI alt_CKeyboardEvent_KeyState alt_CKeyboardEvent_GetKeyState(struct alt_CKeyboardEvent* _instance)
{
    return (alt_CKeyboardEvent_KeyState)((alt::CKeyboardEvent *)_instance)->GetKeyState();
}

CAPI struct alt_CKeyboardEvent* alt_CKeyboardEvent_Create_4(struct alt_CKeyboardEvent* _p0)
{
    return (struct alt_CKeyboardEvent*)new alt::CKeyboardEvent(*(const alt::CKeyboardEvent *)_p0);
}

CAPI void alt_CKeyboardEvent_Assign_constCKeyboardEventRef(struct alt_CKeyboardEvent* _instance, struct alt_CKeyboardEvent* _p0)
{
    ((alt::CKeyboardEvent *)_instance)->operator=(*(const alt::CKeyboardEvent *)_p0);
}

CAPI void alt_CWebViewEvent_free(struct alt_CWebViewEvent* ptr)
{
    delete (class alt::CWebViewEvent *)ptr;
}

CAPI struct alt_CWebViewEvent* alt_CEvent_to_alt_CWebViewEvent(struct alt_CEvent* from)
{
    return (alt_CWebViewEvent*)static_cast<alt::CWebViewEvent*>((alt::CEvent*)from);
}

CAPI struct alt_CEvent* alt_CWebViewEvent_to_alt_CEvent(struct alt_CWebViewEvent* from)
{
    return (alt_CEvent*)static_cast<alt::CEvent*>((alt::CWebViewEvent*)from);
}

CAPI struct alt_CWebViewEvent* alt_CWebViewEvent_Create(alt_CEvent_Type _type)
{
    return (struct alt_CWebViewEvent*)new alt::CEvent((alt::CEvent::Type)_type);
}

CAPI alt_CEvent_Type alt_CWebViewEvent_GetType(struct alt_CWebViewEvent* _instance)
{
    return (alt_CEvent_Type)static_cast<alt::CEvent *>((alt::CWebViewEvent *)_instance)->GetType();
}

CAPI _Bool alt_CWebViewEvent_WasCancelled(struct alt_CWebViewEvent* _instance)
{
    return (_Bool)static_cast<alt::CEvent *>((alt::CWebViewEvent *)_instance)->WasCancelled();
}

CAPI void alt_CWebViewEvent_Cancel(struct alt_CWebViewEvent* _instance)
{
    static_cast<alt::CEvent *>((alt::CWebViewEvent *)_instance)->Cancel();
}

CAPI struct alt_CWebViewEvent* alt_CWebViewEvent_Create_1(struct alt_CEvent* _p0)
{
    return (struct alt_CWebViewEvent*)new alt::CEvent(*(const alt::CEvent *)_p0);
}

CAPI void alt_CWebViewEvent_Assign_constCEventRef(struct alt_CWebViewEvent* _instance, struct alt_CEvent* _p0)
{
    static_cast<alt::CEvent *>((alt::CWebViewEvent *)_instance)->operator=(*(const alt::CEvent *)_p0);
}

CAPI struct alt_CWebViewEvent* alt_CWebViewEvent_Create_2(struct alt_CEvent* _p0)
{
    return (struct alt_CWebViewEvent*)new alt::CEvent(*(alt::CEvent *)_p0);
}

CAPI void alt_CWebViewEvent_Assign_CEventRefRef(struct alt_CWebViewEvent* _instance, struct alt_CEvent* _p0)
{
    static_cast<alt::CEvent *>((alt::CWebViewEvent *)_instance)->operator=(*(alt::CEvent *)_p0);
}

CAPI struct alt_CWebViewEvent* alt_CWebViewEvent_Create_3(struct alt_CWebView* _target, struct alt_StringView* _name, struct alt_Array_RefBase_RefStore_constIMValue* _args)
{
    return (struct alt_CWebViewEvent*)new alt::CWebViewEvent((alt::CWebView *)_target, *(alt::StringView*)_name, *(const alt::MValueArgs *)_args);
}

CAPI struct alt_CWebView* alt_CWebViewEvent_GetTarget(struct alt_CWebViewEvent* _instance)
{
    return (alt_CWebView*)((alt::CWebViewEvent *)_instance)->GetTarget();
}

CAPI struct alt_StringView* alt_CWebViewEvent_GetName(struct alt_CWebViewEvent* _instance)
{
    return (alt_StringView*)new class alt::StringView(((alt::CWebViewEvent *)_instance)->GetName());
}

CAPI struct alt_Array_RefBase_RefStore_constIMValue* alt_CWebViewEvent_GetArgs(struct alt_CWebViewEvent* _instance)
{
    return (alt_Array_RefBase_RefStore_constIMValue*)&((alt::CWebViewEvent *)_instance)->GetArgs();
}

CAPI struct alt_CWebViewEvent* alt_CWebViewEvent_Create_4(struct alt_CWebViewEvent* _p0)
{
    return (struct alt_CWebViewEvent*)new alt::CWebViewEvent(*(const alt::CWebViewEvent *)_p0);
}

CAPI struct alt_CWebViewEvent* alt_CWebViewEvent_Create_5(struct alt_CWebViewEvent* _p0)
{
    return (struct alt_CWebViewEvent*)new alt::CWebViewEvent(*(alt::CWebViewEvent *)_p0);
}

CAPI void alt_CWebViewEvent_Assign_constCWebViewEventRef(struct alt_CWebViewEvent* _instance, struct alt_CWebViewEvent* _p0)
{
    ((alt::CWebViewEvent *)_instance)->operator=(*(const alt::CWebViewEvent *)_p0);
}

CAPI void alt_CWebViewEvent_Assign_CWebViewEventRefRef(struct alt_CWebViewEvent* _instance, struct alt_CWebViewEvent* _p0)
{
    ((alt::CWebViewEvent *)_instance)->operator=(*(alt::CWebViewEvent *)_p0);
}

CAPI void alt_IPackage_free(struct alt_IPackage* ptr)
{
    delete (class alt::IPackage *)ptr;
}

CAPI alt_IPackage_Mode alt_IPackage_GetMode(struct alt_IPackage* _instance)
{
    return (alt_IPackage_Mode)((alt::IPackage *)_instance)->GetMode();
}

CAPI _Bool alt_IPackage_FileExists(struct alt_IPackage* _instance, struct alt_StringView* path)
{
    return (_Bool)((alt::IPackage *)_instance)->FileExists(*(alt::StringView*)path);
}

CAPI struct alt_IPackage_File* alt_IPackage_OpenFile(struct alt_IPackage* _instance, struct alt_StringView* path)
{
    return (alt_IPackage_File*)((alt::IPackage *)_instance)->OpenFile(*(alt::StringView*)path);
}

CAPI void alt_IPackage_CloseFile(struct alt_IPackage* _instance, struct alt_IPackage_File* file)
{
    ((alt::IPackage *)_instance)->CloseFile((alt::IPackage::File *)file);
}

CAPI unsigned long long alt_IPackage_GetFileSize(struct alt_IPackage* _instance, struct alt_IPackage_File* file)
{
    return (unsigned long long)((alt::IPackage *)_instance)->GetFileSize((alt::IPackage::File *)file);
}

CAPI void alt_IPackage_SeekFile(struct alt_IPackage* _instance, struct alt_IPackage_File* file, unsigned long long offset, alt_IPackage_SeekOrigin origin)
{
    ((alt::IPackage *)_instance)->SeekFile((alt::IPackage::File *)file, (uint64_t)offset, (alt::IPackage::SeekOrigin)origin);
}

CAPI unsigned long long alt_IPackage_TellFile(struct alt_IPackage* _instance, struct alt_IPackage_File* file)
{
    return (unsigned long long)((alt::IPackage *)_instance)->TellFile((alt::IPackage::File *)file);
}

CAPI unsigned long long alt_IPackage_ReadFile(struct alt_IPackage* _instance, struct alt_IPackage_File* file, void* buffer, unsigned long long size)
{
    return (unsigned long long)((alt::IPackage *)_instance)->ReadFile((alt::IPackage::File *)file, (void *)buffer, (uint64_t)size);
}

CAPI unsigned long long alt_IPackage_WriteFile(struct alt_IPackage* _instance, struct alt_IPackage_File* file, void* buffer, unsigned long long size)
{
    return (unsigned long long)((alt::IPackage *)_instance)->WriteFile((alt::IPackage::File *)file, (void *)buffer, (uint64_t)size);
}

CAPI void alt_IPackage_File_free(struct alt_IPackage_File* ptr)
{
    delete (class alt::IPackage::File *)ptr;
}

CAPI void alt_IPackage_File_Assign_constIPackage_FileRef(struct alt_IPackage_File* _instance, struct alt_IPackage_File* _p0)
{
    ((alt::IPackage::File *)_instance)->operator=(*(const alt::IPackage::File *)_p0);
}

CAPI void alt_IScriptRuntime_free(struct alt_IScriptRuntime* ptr)
{
    delete (class alt::IScriptRuntime *)ptr;
}

CAPI struct alt_IResource_Impl* alt_IScriptRuntime_CreateImpl(struct alt_IScriptRuntime* _instance, struct alt_IResource* resource)
{
    return (alt_IResource_Impl*)((alt::IScriptRuntime *)_instance)->CreateImpl((alt::IResource *)resource);
}

CAPI void alt_IScriptRuntime_DestroyImpl(struct alt_IScriptRuntime* _instance, struct alt_IResource_Impl* impl)
{
    ((alt::IScriptRuntime *)_instance)->DestroyImpl((IResource::Impl *)impl);
}

CAPI void alt_IScriptRuntime_OnTick(struct alt_IScriptRuntime* _instance)
{
    ((alt::IScriptRuntime *)_instance)->OnTick();
}

CAPI void alt_IScriptRuntime_OnDispose(struct alt_IScriptRuntime* _instance)
{
    ((alt::IScriptRuntime *)_instance)->OnDispose();
}

CAPI void alt_IScriptRuntime_Assign_constIScriptRuntimeRef(struct alt_IScriptRuntime* _instance, struct alt_IScriptRuntime* _p0)
{
    ((alt::IScriptRuntime *)_instance)->operator=(*(const alt::IScriptRuntime *)_p0);
}

CAPI void alt_DiscordOAuth2Token_free(struct alt_DiscordOAuth2Token* ptr)
{
    delete (struct alt::DiscordOAuth2Token *)ptr;
}

CAPI struct alt_DiscordOAuth2Token* alt_DiscordOAuth2Token_Create(struct alt_DiscordOAuth2Token* _p0)
{
    return (struct alt_DiscordOAuth2Token*)new alt::DiscordOAuth2Token(*(const alt::DiscordOAuth2Token *)_p0);
}

CAPI struct alt_DiscordOAuth2Token* alt_DiscordOAuth2Token_Create_1(struct alt_DiscordOAuth2Token* _p0)
{
    return (struct alt_DiscordOAuth2Token*)new alt::DiscordOAuth2Token(*(alt::DiscordOAuth2Token *)_p0);
}

CAPI void alt_DiscordOAuth2Token_Assign_DiscordOAuth2TokenRefRef(struct alt_DiscordOAuth2Token* _instance, struct alt_DiscordOAuth2Token* _p0)
{
    ((alt::DiscordOAuth2Token *)_instance)->operator=(*(alt::DiscordOAuth2Token *)_p0);
}

CAPI void alt_ICore_LogInfo(struct alt_ICore* _instance, struct alt_StringView* str)
{
    ((alt::ICore *)_instance)->LogInfo(*(alt::StringView*)str);
}

CAPI void alt_ICore_LogDebug(struct alt_ICore* _instance, struct alt_StringView* str)
{
    ((alt::ICore *)_instance)->LogDebug(*(alt::StringView*)str);
}

CAPI void alt_ICore_LogWarning(struct alt_ICore* _instance, struct alt_StringView* str)
{
    ((alt::ICore *)_instance)->LogWarning(*(alt::StringView*)str);
}

CAPI void alt_ICore_LogError(struct alt_ICore* _instance, struct alt_StringView* str)
{
    ((alt::ICore *)_instance)->LogError(*(alt::StringView*)str);
}

CAPI void alt_ICore_LogColored(struct alt_ICore* _instance, struct alt_StringView* str)
{
    ((alt::ICore *)_instance)->LogColored(*(alt::StringView*)str);
}

CAPI struct alt_RefBase_RefStore_IMValueNil* alt_ICore_CreateMValueNil(struct alt_ICore* _instance)
{
    return (alt_RefBase_RefStore_IMValueNil*)new class alt::RefBase<class alt::RefStore<class alt::IMValueNil> >(((alt::ICore *)_instance)->CreateMValueNil());
}

CAPI struct alt_RefBase_RefStore_IMValueBool* alt_ICore_CreateMValueBool(struct alt_ICore* _instance, _Bool val)
{
    return (alt_RefBase_RefStore_IMValueBool*)new class alt::RefBase<class alt::RefStore<class alt::IMValueBool> >(((alt::ICore *)_instance)->CreateMValueBool((_Bool)val));
}

CAPI struct alt_RefBase_RefStore_IMValueInt* alt_ICore_CreateMValueInt(struct alt_ICore* _instance, long long val)
{
    return (alt_RefBase_RefStore_IMValueInt*)new class alt::RefBase<class alt::RefStore<class alt::IMValueInt> >(((alt::ICore *)_instance)->CreateMValueInt((int64_t)val));
}

CAPI struct alt_RefBase_RefStore_IMValueUInt* alt_ICore_CreateMValueUInt(struct alt_ICore* _instance, unsigned long long val)
{
    return (alt_RefBase_RefStore_IMValueUInt*)new class alt::RefBase<class alt::RefStore<class alt::IMValueUInt> >(((alt::ICore *)_instance)->CreateMValueUInt((uint64_t)val));
}

CAPI struct alt_RefBase_RefStore_IMValueDouble* alt_ICore_CreateMValueDouble(struct alt_ICore* _instance, double val)
{
    return (alt_RefBase_RefStore_IMValueDouble*)new class alt::RefBase<class alt::RefStore<class alt::IMValueDouble> >(((alt::ICore *)_instance)->CreateMValueDouble((double)val));
}

CAPI struct alt_RefBase_RefStore_IMValueString* alt_ICore_CreateMValueString(struct alt_ICore* _instance, struct alt_String* val)
{
    return (alt_RefBase_RefStore_IMValueString*)new class alt::RefBase<class alt::RefStore<class alt::IMValueString> >(((alt::ICore *)_instance)->CreateMValueString(*(alt::String*)val));
}

CAPI struct alt_RefBase_RefStore_IMValueList* alt_ICore_CreateMValueList(struct alt_ICore* _instance, unsigned long long size)
{
    return (alt_RefBase_RefStore_IMValueList*)new class alt::RefBase<class alt::RefStore<class alt::IMValueList> >(((alt::ICore *)_instance)->CreateMValueList((alt::Size)size));
}

CAPI struct alt_RefBase_RefStore_IMValueDict* alt_ICore_CreateMValueDict(struct alt_ICore* _instance)
{
    return (alt_RefBase_RefStore_IMValueDict*)new class alt::RefBase<class alt::RefStore<class alt::IMValueDict> >(((alt::ICore *)_instance)->CreateMValueDict());
}

CAPI struct alt_RefBase_RefStore_IMValueBaseObject* alt_ICore_CreateMValueBaseObject(struct alt_ICore* _instance, struct alt_RefBase_RefStore_IBaseObject* val)
{
    return (alt_RefBase_RefStore_IMValueBaseObject*)new class alt::RefBase<class alt::RefStore<class alt::IMValueBaseObject> >(((alt::ICore *)_instance)->CreateMValueBaseObject(*(Ref<alt::IBaseObject>*)val));
}

CAPI struct alt_RefBase_RefStore_IMValueFunction* alt_ICore_CreateMValueFunction(struct alt_ICore* _instance, struct alt_IMValueFunction_Impl* impl)
{
    return (alt_RefBase_RefStore_IMValueFunction*)new class alt::RefBase<class alt::RefStore<class alt::IMValueFunction> >(((alt::ICore *)_instance)->CreateMValueFunction((IMValueFunction::Impl *)impl));
}

CAPI unsigned int alt_ICore_Hash(struct alt_ICore* _instance, struct alt_StringView* str)
{
    return (unsigned int)((alt::ICore *)_instance)->Hash(*(alt::StringView*)str);
}

CAPI _Bool alt_ICore_RegisterScriptRuntime(struct alt_ICore* _instance, struct alt_StringView* resourceType, struct alt_IScriptRuntime* runtime)
{
    return (_Bool)((alt::ICore *)_instance)->RegisterScriptRuntime(*(alt::StringView*)resourceType, (alt::IScriptRuntime *)runtime);
}

CAPI _Bool alt_ICore_FileExists(struct alt_ICore* _instance, struct alt_StringView* path)
{
    return (_Bool)((alt::ICore *)_instance)->FileExists(*(alt::StringView*)path);
}

CAPI struct alt_String* alt_ICore_FileRead(struct alt_ICore* _instance, struct alt_StringView* path)
{
    return (alt_String*)new class alt::String(((alt::ICore *)_instance)->FileRead(*(alt::StringView*)path));
}

CAPI struct alt_IResource* alt_ICore_GetResource(struct alt_ICore* _instance, struct alt_StringView* name)
{
    return (alt_IResource*)((alt::ICore *)_instance)->GetResource(*(alt::StringView*)name);
}

CAPI struct alt_RefBase_RefStore_IEntity* alt_ICore_GetEntityByID(struct alt_ICore* _instance, unsigned short id)
{
    return (alt_RefBase_RefStore_IEntity*)new class alt::RefBase<class alt::RefStore<class alt::IEntity> >(((alt::ICore *)_instance)->GetEntityByID((uint16_t)id));
}

CAPI struct alt_Array_RefBase_RefStore_IEntity* alt_ICore_GetEntities(struct alt_ICore* _instance)
{
    return (alt_Array_RefBase_RefStore_IEntity*)new class alt::Array<class alt::RefBase<class alt::RefStore<class alt::IEntity> > >(((alt::ICore *)_instance)->GetEntities());
}

CAPI struct alt_Array_RefBase_RefStore_IPlayer* alt_ICore_GetPlayers(struct alt_ICore* _instance)
{
    return (alt_Array_RefBase_RefStore_IPlayer*)new class alt::Array<class alt::RefBase<class alt::RefStore<class alt::IPlayer> > >(((alt::ICore *)_instance)->GetPlayers());
}

CAPI struct alt_Array_RefBase_RefStore_IVehicle* alt_ICore_GetVehicles(struct alt_ICore* _instance)
{
    return (alt_Array_RefBase_RefStore_IVehicle*)new class alt::Array<class alt::RefBase<class alt::RefStore<class alt::IVehicle> > >(((alt::ICore *)_instance)->GetVehicles());
}

CAPI void alt_ICore_TriggerLocalEvent(struct alt_ICore* _instance, struct alt_StringView* ev, struct alt_Array_RefBase_RefStore_constIMValue* args)
{
    ((alt::ICore *)_instance)->TriggerLocalEvent(*(alt::StringView*)ev, *(alt::MValueArgs*)args);
}

CAPI struct alt_ICore* alt_ICore_Instance()
{
    return (alt_ICore*)&alt::ICore::Instance();
}

CAPI void alt_ICore_SetInstance(struct alt_ICore* server)
{
    alt::ICore::SetInstance((alt::ICore *)server);
}

CAPI void alt_ICore_Assign_constICoreRef(struct alt_ICore* _instance, struct alt_ICore* _p0)
{
    ((alt::ICore *)_instance)->operator=(*(const alt::ICore *)_p0);
}



#include "altv-capi-extra.cpp"
