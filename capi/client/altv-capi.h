
/**
 * CAPI API Header for C
 * THIS HEADER IS AUTOGENERATED
 * Tue Jul 16 07:51:35 2019

 * 
 * Include header for alt:V C API
 */

#ifndef _CAPI_H_
#define _CAPI_H_

#include <stdbool.h>
#define CAPI_EXTERN

#ifdef _WIN32
#define CAPI_EXPORT CAPI_EXTERN __declspec(dllexport)
#define CAPI_IMPORT CAPI_EXTERN __declspec(dllimport)
#else
#define CAPI_EXPORT CAPI_EXTERN
#define CAPI_IMPORT CAPI_EXTERN
#endif

#ifndef CAPI
#ifdef CAPI_DLL
#define CAPI CAPI_IMPORT
#else
#define CAPI CAPI_EXTERN
#endif // CAPI_DLL
#endif // CAPI

// Typedef
// <invalid loc>
// __int128_t
// Canonical decl: __int128_t
// using __int128_t = __int128
// Invalid loc

// Typedef
// <invalid loc>
// __uint128_t
// Canonical decl: __uint128_t
// using __uint128_t = unsigned __int128
// Invalid loc

// Typedef
// <invalid loc>
// __NSConstantString
// Canonical decl: __NSConstantString
// using __NSConstantString = struct __NSConstantString_tag
// Invalid loc

// Typedef
// <invalid loc>
// size_t
// Canonical decl: size_t
// tdtd
// using size_t = unsigned long long
// Invalid loc

// Typedef
// <invalid loc>
// __builtin_ms_va_list
// Canonical decl: __builtin_ms_va_list
// using __builtin_ms_va_list = char *
// Invalid loc

// Typedef
// <invalid loc>
// __builtin_va_list
// Canonical decl: __builtin_va_list
// tdtd
// using __builtin_va_list = char *
// Invalid loc

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:17:11
// VectorLayout<T, W>
// isTemplated || isTemplateDecl.

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:17:11
// VectorLayout<T, W>
// isTemplated || isTemplateDecl.

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:17:11
// class alt::VectorLayout<float, 4>
    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:54:17
    // alt::VectorLayout<float, 4>::Element [4] elements

typedef struct alt_VectorLayoutfloat4 {
    float elements[4];
} alt_VectorLayoutfloat4;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:17:11
// class alt::VectorLayout<float, 4>
// the record and its methods are not publicly accessible

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:20:15
// alt::VectorLayout<float, 4>::Element
// Canonical decl: alt::VectorLayout<float, 4>::Element
// tdtd
// using alt::VectorLayout<float, 4>::Element = float
// cpptype float
// fundamental
typedef float alt_VectorLayoutfloat4_Element;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:58:11
// Vector<T, W, _Layout>
// isTemplated || isTemplateDecl.

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:58:11
// Vector<T, W, _Layout>
// isTemplated || isTemplateDecl.

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:58:11
// class alt::Vector<float, 4, class alt::VectorLayout<float, 4> >
// derives from class alt::VectorLayout<float, 4>
    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:54:17
    // alt::VectorLayout<float, 4>::Element [4] elements

typedef struct alt_Vectorfloat4VectorLayoutfloat4 {
    float elements[4];
} alt_Vectorfloat4VectorLayoutfloat4;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:58:11
// class alt::Vector<float, 4, class alt::VectorLayout<float, 4> >
// the record and its methods are not publicly accessible

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:61:15
// alt::Vector<float, 4, alt::VectorLayout<float, 4> >::Layout
// Canonical decl: alt::Vector<float, 4, alt::VectorLayout<float, 4> >::Layout
// tdtd
// using alt::Vector<float, 4, alt::VectorLayout<float, 4> >::Layout = class alt::VectorLayout<float, 4>
// cpptype class alt::VectorLayout<float, 4>
typedef struct alt_VectorLayoutfloat4 alt_Vectorfloat4VectorLayoutfloat4_Layout;

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:62:15
// alt::Vector<float, 4, alt::VectorLayout<float, 4> >::Element
// Canonical decl: alt::Vector<float, 4, alt::VectorLayout<float, 4> >::Element
// tdtd
// using alt::Vector<float, 4, alt::VectorLayout<float, 4> >::Element = float
// cpptype float
// fundamental
typedef float alt_Vectorfloat4VectorLayoutfloat4_Element;

// Template Alias
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:106:23
// alt::Vector2 = alt::Vector2

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:106:29
// alt::Vector2
// Canonical decl: alt::Vector2
// Describes template
// using alt::Vector2 = Vector<type-parameter-0-0, 2, VectorLayout<type-parameter-0-0, 2> >
// cpptype Vector<type-parameter-0-0, 2, VectorLayout<type-parameter-0-0, 2> >
// Could not process type
// bad typedef

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:107:11
// alt::Vector2f
// Canonical decl: alt::Vector2f
// using alt::Vector2f = class alt::Vector<float, 2, class alt::VectorLayout<float, 2> >
// cpptype class alt::Vector<float, 2, class alt::VectorLayout<float, 2> >
typedef struct alt_Vectorfloat2VectorLayoutfloat2 alt_Vector2f;

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:108:11
// alt::Vector2i
// Canonical decl: alt::Vector2i
// using alt::Vector2i = class alt::Vector<int, 2, class alt::VectorLayout<int, 2> >
// cpptype class alt::Vector<int, 2, class alt::VectorLayout<int, 2> >
typedef struct alt_Vectorint2VectorLayoutint2 alt_Vector2i;

// Template Alias
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:110:23
// alt::Vector3 = alt::Vector3

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:110:29
// alt::Vector3
// Canonical decl: alt::Vector3
// Describes template
// using alt::Vector3 = Vector<type-parameter-0-0, 3, VectorLayout<type-parameter-0-0, 3> >
// cpptype Vector<type-parameter-0-0, 3, VectorLayout<type-parameter-0-0, 3> >
// Could not process type
// bad typedef

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:111:11
// alt::Vector3f
// Canonical decl: alt::Vector3f
// using alt::Vector3f = class alt::Vector<float, 3, class alt::VectorLayout<float, 3> >
// cpptype class alt::Vector<float, 3, class alt::VectorLayout<float, 3> >
typedef struct alt_Vectorfloat3VectorLayoutfloat3 alt_Vector3f;

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:112:11
// alt::Vector3i
// Canonical decl: alt::Vector3i
// using alt::Vector3i = class alt::Vector<int, 3, class alt::VectorLayout<int, 3> >
// cpptype class alt::Vector<int, 3, class alt::VectorLayout<int, 3> >
typedef struct alt_Vectorint3VectorLayoutint3 alt_Vector3i;

// Template Alias
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:114:23
// alt::Vector4 = alt::Vector4

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:114:29
// alt::Vector4
// Canonical decl: alt::Vector4
// Describes template
// using alt::Vector4 = Vector<type-parameter-0-0, 4, VectorLayout<type-parameter-0-0, 4> >
// cpptype Vector<type-parameter-0-0, 4, VectorLayout<type-parameter-0-0, 4> >
// Could not process type
// bad typedef

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:115:11
// alt::Vector4f
// Canonical decl: alt::Vector4f
// tdtd
// using alt::Vector4f = class alt::Vector<float, 4, class alt::VectorLayout<float, 4> >
// cpptype class alt::Vector<float, 4, class alt::VectorLayout<float, 4> >
typedef struct alt_Vectorfloat4VectorLayoutfloat4 alt_Vector4f;

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:116:11
// alt::Vector4i
// Canonical decl: alt::Vector4i
// using alt::Vector4i = class alt::Vector<int, 4, class alt::VectorLayout<int, 4> >
// cpptype class alt::Vector<int, 4, class alt::VectorLayout<int, 4> >
typedef struct alt_Vectorint4VectorLayoutint4 alt_Vector4i;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:119:11
// MatrixLayout<T, W, H>
// isTemplated || isTemplateDecl.

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:119:11
// MatrixLayout<T, W, H>
// isTemplated || isTemplateDecl.

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:122:15
// alt::MatrixLayout::Row
// Canonical decl: alt::MatrixLayout::Row
// tdtd
// tdtd instantiation dependent
// using alt::MatrixLayout::Row = Vector<type-parameter-0-0, W, VectorLayout<type-parameter-0-0, W> >
// cpptype Vector<type-parameter-0-0, W, VectorLayout<type-parameter-0-0, W> >
// Could not process type
// bad typedef

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:123:15
// alt::MatrixLayout::Element
// Canonical decl: alt::MatrixLayout::Element
// tdtd
// tdtd instantiation dependent
// using alt::MatrixLayout::Element = typename Vector<type-parameter-0-0, W, VectorLayout<type-parameter-0-0, W> >::Element
// cpptype typename Vector<type-parameter-0-0, W, VectorLayout<type-parameter-0-0, W> >::Element
// Could not process type
// bad typedef

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:124:15
// alt::MatrixLayout::Transposed
// Canonical decl: alt::MatrixLayout::Transposed
// using alt::MatrixLayout::Transposed = MatrixLayout<type-parameter-0-0, H, W>
// cpptype MatrixLayout<type-parameter-0-0, H, W>
// Could not process type
// bad typedef

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:174:11
// Matrix<T, W, H, _Layout>
// isTemplated || isTemplateDecl.

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:174:11
// Matrix<T, W, H, _Layout>
// isTemplated || isTemplateDecl.

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:178:15
// alt::Matrix::Row
// Canonical decl: alt::Matrix::Row
// tdtd
// tdtd instantiation dependent
// using alt::Matrix::Row = typename type-parameter-0-3::Row
// cpptype typename type-parameter-0-3::Row
// Could not process type
// bad typedef

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:179:15
// alt::Matrix::Element
// Canonical decl: alt::Matrix::Element
// tdtd
// tdtd instantiation dependent
// using alt::Matrix::Element = typename type-parameter-0-3::Element
// cpptype typename type-parameter-0-3::Element
// Could not process type
// bad typedef

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:180:15
// alt::Matrix::Transposed
// Canonical decl: alt::Matrix::Transposed
// tdtd
// tdtd instantiation dependent
// using alt::Matrix::Transposed = Matrix<type-parameter-0-0, H, W, typename type-parameter-0-3::Transposed>
// cpptype Matrix<type-parameter-0-0, H, W, typename type-parameter-0-3::Transposed>
// Could not process type
// bad typedef

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:210:11
// alt::DXMatrix
// Canonical decl: alt::DXMatrix
// using alt::DXMatrix = class alt::Matrix<float, 4, 4, class alt::MatrixLayout<float, 4, 4> >
// cpptype class alt::Matrix<float, 4, 4, class alt::MatrixLayout<float, 4, 4> >
typedef struct alt_Matrixfloat44MatrixLayoutfloat44 alt_DXMatrix;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:212:11
// class alt::PointLayout
    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:237:15
    // float x

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:237:18
    // float y

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:237:21
    // float z

typedef struct alt_PointLayout {
    float x;
    float y;
    float z;
} alt_PointLayout;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:212:11
// class alt::PointLayout
// the record and its methods are not publicly accessible

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:215:15
// alt::PointLayout::Element
// Canonical decl: alt::PointLayout::Element
// using alt::PointLayout::Element = float
// cpptype float
// fundamental
typedef float alt_PointLayout_Element;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:240:11
// class alt::PointPaddedLayout
// derives from class alt::PointLayout
    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:237:15
    // float x

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:237:18
    // float y

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:237:21
    // float z

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:251:15
    // float pad

typedef struct alt_PointPaddedLayout {
    float x;
    float y;
    float z;
    float pad;
} alt_PointPaddedLayout;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:240:11
// class alt::PointPaddedLayout
// the record and its methods are not publicly accessible

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:254:11
// alt::Point
// Canonical decl: alt::Point
// tdtd
// tdtd incomplete type
// using alt::Point = class alt::Vector<float, 3, class alt::PointLayout>
// cpptype class alt::Vector<float, 3, class alt::PointLayout>
typedef struct alt_Vectorfloat3PointLayout alt_Point;

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:255:11
// alt::PointPadded
// Canonical decl: alt::PointPadded
// tdtd
// tdtd incomplete type
// using alt::PointPadded = class alt::Vector<float, 3, class alt::PointPaddedLayout>
// cpptype class alt::Vector<float, 3, class alt::PointPaddedLayout>
typedef struct alt_Vectorfloat3PointPaddedLayout alt_PointPadded;

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:257:11
// alt::Position
// Canonical decl: alt::Position
// tdtd
// tdtd incomplete type
// using alt::Position = class alt::Vector<float, 3, class alt::PointLayout>
// cpptype class alt::Vector<float, 3, class alt::PointLayout>
typedef struct alt_Vectorfloat3PointLayout alt_Position;

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:258:11
// alt::PositionPadded
// Canonical decl: alt::PositionPadded
// using alt::PositionPadded = class alt::Vector<float, 3, class alt::PointPaddedLayout>
// cpptype class alt::Vector<float, 3, class alt::PointPaddedLayout>
typedef struct alt_Vectorfloat3PointPaddedLayout alt_PositionPadded;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:260:11
// class alt::RotationLayout
    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:292:15
    // float roll

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:292:21
    // float pitch

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:292:28
    // float yaw

typedef struct alt_RotationLayout {
    float roll;
    float pitch;
    float yaw;
} alt_RotationLayout;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:260:11
// class alt::RotationLayout
// the record and its methods are not publicly accessible

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:263:15
// alt::RotationLayout::Element
// Canonical decl: alt::RotationLayout::Element
// using alt::RotationLayout::Element = float
// cpptype float
// fundamental
typedef float alt_RotationLayout_Element;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:301:11
// class alt::RotationPaddedLayout
// derives from class alt::RotationLayout
    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:292:15
    // float roll

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:292:21
    // float pitch

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:292:28
    // float yaw

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:312:15
    // float pad

typedef struct alt_RotationPaddedLayout {
    float roll;
    float pitch;
    float yaw;
    float pad;
} alt_RotationPaddedLayout;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:301:11
// class alt::RotationPaddedLayout
// the record and its methods are not publicly accessible

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:315:11
// alt::Rotation
// Canonical decl: alt::Rotation
// tdtd
// tdtd incomplete type
// using alt::Rotation = class alt::Vector<float, 3, class alt::RotationLayout>
// cpptype class alt::Vector<float, 3, class alt::RotationLayout>
typedef struct alt_Vectorfloat3RotationLayout alt_Rotation;

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:316:11
// alt::RotationPadded
// Canonical decl: alt::RotationPadded
// using alt::RotationPadded = class alt::Vector<float, 3, class alt::RotationPaddedLayout>
// cpptype class alt::Vector<float, 3, class alt::RotationPaddedLayout>
typedef struct alt_Vectorfloat3RotationPaddedLayout alt_RotationPadded;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:318:11
// class alt::ViewMatrixLayout
    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:359:18
    // alt::Vector4f right

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:359:25
    // alt::Vector4f up

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:359:29
    // alt::Vector4f forward

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:359:38
    // alt::Vector4f pos

typedef struct alt_ViewMatrixLayout {
    struct alt_Vectorfloat4VectorLayoutfloat4 right;
    struct alt_Vectorfloat4VectorLayoutfloat4 up;
    struct alt_Vectorfloat4VectorLayoutfloat4 forward;
    struct alt_Vectorfloat4VectorLayoutfloat4 pos;
} alt_ViewMatrixLayout;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:318:11
// class alt::ViewMatrixLayout
// the record and its methods are not publicly accessible

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:321:15
// alt::ViewMatrixLayout::Row
// Canonical decl: alt::ViewMatrixLayout::Row
// tdtd
// using alt::ViewMatrixLayout::Row = class alt::Vector<float, 4, class alt::VectorLayout<float, 4> >
// cpptype class alt::Vector<float, 4, class alt::VectorLayout<float, 4> >
typedef struct alt_Vectorfloat4VectorLayoutfloat4 alt_ViewMatrixLayout_Row;

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:322:15
// alt::ViewMatrixLayout::Element
// Canonical decl: alt::ViewMatrixLayout::Element
// tdtd
// using alt::ViewMatrixLayout::Element = float
// cpptype float
// fundamental
typedef float alt_ViewMatrixLayout_Element;

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:323:15
// alt::ViewMatrixLayout::Transposed
// Canonical decl: alt::ViewMatrixLayout::Transposed
// using alt::ViewMatrixLayout::Transposed = class alt::ViewMatrixLayout
// cpptype class alt::ViewMatrixLayout
typedef struct alt_ViewMatrixLayout alt_ViewMatrixLayout_Transposed;

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:362:11
// alt::ViewMatrix
// Canonical decl: alt::ViewMatrix
// using alt::ViewMatrix = class alt::Matrix<float, 4, 4, class alt::ViewMatrixLayout>
// cpptype class alt::Matrix<float, 4, 4, class alt::ViewMatrixLayout>
typedef struct alt_Matrixfloat44ViewMatrixLayout alt_ViewMatrix;

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/types/Types.h:7:8
// alt::Size
// Canonical decl: alt::Size
// tdtd
// using alt::Size = unsigned long long
// cpptype unsigned long long
// fundamental
typedef unsigned long long alt_Size;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/String.h:13:8
// class alt::String
    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/String.h:124:9
    // char * data

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/String.h:125:8
    // alt::Size size

typedef struct alt_String {
    char * data;
    unsigned long long size;
} alt_String;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/String.h:13:8
// class alt::String
// the record and its methods are not publicly accessible

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/String.h:150:9
// struct std::hash<alt::String>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/String.h:150:9
// struct std::hash<alt::String>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/StringView.h:14:8
// class alt::StringView
    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/StringView.h:16:15
    // const char * data

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/StringView.h:17:8
    // alt::Size size

typedef struct alt_StringView {
    const char * data;
    unsigned long long size;
} alt_StringView;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/StringView.h:14:8
// class alt::StringView
// the record and its methods are not publicly accessible

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/script-objects/../types/RGBA.h:8:9
// struct alt::RGBA
    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/script-objects/../types/RGBA.h:10:11
    // uint8_t r

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/script-objects/../types/RGBA.h:11:11
    // uint8_t g

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/script-objects/../types/RGBA.h:12:11
    // uint8_t b

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/script-objects/../types/RGBA.h:13:11
    // uint8_t a

typedef struct alt_RGBA {
    unsigned char r;
    unsigned char g;
    unsigned char b;
    unsigned char a;
} alt_RGBA;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/script-objects/../types/RGBA.h:8:9
// struct alt::RGBA
// the record and its methods are not publicly accessible

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:10:8
// Array<T>
// isTemplated || isTemplateDecl.

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:10:8
// Array<T>
// isTemplated || isTemplateDecl.

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:10:8
// class alt::Array<class alt::MValue>
    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:105:6
    // class alt::MValue * data

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:106:8
    // alt::Size size

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:107:8
    // alt::Size capacity

typedef struct alt_ArrayMValue {
    struct alt_MValue* data;
    unsigned long long size;
    unsigned long long capacity;
} alt_ArrayMValue;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:10:8
// class alt::Array<class alt::MValue>
// the record and its methods are not publicly accessible

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:10:8
// class alt::Array<class alt::String>
    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:105:6
    // class alt::String * data

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:106:8
    // alt::Size size

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:107:8
    // alt::Size capacity

typedef struct alt_ArrayString {
    struct alt_String* data;
    unsigned long long size;
    unsigned long long capacity;
} alt_ArrayString;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:10:8
// class alt::Array<class alt::String>
// the record and its methods are not publicly accessible

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:10:8
// class alt::Array<class alt::StringView>
    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:105:6
    // class alt::StringView * data

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:106:8
    // alt::Size size

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:107:8
    // alt::Size capacity

typedef struct alt_ArrayStringView {
    struct alt_StringView* data;
    unsigned long long size;
    unsigned long long capacity;
} alt_ArrayStringView;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:10:8
// class alt::Array<class alt::StringView>
// the record and its methods are not publicly accessible

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:14:8
// class alt::MValue
    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:119:8
    // enum alt::MValue::Type type

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:120:13
    // struct alt::MValue::_Storage * storage

typedef struct alt_MValue {
    enum alt_MValue_Type type;
    struct alt_MValue_Storage* storage;
} alt_MValue;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:14:8
// class alt::MValue
// the record and its methods are not publicly accessible

typedef enum alt_MValue_Type {
    ALT_MVALUE_TYPE_NIL = 0,
    ALT_MVALUE_TYPE_BOOL = 1,
    ALT_MVALUE_TYPE_INT = 2,
    ALT_MVALUE_TYPE_UINT = 3,
    ALT_MVALUE_TYPE_DOUBLE = 4,
    ALT_MVALUE_TYPE_STRING = 5,
    ALT_MVALUE_TYPE_LIST = 6,
    ALT_MVALUE_TYPE_DICT = 7,
    ALT_MVALUE_TYPE_ENTITY = 8,
    ALT_MVALUE_TYPE_FUNCTION = 9
};

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:31:9
// alt::MValue::Nil
// Canonical decl: alt::MValue::Nil
// tdtd
// tdtd incomplete type
// using alt::MValue::Nil = void
// cpptype void
// fundamental
typedef void alt_MValue_Nil;

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:32:9
// alt::MValue::Bool
// Canonical decl: alt::MValue::Bool
// tdtd
// using alt::MValue::Bool = _Bool
// cpptype _Bool
// fundamental
typedef _Bool alt_MValue_Bool;

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:33:9
// alt::MValue::Int
// Canonical decl: alt::MValue::Int
// tdtd
// using alt::MValue::Int = long long
// cpptype long long
// fundamental
typedef long long alt_MValue_Int;

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:34:9
// alt::MValue::UInt
// Canonical decl: alt::MValue::UInt
// tdtd
// using alt::MValue::UInt = unsigned long long
// cpptype unsigned long long
// fundamental
typedef unsigned long long alt_MValue_UInt;

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:35:9
// alt::MValue::Double
// Canonical decl: alt::MValue::Double
// tdtd
// using alt::MValue::Double = double
// cpptype double
// fundamental
typedef double alt_MValue_Double;

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:36:9
// alt::MValue::String
// Canonical decl: alt::MValue::String
// tdtd
// using alt::MValue::String = class alt::String
// cpptype class alt::String
typedef struct alt_String alt_MValue_String;

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:37:9
// alt::MValue::List
// Canonical decl: alt::MValue::List
// tdtd
// using alt::MValue::List = class alt::Array<class alt::MValue>
// cpptype class alt::Array<class alt::MValue>
typedef struct alt_ArrayMValue alt_MValue_List;

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:38:9
// alt::MValue::Dict
// Canonical decl: alt::MValue::Dict
// tdtd
// using alt::MValue::Dict = class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >
// cpptype class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >
// type is in STD

// bad typedef

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:39:9
// alt::MValue::Entity
// Canonical decl: alt::MValue::Entity
// tdtd
// using alt::MValue::Entity = class alt::IBaseObject *
// cpptype class alt::IBaseObject *
// Pointer type
// cpptype class alt::IBaseObject
typedef struct alt_IBaseObject* alt_MValue_Entity;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:40:10
// struct alt::MValue::Function
    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:40:27
    // void * invoker

typedef struct alt_MValue_Function {
    void * invoker;
} alt_MValue_Function;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:40:10
// struct alt::MValue::Function
// functions from struct alt::MValue::Function
CAPI void alt_MValue_Function_free(struct alt_MValue_Function* ptr);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:40:10
// alt::MValue::Function::Function
// Constructor
// Return type
// cpptype void
// fundamental
// Return ptr must be manually freed with alt_MValue_Function_free()
CAPI struct alt_MValue_Function* alt_MValue_Function_Create();

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:40:10
// alt::MValue::Function::Function
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype const struct alt::MValue::Function &
// Reference type
// cpptype struct alt::MValue::Function
// Return ptr must be manually freed with alt_MValue_Function_free()
CAPI struct alt_MValue_Function* alt_MValue_Function_Create_1(struct alt_MValue_Function* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:40:10
// alt::MValue::Function::Function
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype struct alt::MValue::Function &&
// Reference type
// cpptype struct alt::MValue::Function
// Return ptr must be manually freed with alt_MValue_Function_free()
CAPI struct alt_MValue_Function* alt_MValue_Function_Create_2(struct alt_MValue_Function* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:40:10
// alt::MValue::Function::~Function
// Destructor

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:40:10
// alt::MValue::Function::operator=
// Overloaded operator
// Return type
// cpptype struct alt::MValue::Function &
// Reference type
// cpptype struct alt::MValue::Function
// cpptype const struct alt::MValue::Function &
// Reference type
// cpptype struct alt::MValue::Function
CAPI void alt_MValue_Function_Assign_constMValue_FunctionRef(struct alt_MValue_Function* _instance, struct alt_MValue_Function* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:40:10
// alt::MValue::Function::operator=
// Overloaded operator
// Return type
// cpptype struct alt::MValue::Function &
// Reference type
// cpptype struct alt::MValue::Function
// cpptype struct alt::MValue::Function &&
// Reference type
// cpptype struct alt::MValue::Function
CAPI void alt_MValue_Function_Assign_MValue_FunctionRefRef(struct alt_MValue_Function* _instance, struct alt_MValue_Function* _p0);

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:42:9
// class alt::MValue::TypeMismatchException
// derives from std::exception
// Parent is in STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:42:9
// class alt::MValue::TypeMismatchException
// functions from class alt::MValue::TypeMismatchException
CAPI void alt_MValue_TypeMismatchException_free(struct alt_MValue_TypeMismatchException* ptr);

// derived record exception is not publicly accessible

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:45:16
// alt::MValue::TypeMismatchException::what
// Return type
// cpptype const char *
// Pointer type
// cpptype char
// fundamental
CAPI char* alt_MValue_TypeMismatchException_what(struct alt_MValue_TypeMismatchException* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:42:9
// alt::MValue::TypeMismatchException::TypeMismatchException
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype const class alt::MValue::TypeMismatchException &
// Reference type
// cpptype class alt::MValue::TypeMismatchException
// Return ptr must be manually freed with alt_MValue_TypeMismatchException_free()
CAPI struct alt_MValue_TypeMismatchException* alt_MValue_TypeMismatchException_Create(struct alt_MValue_TypeMismatchException* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:42:9
// alt::MValue::TypeMismatchException::TypeMismatchException
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype class alt::MValue::TypeMismatchException &&
// Reference type
// cpptype class alt::MValue::TypeMismatchException
// Return ptr must be manually freed with alt_MValue_TypeMismatchException_free()
CAPI struct alt_MValue_TypeMismatchException* alt_MValue_TypeMismatchException_Create_1(struct alt_MValue_TypeMismatchException* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:42:9
// alt::MValue::TypeMismatchException::operator=
// Overloaded operator
// Return type
// cpptype class alt::MValue::TypeMismatchException &
// Reference type
// cpptype class alt::MValue::TypeMismatchException
// cpptype const class alt::MValue::TypeMismatchException &
// Reference type
// cpptype class alt::MValue::TypeMismatchException
CAPI void alt_MValue_TypeMismatchException_Assign_constMValue_TypeMismatchExceptionRef(struct alt_MValue_TypeMismatchException* _instance, struct alt_MValue_TypeMismatchException* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:42:9
// alt::MValue::TypeMismatchException::operator=
// Overloaded operator
// Return type
// cpptype class alt::MValue::TypeMismatchException &
// Reference type
// cpptype class alt::MValue::TypeMismatchException
// cpptype class alt::MValue::TypeMismatchException &&
// Reference type
// cpptype class alt::MValue::TypeMismatchException
CAPI void alt_MValue_TypeMismatchException_Assign_MValue_TypeMismatchExceptionRefRef(struct alt_MValue_TypeMismatchException* _instance, struct alt_MValue_TypeMismatchException* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:42:9
// alt::MValue::TypeMismatchException::~TypeMismatchException
// Destructor

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:42:9
// alt::MValue::TypeMismatchException::TypeMismatchException
// Constructor
// Return type
// cpptype void
// fundamental
// Return ptr must be manually freed with alt_MValue_TypeMismatchException_free()
CAPI struct alt_MValue_TypeMismatchException* alt_MValue_TypeMismatchException_Create_2();

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:53:10
// _TypeTag<Args...>
// isTemplated || isTemplateDecl.

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:53:10
// _TypeTag<Args...>
// isTemplated || isTemplateDecl.

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:56:11
// _Type<idx, _T, _Args...>
// isTemplated || isTemplateDecl.

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:56:11
// _Type<idx, _T, _Args...>
// isTemplated || isTemplateDecl.

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:59:11
// _Type<0, type-parameter-1-0, type-parameter-1-1...>
// Is ClassTemplatePartialSpecialization.

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:59:11
// _Type<0, type-parameter-1-0, type-parameter-1-1...>
// Is ClassTemplatePartialSpecialization.

// Template Alias
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:62:4
// alt::MValue::_TypeTag::Type = alt::MValue::_TypeTag::Type

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:62:10
// alt::MValue::_TypeTag::Type
// Canonical decl: alt::MValue::_TypeTag::Type
// Describes template
// using alt::MValue::_TypeTag::Type = typename _Type<(uint64_t)type, type-parameter-0-0...>::Type
// cpptype typename _Type<(uint64_t)type, type-parameter-0-0...>::Type
// Could not process type
// bad typedef

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// _TypeId<idx, U, _T, _Args...>
// isTemplated || isTemplateDecl.

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// _TypeId<idx, U, _T, _Args...>
// isTemplated || isTemplateDecl.

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:68:11
// _TypeId<idx, type-parameter-1-1, type-parameter-1-1, type-parameter-1-2...>
// Is ClassTemplatePartialSpecialization.

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:68:11
// _TypeId<idx, type-parameter-1-1, type-parameter-1-1, type-parameter-1-2...>
// Is ClassTemplatePartialSpecialization.

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:53:10
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:53:10
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Template Alias
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:62:4
// alt::MValue::_TypeTag<void, bool, long long, unsigned long long, double, alt::String, alt::Array<alt::MValue>, std::unordered_map<alt::String, alt::MValue, std::hash<alt::String>, std::equal_to<alt::String>, std::allocator<std::pair<const alt::String, alt::MValue> > >, alt::IBaseObject *, alt::MValue::Function>::Type = alt::MValue::_TypeTag<void, bool, long long, unsigned long long, double, alt::String, alt::Array<alt::MValue>, std::unordered_map<alt::String, alt::MValue, std::hash<alt::String>, std::equal_to<alt::String>, std::allocator<std::pair<const alt::String, alt::MValue> > >, alt::IBaseObject *, alt::MValue::Function>::Type

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:62:10
// alt::MValue::_TypeTag<void, bool, long long, unsigned long long, double, alt::String, alt::Array<alt::MValue>, std::unordered_map<alt::String, alt::MValue, std::hash<alt::String>, std::equal_to<alt::String>, std::allocator<std::pair<const alt::String, alt::MValue> > >, alt::IBaseObject *, alt::MValue::Function>::Type
// Canonical decl: alt::MValue::_TypeTag<void, bool, long long, unsigned long long, double, alt::String, alt::Array<alt::MValue>, std::unordered_map<alt::String, alt::MValue, std::hash<alt::String>, std::equal_to<alt::String>, std::allocator<std::pair<const alt::String, alt::MValue> > >, alt::IBaseObject *, alt::MValue::Function>::Type
// Describes template
// using alt::MValue::_TypeTag<void, bool, long long, unsigned long long, double, alt::String, alt::Array<alt::MValue>, std::unordered_map<alt::String, alt::MValue, std::hash<alt::String>, std::equal_to<alt::String>, std::allocator<std::pair<const alt::String, alt::MValue> > >, alt::IBaseObject *, alt::MValue::Function>::Type = typename _Type<(uint64_t)type, void, _Bool, long long, unsigned long long, double, class String, class Array<class MValue>, class unordered_map<class String, class MValue, struct hash<alt::String>, struct equal_to<class String>, class allocator<struct pair<const class String, class MValue> > >, class IBaseObject *, struct Function>::Type
// cpptype typename _Type<(uint64_t)type, void, _Bool, long long, unsigned long long, double, class String, class Array<class MValue>, class unordered_map<class String, class MValue, struct hash<alt::String>, struct equal_to<class String>, class allocator<struct pair<const class String, class MValue> > >, class IBaseObject *, struct Function>::Type
// Could not process type
// bad typedef

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<0, _Bool, void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<0, _Bool, void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:68:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<1, _Bool, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:68:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<1, _Bool, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<0, long long, void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<0, long long, void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<1, long long, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<1, long long, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:68:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<2, long long, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:68:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<2, long long, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<0, unsigned long long, void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<0, unsigned long long, void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<1, unsigned long long, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<1, unsigned long long, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<2, unsigned long long, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<2, unsigned long long, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:68:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<3, unsigned long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:68:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<3, unsigned long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<0, double, void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<0, double, void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<1, double, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<1, double, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<2, double, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<2, double, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<3, double, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<3, double, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:68:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<4, double, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:68:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<4, double, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<0, class alt::String, void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<0, class alt::String, void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<1, class alt::String, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<1, class alt::String, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<2, class alt::String, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<2, class alt::String, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<3, class alt::String, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<3, class alt::String, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<4, class alt::String, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<4, class alt::String, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:68:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<5, class alt::String, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:68:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<5, class alt::String, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<0, class alt::Array<class alt::MValue>, void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<0, class alt::Array<class alt::MValue>, void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<1, class alt::Array<class alt::MValue>, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<1, class alt::Array<class alt::MValue>, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<2, class alt::Array<class alt::MValue>, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<2, class alt::Array<class alt::MValue>, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<3, class alt::Array<class alt::MValue>, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<3, class alt::Array<class alt::MValue>, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<4, class alt::Array<class alt::MValue>, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<4, class alt::Array<class alt::MValue>, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<5, class alt::Array<class alt::MValue>, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<5, class alt::Array<class alt::MValue>, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:68:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<6, class alt::Array<class alt::MValue>, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:68:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<6, class alt::Array<class alt::MValue>, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<0, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<0, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<1, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<1, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<2, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<2, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<3, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<3, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<4, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<4, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<5, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<5, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<6, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<6, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:68:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<7, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:68:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<7, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<0, class alt::IBaseObject *, void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<0, class alt::IBaseObject *, void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<1, class alt::IBaseObject *, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<1, class alt::IBaseObject *, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<2, class alt::IBaseObject *, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<2, class alt::IBaseObject *, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<3, class alt::IBaseObject *, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<3, class alt::IBaseObject *, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<4, class alt::IBaseObject *, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<4, class alt::IBaseObject *, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<5, class alt::IBaseObject *, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<5, class alt::IBaseObject *, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<6, class alt::IBaseObject *, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<6, class alt::IBaseObject *, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<7, class alt::IBaseObject *, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<7, class alt::IBaseObject *, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:68:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<8, class alt::IBaseObject *, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:68:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<8, class alt::IBaseObject *, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<0, struct alt::MValue::Function, void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<0, struct alt::MValue::Function, void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<1, struct alt::MValue::Function, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<1, struct alt::MValue::Function, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<2, struct alt::MValue::Function, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<2, struct alt::MValue::Function, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<3, struct alt::MValue::Function, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<3, struct alt::MValue::Function, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<4, struct alt::MValue::Function, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<4, struct alt::MValue::Function, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<5, struct alt::MValue::Function, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<5, struct alt::MValue::Function, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<6, struct alt::MValue::Function, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<6, struct alt::MValue::Function, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<7, struct alt::MValue::Function, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<7, struct alt::MValue::Function, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<8, struct alt::MValue::Function, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<8, struct alt::MValue::Function, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:68:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<9, struct alt::MValue::Function, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:68:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<9, struct alt::MValue::Function, struct alt::MValue::Function>
// Has relations with STD namespace

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:74:9
// alt::MValue::TypeTag
// Canonical decl: alt::MValue::TypeTag
// tdtd
// tdstruct
// using alt::MValue::TypeTag = struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// cpptype struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// type is in STD

// bad typedef

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:76:10
// struct alt::MValue::_Storage
    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:76:30
    // uint64_t refCount

typedef struct alt_MValue_Storage {
    unsigned long long refCount;
} alt_MValue_Storage;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:76:10
// struct alt::MValue::_Storage
// the record and its methods are not publicly accessible

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:79:10
// Storage<T>
// isTemplated || isTemplateDecl.

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:79:10
// Storage<T>
// isTemplated || isTemplateDecl.

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:79:10
// struct alt::MValue::Storage<_Bool>
// derives from struct alt::MValue::_Storage
    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:76:30
    // uint64_t refCount

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:79:33
    // _Bool value

typedef struct alt_MValue_Storage_Bool {
    unsigned long long refCount;
    _Bool value;
} alt_MValue_Storage_Bool;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:79:10
// struct alt::MValue::Storage<_Bool>
// the record and its methods are not publicly accessible

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:79:10
// struct alt::MValue::Storage<long long>
// derives from struct alt::MValue::_Storage
    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:76:30
    // uint64_t refCount

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:79:33
    // long long value

typedef struct alt_MValue_Storagelonglong {
    unsigned long long refCount;
    long long value;
} alt_MValue_Storagelonglong;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:79:10
// struct alt::MValue::Storage<long long>
// the record and its methods are not publicly accessible

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:79:10
// struct alt::MValue::Storage<unsigned long long>
// derives from struct alt::MValue::_Storage
    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:76:30
    // uint64_t refCount

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:79:33
    // unsigned long long value

typedef struct alt_MValue_Storageunsignedlonglong {
    unsigned long long refCount;
    unsigned long long value;
} alt_MValue_Storageunsignedlonglong;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:79:10
// struct alt::MValue::Storage<unsigned long long>
// the record and its methods are not publicly accessible

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:79:10
// struct alt::MValue::Storage<double>
// derives from struct alt::MValue::_Storage
    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:76:30
    // uint64_t refCount

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:79:33
    // double value

typedef struct alt_MValue_Storagedouble {
    unsigned long long refCount;
    double value;
} alt_MValue_Storagedouble;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:79:10
// struct alt::MValue::Storage<double>
// the record and its methods are not publicly accessible

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:79:10
// struct alt::MValue::Storage<class alt::String>
// derives from struct alt::MValue::_Storage
    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:76:30
    // uint64_t refCount

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:79:33
    // class alt::String value

typedef struct alt_MValue_StorageString {
    unsigned long long refCount;
    struct alt_String value;
} alt_MValue_StorageString;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:79:10
// struct alt::MValue::Storage<class alt::String>
// the record and its methods are not publicly accessible

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:79:10
// struct alt::MValue::Storage<class alt::Array<class alt::MValue> >
// derives from struct alt::MValue::_Storage
    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:76:30
    // uint64_t refCount

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:79:33
    // class alt::Array<class alt::MValue> value

typedef struct alt_MValue_StorageArrayMValue {
    unsigned long long refCount;
    struct alt_ArrayMValue value;
} alt_MValue_StorageArrayMValue;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:79:10
// struct alt::MValue::Storage<class alt::Array<class alt::MValue> >
// the record and its methods are not publicly accessible

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:79:10
// struct alt::MValue::Storage<class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > > >
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:79:10
// struct alt::MValue::Storage<class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > > >
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:79:10
// struct alt::MValue::Storage<class alt::IBaseObject *>
// derives from struct alt::MValue::_Storage
    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:76:30
    // uint64_t refCount

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:79:33
    // class alt::IBaseObject * value

typedef struct alt_MValue_StorageIBaseObjectPtr {
    unsigned long long refCount;
    struct alt_IBaseObject* value;
} alt_MValue_StorageIBaseObjectPtr;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:79:10
// struct alt::MValue::Storage<class alt::IBaseObject *>
// the record and its methods are not publicly accessible

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:79:10
// struct alt::MValue::Storage<struct alt::MValue::Function>
// derives from struct alt::MValue::_Storage
    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:76:30
    // uint64_t refCount

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:79:33
    // struct alt::MValue::Function value

typedef struct alt_MValue_StorageMValue_Function {
    unsigned long long refCount;
    struct alt_MValue_Function value;
} alt_MValue_StorageMValue_Function;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:79:10
// struct alt::MValue::Storage<struct alt::MValue::Function>
// the record and its methods are not publicly accessible

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValueList.h:7:8
// class alt::MValueList
// derives from class alt::MValue
    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:119:8
    // enum alt::MValue::Type type

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:120:13
    // struct alt::MValue::_Storage * storage

typedef struct alt_MValueList {
    enum alt_MValue_Type type;
    struct alt_MValue_Storage* storage;
} alt_MValueList;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValueList.h:7:8
// class alt::MValueList
// the record and its methods are not publicly accessible

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/types/MValueDict.h:7:8
// class alt::MValueDict
// derives from class alt::MValue
    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:119:8
    // enum alt::MValue::Type type

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:120:13
    // struct alt::MValue::_Storage * storage

typedef struct alt_MValueDict {
    enum alt_MValue_Type type;
    struct alt_MValue_Storage* storage;
} alt_MValueDict;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/types/MValueDict.h:7:8
// class alt::MValueDict
// the record and its methods are not publicly accessible

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/IResource.h:14:8
// class alt::IResource
    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/IResource.h:60:10
    // class alt::String type

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/IResource.h:61:10
    // class alt::String name

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/IResource.h:62:10
    // class alt::String path

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/IResource.h:63:10
    // class alt::String main

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/IResource.h:64:13
    // class alt::IPackage * pkg

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/IResource.h:66:9
    // enum alt::IResource::State state

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/IResource.h:67:14
    // class alt::MValueDict exports

typedef struct alt_IResource {
    struct alt_String type;
    struct alt_String name;
    struct alt_String path;
    struct alt_String main;
    struct alt_IPackage* pkg;
    enum alt_IResource_State state;
    struct alt_MValueDict exports;
} alt_IResource;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/IResource.h:14:8
// class alt::IResource
// the record and its methods are not publicly accessible

typedef enum alt_IResource_State {
    ALT_IRESOURCE_STATE_STOPPED = 0,
    ALT_IRESOURCE_STATE_INSTANTIATING = 1,
    ALT_IRESOURCE_STATE_STARTED = 2
};

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/IResource.h:24:10
// struct alt::IResource::CreationInfo
    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/IResource.h:26:11
    // class alt::String type

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/IResource.h:27:11
    // class alt::String name

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/IResource.h:28:11
    // class alt::String path

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/IResource.h:29:11
    // class alt::String main

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/IResource.h:30:18
    // Array<class alt::String> deps

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/IResource.h:31:14
    // class alt::IPackage * pkg

typedef struct alt_IResource_CreationInfo {
    struct alt_String type;
    struct alt_String name;
    struct alt_String path;
    struct alt_String main;
    struct alt_ArrayString deps;
    struct alt_IPackage* pkg;
} alt_IResource_CreationInfo;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/IResource.h:24:10
// struct alt::IResource::CreationInfo
// functions from struct alt::IResource::CreationInfo
CAPI void alt_IResource_CreationInfo_free(struct alt_IResource_CreationInfo* ptr);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/IResource.h:24:10
// alt::IResource::CreationInfo::CreationInfo
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype const struct alt::IResource::CreationInfo &
// Reference type
// cpptype struct alt::IResource::CreationInfo
// Return ptr must be manually freed with alt_IResource_CreationInfo_free()
CAPI struct alt_IResource_CreationInfo* alt_IResource_CreationInfo_Create(struct alt_IResource_CreationInfo* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/IResource.h:24:10
// alt::IResource::CreationInfo::CreationInfo
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype struct alt::IResource::CreationInfo &&
// Reference type
// cpptype struct alt::IResource::CreationInfo
// Return ptr must be manually freed with alt_IResource_CreationInfo_free()
CAPI struct alt_IResource_CreationInfo* alt_IResource_CreationInfo_Create_1(struct alt_IResource_CreationInfo* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/IResource.h:24:10
// alt::IResource::CreationInfo::operator=
// Overloaded operator
// Return type
// cpptype struct alt::IResource::CreationInfo &
// Reference type
// cpptype struct alt::IResource::CreationInfo
// cpptype struct alt::IResource::CreationInfo &&
// Reference type
// cpptype struct alt::IResource::CreationInfo
CAPI void alt_IResource_CreationInfo_Assign_IResource_CreationInfoRefRef(struct alt_IResource_CreationInfo* _instance, struct alt_IResource_CreationInfo* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/IResource.h:24:10
// alt::IResource::CreationInfo::~CreationInfo
// Destructor

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/types/MValueFunction.h:10:8
// class alt::MValueFunction
// derives from class alt::MValue
    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:119:8
    // enum alt::MValue::Type type

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:120:13
    // struct alt::MValue::_Storage * storage

typedef struct alt_MValueFunction {
    enum alt_MValue_Type type;
    struct alt_MValue_Storage* storage;
} alt_MValueFunction;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/types/MValueFunction.h:10:8
// class alt::MValueFunction
// functions from class alt::MValueFunction
CAPI void alt_MValueFunction_free(struct alt_MValueFunction* ptr);

// derived record MValue is not publicly accessible

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/types/MValueFunction.h:15:3
// alt::MValueFunction::MValueFunction
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype const struct alt::MValue::Function &
// Reference type
// cpptype struct alt::MValue::Function
// Return ptr must be manually freed with alt_MValueFunction_free()
CAPI struct alt_MValueFunction* alt_MValueFunction_Create(struct alt_MValue_Function* func);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/types/MValueFunction.h:21:3
// alt::MValueFunction::MValueFunction
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype struct alt::MValueFunction::Invoker *
// Pointer type
// cpptype struct alt::MValueFunction::Invoker
// Return ptr must be manually freed with alt_MValueFunction_free()
CAPI struct alt_MValueFunction* alt_MValueFunction_Create_1(struct alt_MValueFunction_Invoker* invoker);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/types/MValueFunction.h:27:3
// alt::MValueFunction::MValueFunction
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype class alt::MValue
// Return ptr must be manually freed with alt_MValueFunction_free()
CAPI struct alt_MValueFunction* alt_MValueFunction_Create_2(struct alt_MValue* val);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/types/MValueFunction.h:35:12
// alt::MValueFunction::GetInvoker
// Return type
// cpptype struct alt::MValueFunction::Invoker *
// Pointer type
// cpptype struct alt::MValueFunction::Invoker
CAPI struct alt_MValueFunction_Invoker* alt_MValueFunction_GetInvoker(struct alt_MValueFunction* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/types/MValueFunction.h:10:8
// alt::MValueFunction::MValueFunction
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype const class alt::MValueFunction &
// Reference type
// cpptype class alt::MValueFunction
// Return ptr must be manually freed with alt_MValueFunction_free()
CAPI struct alt_MValueFunction* alt_MValueFunction_Create_3(struct alt_MValueFunction* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/types/MValueFunction.h:10:8
// alt::MValueFunction::MValueFunction
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype class alt::MValueFunction &&
// Reference type
// cpptype class alt::MValueFunction
// Return ptr must be manually freed with alt_MValueFunction_free()
CAPI struct alt_MValueFunction* alt_MValueFunction_Create_4(struct alt_MValueFunction* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/types/MValueFunction.h:10:8
// alt::MValueFunction::operator=
// Overloaded operator
// Return type
// cpptype class alt::MValueFunction &
// Reference type
// cpptype class alt::MValueFunction
// cpptype class alt::MValueFunction &&
// Reference type
// cpptype class alt::MValueFunction
CAPI void alt_MValueFunction_Assign_MValueFunctionRefRef(struct alt_MValueFunction* _instance, struct alt_MValueFunction* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/types/MValueFunction.h:10:8
// alt::MValueFunction::~MValueFunction
// Destructor

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/types/MValueFunction.h:13:10
// struct alt::MValueFunction::Invoker
typedef struct alt_MValueFunction_Invoker alt_MValueFunction_Invoker;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/types/MValueFunction.h:13:10
// struct alt::MValueFunction::Invoker
// functions from struct alt::MValueFunction::Invoker
CAPI void alt_MValueFunction_Invoker_free(struct alt_MValueFunction_Invoker* ptr);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/types/MValueFunction.h:13:35
// alt::MValueFunction::Invoker::Invoke
// Return type
// cpptype class alt::MValue
// cpptype class alt::MValueList
// Return ptr must be manually freed with alt_MValue_free()
CAPI struct alt_MValue* alt_MValueFunction_Invoker_Invoke(struct alt_MValueFunction_Invoker* _instance, struct alt_MValueList* args);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/types/MValueFunction.h:13:10
// alt::MValueFunction::Invoker::operator=
// Overloaded operator
// Return type
// cpptype struct alt::MValueFunction::Invoker &
// Reference type
// cpptype struct alt::MValueFunction::Invoker
// cpptype const struct alt::MValueFunction::Invoker &
// Reference type
// cpptype struct alt::MValueFunction::Invoker
CAPI void alt_MValueFunction_Invoker_Assign_constMValueFunction_InvokerRef(struct alt_MValueFunction_Invoker* _instance, struct alt_MValueFunction_Invoker* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/types/MValueFunction.h:13:10
// alt::MValueFunction::Invoker::operator=
// Overloaded operator
// Return type
// cpptype struct alt::MValueFunction::Invoker &
// Reference type
// cpptype struct alt::MValueFunction::Invoker
// cpptype struct alt::MValueFunction::Invoker &&
// Reference type
// cpptype struct alt::MValueFunction::Invoker
CAPI void alt_MValueFunction_Invoker_Assign_MValueFunction_InvokerRefRef(struct alt_MValueFunction_Invoker* _instance, struct alt_MValueFunction_Invoker* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/types/MValueFunction.h:13:10
// alt::MValueFunction::Invoker::~Invoker
// Destructor

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/script-objects/../IBaseObject.h:8:8
// class alt::IBaseObject
typedef struct alt_IBaseObject alt_IBaseObject;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/script-objects/../IBaseObject.h:8:8
// class alt::IBaseObject
// functions from class alt::IBaseObject
// has no accessible destructor for 'free' function

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/script-objects/../IBaseObject.h:22:16
// alt::IBaseObject::GetType
// Return type
// cpptype enum alt::IBaseObject::Type
// enumaral type
CAPI enum alt_IBaseObject_Type alt_IBaseObject_GetType(struct alt_IBaseObject* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/script-objects/../IBaseObject.h:24:18
// alt::IBaseObject::GetMetaData
// Return type
// cpptype class alt::MValue
// cpptype class alt::StringView
// Return ptr must be manually freed with alt_MValue_free()
CAPI struct alt_MValue* alt_IBaseObject_GetMetaData(struct alt_IBaseObject* _instance, struct alt_StringView* key);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/script-objects/../IBaseObject.h:25:16
// alt::IBaseObject::SetMetaData
// Return type
// cpptype void
// fundamental
// cpptype class alt::StringView
// cpptype class alt::MValue
CAPI void alt_IBaseObject_SetMetaData(struct alt_IBaseObject* _instance, struct alt_StringView* key, struct alt_MValue* val);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/script-objects/../IBaseObject.h:28:11
// alt::IBaseObject::~IBaseObject
// Not public

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/script-objects/../IBaseObject.h:8:8
// alt::IBaseObject::operator=
// Overloaded operator
// Return type
// cpptype class alt::IBaseObject &
// Reference type
// cpptype class alt::IBaseObject
// cpptype const class alt::IBaseObject &
// Reference type
// cpptype class alt::IBaseObject
CAPI void alt_IBaseObject_Assign_constIBaseObjectRef(struct alt_IBaseObject* _instance, struct alt_IBaseObject* _p0);

typedef enum alt_IBaseObject_Type {
    ALT_IBASEOBJECT_TYPE_PLAYER = 0,
    ALT_IBASEOBJECT_TYPE_VEHICLE = 1,
    ALT_IBASEOBJECT_TYPE_CHECKPOINT = 2,
    ALT_IBASEOBJECT_TYPE_BLIP = 3,
    ALT_IBASEOBJECT_TYPE_WEBVIEW = 4,
    ALT_IBASEOBJECT_TYPE_VOICE_CHANNEL = 5,
    ALT_IBASEOBJECT_TYPE_COLSHAPE = 6
};

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/script-objects/../IWorldObject.h:10:8
// class alt::IWorldObject
// derives from class alt::IBaseObject
typedef struct alt_IWorldObject alt_IWorldObject;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/script-objects/../IWorldObject.h:10:8
// class alt::IWorldObject
// functions from class alt::IWorldObject
// has no accessible destructor for 'free' function

// derived record IBaseObject is not publicly accessible

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/script-objects/../IWorldObject.h:13:20
// alt::IWorldObject::GetPosition
// Return type
// cpptype class alt::Vector<float, 3, class alt::PointLayout>
// Return ptr must be manually freed with alt_Vectorfloat3PointLayout_free()
CAPI struct alt_Vectorfloat3PointLayout* alt_IWorldObject_GetPosition(struct alt_IWorldObject* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/script-objects/../IWorldObject.h:14:19
// alt::IWorldObject::GetDimension
// Return type
// cpptype short
// fundamental
CAPI short alt_IWorldObject_GetDimension(struct alt_IWorldObject* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/script-objects/../IWorldObject.h:22:11
// alt::IWorldObject::~IWorldObject
// Not public

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/script-objects/../IWorldObject.h:10:8
// alt::IWorldObject::IWorldObject
// Constructor
// class is abstract
// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/script-objects/../IWorldObject.h:10:8
// alt::IWorldObject::operator=
// Overloaded operator
// Return type
// cpptype class alt::IWorldObject &
// Reference type
// cpptype class alt::IWorldObject
// cpptype const class alt::IWorldObject &
// Reference type
// cpptype class alt::IWorldObject
CAPI void alt_IWorldObject_Assign_constIWorldObjectRef(struct alt_IWorldObject* _instance, struct alt_IWorldObject* _p0);

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IEntity.h:10:8
// class alt::IEntity
// derives from class alt::IWorldObject
// derives from class alt::IBaseObject
typedef struct alt_IEntity alt_IEntity;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IEntity.h:10:8
// class alt::IEntity
// functions from class alt::IEntity
// has no accessible destructor for 'free' function

// derived record IWorldObject is not publicly accessible

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IEntity.h:13:20
// alt::IEntity::GetID
// Return type
// cpptype unsigned short
// fundamental
CAPI unsigned short alt_IEntity_GetID(struct alt_IEntity* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IEntity.h:15:20
// alt::IEntity::GetModel
// Return type
// cpptype unsigned int
// fundamental
CAPI unsigned int alt_IEntity_GetModel(struct alt_IEntity* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IEntity.h:17:20
// alt::IEntity::GetRotation
// Return type
// cpptype class alt::Vector<float, 3, class alt::RotationLayout>
// Return ptr must be manually freed with alt_Vectorfloat3RotationLayout_free()
CAPI struct alt_Vectorfloat3RotationLayout* alt_IEntity_GetRotation(struct alt_IEntity* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IEntity.h:18:16
// alt::IEntity::SetRotation
// Return type
// cpptype void
// fundamental
// cpptype class alt::Vector<float, 3, class alt::RotationLayout>
CAPI void alt_IEntity_SetRotation(struct alt_IEntity* _instance, struct alt_Vectorfloat3RotationLayout* rot);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IEntity.h:20:18
// alt::IEntity::GetSyncedMetaData
// Return type
// cpptype class alt::MValue
// cpptype class alt::StringView
// Return ptr must be manually freed with alt_MValue_free()
CAPI struct alt_MValue* alt_IEntity_GetSyncedMetaData(struct alt_IEntity* _instance, struct alt_StringView* key);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IEntity.h:27:11
// alt::IEntity::~IEntity
// Not public

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IEntity.h:10:8
// alt::IEntity::IEntity
// Constructor
// class is abstract
// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IEntity.h:10:8
// alt::IEntity::operator=
// Overloaded operator
// Return type
// cpptype class alt::IEntity &
// Reference type
// cpptype class alt::IEntity
// cpptype const class alt::IEntity &
// Reference type
// cpptype class alt::IEntity
CAPI void alt_IEntity_Assign_constIEntityRef(struct alt_IEntity* _instance, struct alt_IEntity* _p0);

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IPlayer.h:9:8
// class alt::IPlayer
// derives from class alt::IEntity
// derives from class alt::IWorldObject
// derives from class alt::IBaseObject
typedef struct alt_IPlayer alt_IPlayer;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IPlayer.h:9:8
// class alt::IPlayer
// functions from class alt::IPlayer
// has no accessible destructor for 'free' function

// derived record IEntity is not publicly accessible

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IPlayer.h:12:16
// alt::IPlayer::IsConnected
// Return type
// cpptype _Bool
// fundamental
CAPI _Bool alt_IPlayer_IsConnected(struct alt_IPlayer* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IPlayer.h:14:20
// alt::IPlayer::GetPing
// Return type
// cpptype unsigned int
// fundamental
CAPI unsigned int alt_IPlayer_GetPing(struct alt_IPlayer* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IPlayer.h:15:22
// alt::IPlayer::GetIP
// Return type
// cpptype class alt::StringView
// Return ptr must be manually freed with alt_StringView_free()
CAPI struct alt_StringView* alt_IPlayer_GetIP(struct alt_IPlayer* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IPlayer.h:17:16
// alt::IPlayer::Spawn
// Return type
// cpptype void
// fundamental
// cpptype class alt::Vector<float, 3, class alt::PointLayout>
// cpptype unsigned int
// fundamental
CAPI void alt_IPlayer_Spawn(struct alt_IPlayer* _instance, struct alt_Vectorfloat3PointLayout* pos, unsigned int delayMs);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IPlayer.h:18:16
// alt::IPlayer::Despawn
// Return type
// cpptype void
// fundamental
CAPI void alt_IPlayer_Despawn(struct alt_IPlayer* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IPlayer.h:20:22
// alt::IPlayer::GetName
// Return type
// cpptype class alt::StringView
// Return ptr must be manually freed with alt_StringView_free()
CAPI struct alt_StringView* alt_IPlayer_GetName(struct alt_IPlayer* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IPlayer.h:21:16
// alt::IPlayer::SetName
// Return type
// cpptype void
// fundamental
// cpptype class alt::StringView
CAPI void alt_IPlayer_SetName(struct alt_IPlayer* _instance, struct alt_StringView* name);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IPlayer.h:23:20
// alt::IPlayer::GetHealth
// Return type
// cpptype unsigned short
// fundamental
CAPI unsigned short alt_IPlayer_GetHealth(struct alt_IPlayer* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IPlayer.h:24:16
// alt::IPlayer::SetHealth
// Return type
// cpptype void
// fundamental
// cpptype unsigned short
// fundamental
CAPI void alt_IPlayer_SetHealth(struct alt_IPlayer* _instance, unsigned short health);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IPlayer.h:25:20
// alt::IPlayer::GetMaxHealth
// Return type
// cpptype unsigned short
// fundamental
CAPI unsigned short alt_IPlayer_GetMaxHealth(struct alt_IPlayer* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IPlayer.h:26:16
// alt::IPlayer::SetMaxHealth
// Return type
// cpptype void
// fundamental
// cpptype unsigned short
// fundamental
CAPI void alt_IPlayer_SetMaxHealth(struct alt_IPlayer* _instance, unsigned short health);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IPlayer.h:28:16
// alt::IPlayer::SetDateTime
// Return type
// cpptype void
// fundamental
// cpptype int
// fundamental
// cpptype int
// fundamental
// cpptype int
// fundamental
// cpptype int
// fundamental
// cpptype int
// fundamental
// cpptype int
// fundamental
CAPI void alt_IPlayer_SetDateTime(struct alt_IPlayer* _instance, int day, int month, int year, int hour, int minute, int second);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IPlayer.h:29:16
// alt::IPlayer::SetWeather
// Return type
// cpptype void
// fundamental
// cpptype unsigned int
// fundamental
CAPI void alt_IPlayer_SetWeather(struct alt_IPlayer* _instance, unsigned int weather);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IPlayer.h:31:16
// alt::IPlayer::GiveWeapon
// Return type
// cpptype void
// fundamental
// cpptype unsigned int
// fundamental
// cpptype int
// fundamental
// cpptype _Bool
// fundamental
CAPI void alt_IPlayer_GiveWeapon(struct alt_IPlayer* _instance, unsigned int weapon, int ammo, _Bool selectWeapon);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IPlayer.h:32:16
// alt::IPlayer::RemoveWeapon
// Return type
// cpptype void
// fundamental
// cpptype unsigned int
// fundamental
CAPI void alt_IPlayer_RemoveWeapon(struct alt_IPlayer* _instance, unsigned int weapon);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IPlayer.h:33:16
// alt::IPlayer::RemoveAllWeapons
// Return type
// cpptype void
// fundamental
CAPI void alt_IPlayer_RemoveAllWeapons(struct alt_IPlayer* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IPlayer.h:35:16
// alt::IPlayer::AddWeaponComponent
// Return type
// cpptype void
// fundamental
// cpptype unsigned int
// fundamental
// cpptype unsigned int
// fundamental
CAPI void alt_IPlayer_AddWeaponComponent(struct alt_IPlayer* _instance, unsigned int weapon, unsigned int component);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IPlayer.h:36:16
// alt::IPlayer::RemoveWeaponComponent
// Return type
// cpptype void
// fundamental
// cpptype unsigned int
// fundamental
// cpptype unsigned int
// fundamental
CAPI void alt_IPlayer_RemoveWeaponComponent(struct alt_IPlayer* _instance, unsigned int weapon, unsigned int component);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IPlayer.h:37:32
// alt::IPlayer::GetCurrentWeaponComponents
// Return type
// cpptype class alt::Array<unsigned int>
// Return ptr must be manually freed with alt_Arrayunsignedint_free()
CAPI struct alt_Arrayunsigned_int* alt_IPlayer_GetCurrentWeaponComponents(struct alt_IPlayer* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IPlayer.h:39:16
// alt::IPlayer::SetWeaponTintIndex
// Return type
// cpptype void
// fundamental
// cpptype unsigned int
// fundamental
// cpptype unsigned char
// fundamental
CAPI void alt_IPlayer_SetWeaponTintIndex(struct alt_IPlayer* _instance, unsigned int weapon, unsigned char tintIndex);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IPlayer.h:40:19
// alt::IPlayer::GetCurrentWeaponTintIndex
// Return type
// cpptype unsigned char
// fundamental
CAPI unsigned char alt_IPlayer_GetCurrentWeaponTintIndex(struct alt_IPlayer* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IPlayer.h:42:20
// alt::IPlayer::GetCurrentWeapon
// Return type
// cpptype unsigned int
// fundamental
CAPI unsigned int alt_IPlayer_GetCurrentWeapon(struct alt_IPlayer* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IPlayer.h:43:16
// alt::IPlayer::SetCurrentWeapon
// Return type
// cpptype void
// fundamental
// cpptype unsigned int
// fundamental
CAPI void alt_IPlayer_SetCurrentWeapon(struct alt_IPlayer* _instance, unsigned int weapon);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IPlayer.h:45:16
// alt::IPlayer::IsDead
// Return type
// cpptype _Bool
// fundamental
CAPI _Bool alt_IPlayer_IsDead(struct alt_IPlayer* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IPlayer.h:47:16
// alt::IPlayer::IsJumping
// Return type
// cpptype _Bool
// fundamental
CAPI _Bool alt_IPlayer_IsJumping(struct alt_IPlayer* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IPlayer.h:48:16
// alt::IPlayer::IsInRagdoll
// Return type
// cpptype _Bool
// fundamental
CAPI _Bool alt_IPlayer_IsInRagdoll(struct alt_IPlayer* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IPlayer.h:49:16
// alt::IPlayer::IsAiming
// Return type
// cpptype _Bool
// fundamental
CAPI _Bool alt_IPlayer_IsAiming(struct alt_IPlayer* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IPlayer.h:50:16
// alt::IPlayer::IsShooting
// Return type
// cpptype _Bool
// fundamental
CAPI _Bool alt_IPlayer_IsShooting(struct alt_IPlayer* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IPlayer.h:51:16
// alt::IPlayer::IsReloading
// Return type
// cpptype _Bool
// fundamental
CAPI _Bool alt_IPlayer_IsReloading(struct alt_IPlayer* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IPlayer.h:53:20
// alt::IPlayer::GetArmour
// Return type
// cpptype unsigned short
// fundamental
CAPI unsigned short alt_IPlayer_GetArmour(struct alt_IPlayer* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IPlayer.h:54:16
// alt::IPlayer::SetArmour
// Return type
// cpptype void
// fundamental
// cpptype unsigned short
// fundamental
CAPI void alt_IPlayer_SetArmour(struct alt_IPlayer* _instance, unsigned short armor);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IPlayer.h:55:20
// alt::IPlayer::GetMaxArmour
// Return type
// cpptype unsigned short
// fundamental
CAPI unsigned short alt_IPlayer_GetMaxArmour(struct alt_IPlayer* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IPlayer.h:56:16
// alt::IPlayer::SetMaxArmour
// Return type
// cpptype void
// fundamental
// cpptype unsigned short
// fundamental
CAPI void alt_IPlayer_SetMaxArmour(struct alt_IPlayer* _instance, unsigned short armor);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IPlayer.h:58:17
// alt::IPlayer::GetMoveSpeed
// Return type
// cpptype float
// fundamental
CAPI float alt_IPlayer_GetMoveSpeed(struct alt_IPlayer* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IPlayer.h:60:20
// alt::IPlayer::GetWeapon
// Return type
// cpptype unsigned int
// fundamental
CAPI unsigned int alt_IPlayer_GetWeapon(struct alt_IPlayer* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IPlayer.h:61:20
// alt::IPlayer::GetAmmo
// Return type
// cpptype unsigned short
// fundamental
CAPI unsigned short alt_IPlayer_GetAmmo(struct alt_IPlayer* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IPlayer.h:63:20
// alt::IPlayer::GetAimPos
// Return type
// cpptype class alt::Vector<float, 3, class alt::PointLayout>
// Return ptr must be manually freed with alt_Vectorfloat3PointLayout_free()
CAPI struct alt_Vectorfloat3PointLayout* alt_IPlayer_GetAimPos(struct alt_IPlayer* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IPlayer.h:64:20
// alt::IPlayer::GetHeadRotation
// Return type
// cpptype class alt::Vector<float, 3, class alt::RotationLayout>
// Return ptr must be manually freed with alt_Vectorfloat3RotationLayout_free()
CAPI struct alt_Vectorfloat3RotationLayout* alt_IPlayer_GetHeadRotation(struct alt_IPlayer* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IPlayer.h:66:16
// alt::IPlayer::IsInVehicle
// Return type
// cpptype _Bool
// fundamental
CAPI _Bool alt_IPlayer_IsInVehicle(struct alt_IPlayer* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IPlayer.h:67:21
// alt::IPlayer::GetVehicle
// Return type
// cpptype class alt::IVehicle *
// Pointer type
// cpptype class alt::IVehicle
CAPI struct alt_IVehicle* alt_IPlayer_GetVehicle(struct alt_IPlayer* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IPlayer.h:68:19
// alt::IPlayer::GetSeat
// Return type
// cpptype unsigned char
// fundamental
CAPI unsigned char alt_IPlayer_GetSeat(struct alt_IPlayer* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IPlayer.h:70:20
// alt::IPlayer::GetEntityAimingAt
// Return type
// cpptype class alt::IEntity *
// Pointer type
// cpptype class alt::IEntity
CAPI struct alt_IEntity* alt_IPlayer_GetEntityAimingAt(struct alt_IPlayer* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IPlayer.h:71:20
// alt::IPlayer::GetEntityAimOffset
// Return type
// cpptype class alt::Vector<float, 3, class alt::PointLayout>
// Return ptr must be manually freed with alt_Vectorfloat3PointLayout_free()
CAPI struct alt_Vectorfloat3PointLayout* alt_IPlayer_GetEntityAimOffset(struct alt_IPlayer* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IPlayer.h:73:16
// alt::IPlayer::IsFlashlightActive
// Return type
// cpptype _Bool
// fundamental
CAPI _Bool alt_IPlayer_IsFlashlightActive(struct alt_IPlayer* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IPlayer.h:75:16
// alt::IPlayer::Kick
// Return type
// cpptype void
// fundamental
// cpptype class alt::StringView
CAPI void alt_IPlayer_Kick(struct alt_IPlayer* _instance, struct alt_StringView* reason);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IPlayer.h:82:11
// alt::IPlayer::~IPlayer
// Not public

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IPlayer.h:9:8
// alt::IPlayer::IPlayer
// Constructor
// class is abstract
// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IPlayer.h:9:8
// alt::IPlayer::operator=
// Overloaded operator
// Return type
// cpptype class alt::IPlayer &
// Reference type
// cpptype class alt::IPlayer
// cpptype const class alt::IPlayer &
// Reference type
// cpptype class alt::IPlayer
CAPI void alt_IPlayer_Assign_constIPlayerRef(struct alt_IPlayer* _instance, struct alt_IPlayer* _p0);

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:14:8
// class alt::IVehicle
// derives from class alt::IEntity
// derives from class alt::IWorldObject
// derives from class alt::IBaseObject
typedef struct alt_IVehicle alt_IVehicle;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:14:8
// class alt::IVehicle
// functions from class alt::IVehicle
// has no accessible destructor for 'free' function

// derived record IEntity is not publicly accessible

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:17:20
// alt::IVehicle::GetDriver
// Return type
// cpptype class alt::IPlayer *
// Pointer type
// cpptype class alt::IPlayer
CAPI struct alt_IPlayer* alt_IVehicle_GetDriver(struct alt_IVehicle* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:19:19
// alt::IVehicle::GetMod
// Return type
// cpptype unsigned char
// fundamental
// cpptype unsigned char
// fundamental
CAPI unsigned char alt_IVehicle_GetMod(struct alt_IVehicle* _instance, unsigned char category);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:20:19
// alt::IVehicle::GetModsCount
// Return type
// cpptype unsigned char
// fundamental
// cpptype unsigned char
// fundamental
CAPI unsigned char alt_IVehicle_GetModsCount(struct alt_IVehicle* _instance, unsigned char category);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:21:16
// alt::IVehicle::SetMod
// Return type
// cpptype _Bool
// fundamental
// cpptype unsigned char
// fundamental
// cpptype unsigned char
// fundamental
CAPI _Bool alt_IVehicle_SetMod(struct alt_IVehicle* _instance, unsigned char category, unsigned char id);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:23:19
// alt::IVehicle::GetModKitsCount
// Return type
// cpptype unsigned char
// fundamental
CAPI unsigned char alt_IVehicle_GetModKitsCount(struct alt_IVehicle* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:24:19
// alt::IVehicle::GetModKit
// Return type
// cpptype unsigned char
// fundamental
CAPI unsigned char alt_IVehicle_GetModKit(struct alt_IVehicle* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:25:16
// alt::IVehicle::SetModKit
// Return type
// cpptype _Bool
// fundamental
// cpptype unsigned char
// fundamental
CAPI _Bool alt_IVehicle_SetModKit(struct alt_IVehicle* _instance, unsigned char id);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:27:16
// alt::IVehicle::IsPrimaryColorRGB
// Return type
// cpptype _Bool
// fundamental
CAPI _Bool alt_IVehicle_IsPrimaryColorRGB(struct alt_IVehicle* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:28:19
// alt::IVehicle::GetPrimaryColor
// Return type
// cpptype unsigned char
// fundamental
CAPI unsigned char alt_IVehicle_GetPrimaryColor(struct alt_IVehicle* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:29:16
// alt::IVehicle::GetPrimaryColorRGB
// Return type
// cpptype struct alt::RGBA
// Return ptr must be manually freed with alt_RGBA_free()
CAPI struct alt_RGBA* alt_IVehicle_GetPrimaryColorRGB(struct alt_IVehicle* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:30:16
// alt::IVehicle::SetPrimaryColor
// Return type
// cpptype void
// fundamental
// cpptype unsigned char
// fundamental
CAPI void alt_IVehicle_SetPrimaryColor(struct alt_IVehicle* _instance, unsigned char color);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:31:16
// alt::IVehicle::SetPrimaryColorRGB
// Return type
// cpptype void
// fundamental
// cpptype struct alt::RGBA
CAPI void alt_IVehicle_SetPrimaryColorRGB(struct alt_IVehicle* _instance, struct alt_RGBA* color);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:33:16
// alt::IVehicle::IsSecondaryColorRGB
// Return type
// cpptype _Bool
// fundamental
CAPI _Bool alt_IVehicle_IsSecondaryColorRGB(struct alt_IVehicle* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:34:19
// alt::IVehicle::GetSecondaryColor
// Return type
// cpptype unsigned char
// fundamental
CAPI unsigned char alt_IVehicle_GetSecondaryColor(struct alt_IVehicle* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:35:16
// alt::IVehicle::GetSecondaryColorRGB
// Return type
// cpptype struct alt::RGBA
// Return ptr must be manually freed with alt_RGBA_free()
CAPI struct alt_RGBA* alt_IVehicle_GetSecondaryColorRGB(struct alt_IVehicle* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:36:16
// alt::IVehicle::SetSecondaryColor
// Return type
// cpptype void
// fundamental
// cpptype unsigned char
// fundamental
CAPI void alt_IVehicle_SetSecondaryColor(struct alt_IVehicle* _instance, unsigned char color);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:37:16
// alt::IVehicle::SetSecondaryColorRGB
// Return type
// cpptype void
// fundamental
// cpptype struct alt::RGBA
CAPI void alt_IVehicle_SetSecondaryColorRGB(struct alt_IVehicle* _instance, struct alt_RGBA* color);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:39:19
// alt::IVehicle::GetPearlColor
// Return type
// cpptype unsigned char
// fundamental
CAPI unsigned char alt_IVehicle_GetPearlColor(struct alt_IVehicle* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:40:16
// alt::IVehicle::SetPearlColor
// Return type
// cpptype void
// fundamental
// cpptype unsigned char
// fundamental
CAPI void alt_IVehicle_SetPearlColor(struct alt_IVehicle* _instance, unsigned char color);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:42:19
// alt::IVehicle::GetWheelColor
// Return type
// cpptype unsigned char
// fundamental
CAPI unsigned char alt_IVehicle_GetWheelColor(struct alt_IVehicle* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:43:16
// alt::IVehicle::SetWheelColor
// Return type
// cpptype void
// fundamental
// cpptype unsigned char
// fundamental
CAPI void alt_IVehicle_SetWheelColor(struct alt_IVehicle* _instance, unsigned char color);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:45:19
// alt::IVehicle::GetInteriorColor
// Return type
// cpptype unsigned char
// fundamental
CAPI unsigned char alt_IVehicle_GetInteriorColor(struct alt_IVehicle* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:46:16
// alt::IVehicle::SetInteriorColor
// Return type
// cpptype void
// fundamental
// cpptype unsigned char
// fundamental
CAPI void alt_IVehicle_SetInteriorColor(struct alt_IVehicle* _instance, unsigned char color);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:48:19
// alt::IVehicle::GetDashboardColor
// Return type
// cpptype unsigned char
// fundamental
CAPI unsigned char alt_IVehicle_GetDashboardColor(struct alt_IVehicle* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:49:16
// alt::IVehicle::SetDashboardColor
// Return type
// cpptype void
// fundamental
// cpptype unsigned char
// fundamental
CAPI void alt_IVehicle_SetDashboardColor(struct alt_IVehicle* _instance, unsigned char color);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:51:16
// alt::IVehicle::IsTireSmokeColorCustom
// Return type
// cpptype _Bool
// fundamental
CAPI _Bool alt_IVehicle_IsTireSmokeColorCustom(struct alt_IVehicle* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:52:16
// alt::IVehicle::GetTireSmokeColor
// Return type
// cpptype struct alt::RGBA
// Return ptr must be manually freed with alt_RGBA_free()
CAPI struct alt_RGBA* alt_IVehicle_GetTireSmokeColor(struct alt_IVehicle* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:53:16
// alt::IVehicle::SetTireSmokeColor
// Return type
// cpptype void
// fundamental
// cpptype struct alt::RGBA
CAPI void alt_IVehicle_SetTireSmokeColor(struct alt_IVehicle* _instance, struct alt_RGBA* color);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:55:19
// alt::IVehicle::GetWheelType
// Return type
// cpptype unsigned char
// fundamental
CAPI unsigned char alt_IVehicle_GetWheelType(struct alt_IVehicle* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:56:19
// alt::IVehicle::GetWheelVariation
// Return type
// cpptype unsigned char
// fundamental
CAPI unsigned char alt_IVehicle_GetWheelVariation(struct alt_IVehicle* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:57:16
// alt::IVehicle::SetWheels
// Return type
// cpptype void
// fundamental
// cpptype unsigned char
// fundamental
// cpptype unsigned char
// fundamental
CAPI void alt_IVehicle_SetWheels(struct alt_IVehicle* _instance, unsigned char type, unsigned char variation);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:59:16
// alt::IVehicle::GetCustomTires
// Return type
// cpptype _Bool
// fundamental
CAPI _Bool alt_IVehicle_GetCustomTires(struct alt_IVehicle* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:60:16
// alt::IVehicle::SetCustomTires
// Return type
// cpptype void
// fundamental
// cpptype _Bool
// fundamental
CAPI void alt_IVehicle_SetCustomTires(struct alt_IVehicle* _instance, _Bool state);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:62:19
// alt::IVehicle::GetSpecialDarkness
// Return type
// cpptype unsigned char
// fundamental
CAPI unsigned char alt_IVehicle_GetSpecialDarkness(struct alt_IVehicle* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:63:16
// alt::IVehicle::SetSpecialDarkness
// Return type
// cpptype void
// fundamental
// cpptype unsigned char
// fundamental
CAPI void alt_IVehicle_SetSpecialDarkness(struct alt_IVehicle* _instance, unsigned char value);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:65:20
// alt::IVehicle::GetNumberplateIndex
// Return type
// cpptype unsigned int
// fundamental
CAPI unsigned int alt_IVehicle_GetNumberplateIndex(struct alt_IVehicle* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:66:16
// alt::IVehicle::SetNumberplateIndex
// Return type
// cpptype void
// fundamental
// cpptype unsigned int
// fundamental
CAPI void alt_IVehicle_SetNumberplateIndex(struct alt_IVehicle* _instance, unsigned int index);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:68:22
// alt::IVehicle::GetNumberplateText
// Return type
// cpptype class alt::StringView
// Return ptr must be manually freed with alt_StringView_free()
CAPI struct alt_StringView* alt_IVehicle_GetNumberplateText(struct alt_IVehicle* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:69:16
// alt::IVehicle::SetNumberplateText
// Return type
// cpptype void
// fundamental
// cpptype class alt::StringView
CAPI void alt_IVehicle_SetNumberplateText(struct alt_IVehicle* _instance, struct alt_StringView* text);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:71:19
// alt::IVehicle::GetWindowTint
// Return type
// cpptype unsigned char
// fundamental
CAPI unsigned char alt_IVehicle_GetWindowTint(struct alt_IVehicle* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:72:16
// alt::IVehicle::SetWindowTint
// Return type
// cpptype void
// fundamental
// cpptype unsigned char
// fundamental
CAPI void alt_IVehicle_SetWindowTint(struct alt_IVehicle* _instance, unsigned char tint);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:74:19
// alt::IVehicle::GetDirtLevel
// Return type
// cpptype unsigned char
// fundamental
CAPI unsigned char alt_IVehicle_GetDirtLevel(struct alt_IVehicle* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:75:16
// alt::IVehicle::SetDirtLevel
// Return type
// cpptype void
// fundamental
// cpptype unsigned char
// fundamental
CAPI void alt_IVehicle_SetDirtLevel(struct alt_IVehicle* _instance, unsigned char level);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:77:16
// alt::IVehicle::IsExtraOn
// Return type
// cpptype _Bool
// fundamental
// cpptype unsigned char
// fundamental
CAPI _Bool alt_IVehicle_IsExtraOn(struct alt_IVehicle* _instance, unsigned char extraID);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:78:16
// alt::IVehicle::ToggleExtra
// Return type
// cpptype void
// fundamental
// cpptype unsigned char
// fundamental
// cpptype _Bool
// fundamental
CAPI void alt_IVehicle_ToggleExtra(struct alt_IVehicle* _instance, unsigned char extraID, _Bool state);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:80:16
// alt::IVehicle::IsNeonActive
// Return type
// cpptype _Bool
// fundamental
CAPI _Bool alt_IVehicle_IsNeonActive(struct alt_IVehicle* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:81:16
// alt::IVehicle::GetNeonActive
// Return type
// cpptype void
// fundamental
// cpptype _Bool *
// Pointer type
// cpptype _Bool
// fundamental
// cpptype _Bool *
// Pointer type
// cpptype _Bool
// fundamental
// cpptype _Bool *
// Pointer type
// cpptype _Bool
// fundamental
// cpptype _Bool *
// Pointer type
// cpptype _Bool
// fundamental
CAPI void alt_IVehicle_GetNeonActive(struct alt_IVehicle* _instance, _Bool* left, _Bool* right, _Bool* front, _Bool* back);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:82:16
// alt::IVehicle::SetNeonActive
// Return type
// cpptype void
// fundamental
// cpptype _Bool
// fundamental
// cpptype _Bool
// fundamental
// cpptype _Bool
// fundamental
// cpptype _Bool
// fundamental
CAPI void alt_IVehicle_SetNeonActive(struct alt_IVehicle* _instance, _Bool left, _Bool right, _Bool front, _Bool back);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:83:16
// alt::IVehicle::GetNeonColor
// Return type
// cpptype struct alt::RGBA
// Return ptr must be manually freed with alt_RGBA_free()
CAPI struct alt_RGBA* alt_IVehicle_GetNeonColor(struct alt_IVehicle* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:84:16
// alt::IVehicle::SetNeonColor
// Return type
// cpptype void
// fundamental
// cpptype struct alt::RGBA
CAPI void alt_IVehicle_SetNeonColor(struct alt_IVehicle* _instance, struct alt_RGBA* color);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:86:18
// alt::IVehicle::GetAppearanceDataBase64
// Return type
// cpptype class alt::String
// Return ptr must be manually freed with alt_String_free()
CAPI struct alt_String* alt_IVehicle_GetAppearanceDataBase64(struct alt_IVehicle* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:87:16
// alt::IVehicle::LoadAppearanceDataFromBase64
// Return type
// cpptype void
// fundamental
// cpptype class alt::StringView
CAPI void alt_IVehicle_LoadAppearanceDataFromBase64(struct alt_IVehicle* _instance, struct alt_StringView* base64);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:90:16
// alt::IVehicle::IsEngineOn
// Return type
// cpptype _Bool
// fundamental
CAPI _Bool alt_IVehicle_IsEngineOn(struct alt_IVehicle* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:91:16
// alt::IVehicle::SetEngineOn
// Return type
// cpptype void
// fundamental
// cpptype _Bool
// fundamental
CAPI void alt_IVehicle_SetEngineOn(struct alt_IVehicle* _instance, _Bool state);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:93:16
// alt::IVehicle::IsHandbrakeActive
// Return type
// cpptype _Bool
// fundamental
CAPI _Bool alt_IVehicle_IsHandbrakeActive(struct alt_IVehicle* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:95:19
// alt::IVehicle::GetHeadlightColor
// Return type
// cpptype unsigned char
// fundamental
CAPI unsigned char alt_IVehicle_GetHeadlightColor(struct alt_IVehicle* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:96:16
// alt::IVehicle::SetHeadlightColor
// Return type
// cpptype void
// fundamental
// cpptype unsigned char
// fundamental
CAPI void alt_IVehicle_SetHeadlightColor(struct alt_IVehicle* _instance, unsigned char color);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:98:20
// alt::IVehicle::GetRadioStationIndex
// Return type
// cpptype unsigned int
// fundamental
CAPI unsigned int alt_IVehicle_GetRadioStationIndex(struct alt_IVehicle* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:99:16
// alt::IVehicle::SetRadioStationIndex
// Return type
// cpptype void
// fundamental
// cpptype unsigned int
// fundamental
CAPI void alt_IVehicle_SetRadioStationIndex(struct alt_IVehicle* _instance, unsigned int stationIndex);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:101:16
// alt::IVehicle::IsSirenActive
// Return type
// cpptype _Bool
// fundamental
CAPI _Bool alt_IVehicle_IsSirenActive(struct alt_IVehicle* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:102:16
// alt::IVehicle::SetSirenActive
// Return type
// cpptype void
// fundamental
// cpptype _Bool
// fundamental
CAPI void alt_IVehicle_SetSirenActive(struct alt_IVehicle* _instance, _Bool state);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:105:19
// alt::IVehicle::GetLockState
// Return type
// cpptype unsigned char
// fundamental
CAPI unsigned char alt_IVehicle_GetLockState(struct alt_IVehicle* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:106:16
// alt::IVehicle::SetLockState
// Return type
// cpptype void
// fundamental
// cpptype unsigned char
// fundamental
CAPI void alt_IVehicle_SetLockState(struct alt_IVehicle* _instance, unsigned char state);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:109:19
// alt::IVehicle::GetDoorState
// Return type
// cpptype unsigned char
// fundamental
// cpptype unsigned char
// fundamental
CAPI unsigned char alt_IVehicle_GetDoorState(struct alt_IVehicle* _instance, unsigned char doorId);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:110:16
// alt::IVehicle::SetDoorState
// Return type
// cpptype void
// fundamental
// cpptype unsigned char
// fundamental
// cpptype unsigned char
// fundamental
CAPI void alt_IVehicle_SetDoorState(struct alt_IVehicle* _instance, unsigned char doorId, unsigned char state);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:112:16
// alt::IVehicle::IsWindowOpened
// Return type
// cpptype _Bool
// fundamental
// cpptype unsigned char
// fundamental
CAPI _Bool alt_IVehicle_IsWindowOpened(struct alt_IVehicle* _instance, unsigned char windowId);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:113:16
// alt::IVehicle::SetWindowOpened
// Return type
// cpptype void
// fundamental
// cpptype unsigned char
// fundamental
// cpptype _Bool
// fundamental
CAPI void alt_IVehicle_SetWindowOpened(struct alt_IVehicle* _instance, unsigned char windowId, _Bool state);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:115:16
// alt::IVehicle::IsDaylightOn
// Return type
// cpptype _Bool
// fundamental
CAPI _Bool alt_IVehicle_IsDaylightOn(struct alt_IVehicle* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:116:16
// alt::IVehicle::IsNightlightOn
// Return type
// cpptype _Bool
// fundamental
CAPI _Bool alt_IVehicle_IsNightlightOn(struct alt_IVehicle* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:118:16
// alt::IVehicle::IsRoofOpened
// Return type
// cpptype _Bool
// fundamental
CAPI _Bool alt_IVehicle_IsRoofOpened(struct alt_IVehicle* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:119:16
// alt::IVehicle::SetRoofOpened
// Return type
// cpptype void
// fundamental
// cpptype _Bool
// fundamental
CAPI void alt_IVehicle_SetRoofOpened(struct alt_IVehicle* _instance, _Bool state);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:121:16
// alt::IVehicle::IsFlamethrowerActive
// Return type
// cpptype _Bool
// fundamental
CAPI _Bool alt_IVehicle_IsFlamethrowerActive(struct alt_IVehicle* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:123:18
// alt::IVehicle::GetGameStateBase64
// Return type
// cpptype class alt::String
// Return ptr must be manually freed with alt_String_free()
CAPI struct alt_String* alt_IVehicle_GetGameStateBase64(struct alt_IVehicle* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:124:16
// alt::IVehicle::LoadGameStateFromBase64
// Return type
// cpptype void
// fundamental
// cpptype class alt::StringView
CAPI void alt_IVehicle_LoadGameStateFromBase64(struct alt_IVehicle* _instance, struct alt_StringView* base64);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:127:19
// alt::IVehicle::GetEngineHealth
// Return type
// cpptype int
// fundamental
CAPI int alt_IVehicle_GetEngineHealth(struct alt_IVehicle* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:128:16
// alt::IVehicle::SetEngineHealth
// Return type
// cpptype void
// fundamental
// cpptype int
// fundamental
CAPI void alt_IVehicle_SetEngineHealth(struct alt_IVehicle* _instance, int health);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:130:19
// alt::IVehicle::GetPetrolTankHealth
// Return type
// cpptype int
// fundamental
CAPI int alt_IVehicle_GetPetrolTankHealth(struct alt_IVehicle* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:131:16
// alt::IVehicle::SetPetrolTankHealth
// Return type
// cpptype void
// fundamental
// cpptype int
// fundamental
CAPI void alt_IVehicle_SetPetrolTankHealth(struct alt_IVehicle* _instance, int health);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:133:19
// alt::IVehicle::GetWheelsCount
// Return type
// cpptype unsigned char
// fundamental
CAPI unsigned char alt_IVehicle_GetWheelsCount(struct alt_IVehicle* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:135:16
// alt::IVehicle::IsWheelBurst
// Return type
// cpptype _Bool
// fundamental
// cpptype unsigned char
// fundamental
CAPI _Bool alt_IVehicle_IsWheelBurst(struct alt_IVehicle* _instance, unsigned char wheelId);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:136:16
// alt::IVehicle::SetWheelBurst
// Return type
// cpptype void
// fundamental
// cpptype unsigned char
// fundamental
// cpptype _Bool
// fundamental
CAPI void alt_IVehicle_SetWheelBurst(struct alt_IVehicle* _instance, unsigned char wheelId, _Bool state);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:138:16
// alt::IVehicle::DoesWheelHasTire
// Return type
// cpptype _Bool
// fundamental
// cpptype unsigned char
// fundamental
CAPI _Bool alt_IVehicle_DoesWheelHasTire(struct alt_IVehicle* _instance, unsigned char wheelId);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:139:16
// alt::IVehicle::SetWheelHasTire
// Return type
// cpptype void
// fundamental
// cpptype unsigned char
// fundamental
// cpptype _Bool
// fundamental
CAPI void alt_IVehicle_SetWheelHasTire(struct alt_IVehicle* _instance, unsigned char wheelId, _Bool state);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:141:17
// alt::IVehicle::GetWheelHealth
// Return type
// cpptype float
// fundamental
// cpptype unsigned char
// fundamental
CAPI float alt_IVehicle_GetWheelHealth(struct alt_IVehicle* _instance, unsigned char wheelId);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:142:16
// alt::IVehicle::SetWheelHealth
// Return type
// cpptype void
// fundamental
// cpptype unsigned char
// fundamental
// cpptype float
// fundamental
CAPI void alt_IVehicle_SetWheelHealth(struct alt_IVehicle* _instance, unsigned char wheelId, float health);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:144:19
// alt::IVehicle::GetRepairsCount
// Return type
// cpptype unsigned char
// fundamental
CAPI unsigned char alt_IVehicle_GetRepairsCount(struct alt_IVehicle* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:150:20
// alt::IVehicle::GetBodyHealth
// Return type
// cpptype unsigned int
// fundamental
CAPI unsigned int alt_IVehicle_GetBodyHealth(struct alt_IVehicle* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:151:16
// alt::IVehicle::SetBodyHealth
// Return type
// cpptype void
// fundamental
// cpptype unsigned int
// fundamental
CAPI void alt_IVehicle_SetBodyHealth(struct alt_IVehicle* _instance, unsigned int health);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:152:20
// alt::IVehicle::GetBodyAdditionalHealth
// Return type
// cpptype unsigned int
// fundamental
CAPI unsigned int alt_IVehicle_GetBodyAdditionalHealth(struct alt_IVehicle* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:153:16
// alt::IVehicle::SetBodyAdditionalHealth
// Return type
// cpptype void
// fundamental
// cpptype unsigned int
// fundamental
CAPI void alt_IVehicle_SetBodyAdditionalHealth(struct alt_IVehicle* _instance, unsigned int health);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:155:18
// alt::IVehicle::GetHealthDataBase64
// Return type
// cpptype class alt::String
// Return ptr must be manually freed with alt_String_free()
CAPI struct alt_String* alt_IVehicle_GetHealthDataBase64(struct alt_IVehicle* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:156:16
// alt::IVehicle::LoadHealthDataFromBase64
// Return type
// cpptype void
// fundamental
// cpptype class alt::StringView
CAPI void alt_IVehicle_LoadHealthDataFromBase64(struct alt_IVehicle* _instance, struct alt_StringView* base64);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:159:19
// alt::IVehicle::GetPartDamageLevel
// Return type
// cpptype unsigned char
// fundamental
// cpptype unsigned char
// fundamental
CAPI unsigned char alt_IVehicle_GetPartDamageLevel(struct alt_IVehicle* _instance, unsigned char partId);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:160:16
// alt::IVehicle::SetPartDamageLevel
// Return type
// cpptype void
// fundamental
// cpptype unsigned char
// fundamental
// cpptype unsigned char
// fundamental
CAPI void alt_IVehicle_SetPartDamageLevel(struct alt_IVehicle* _instance, unsigned char partId, unsigned char damage);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:161:19
// alt::IVehicle::GetPartBulletHoles
// Return type
// cpptype unsigned char
// fundamental
// cpptype unsigned char
// fundamental
CAPI unsigned char alt_IVehicle_GetPartBulletHoles(struct alt_IVehicle* _instance, unsigned char partId);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:162:16
// alt::IVehicle::SetPartBulletHoles
// Return type
// cpptype void
// fundamental
// cpptype unsigned char
// fundamental
// cpptype unsigned char
// fundamental
CAPI void alt_IVehicle_SetPartBulletHoles(struct alt_IVehicle* _instance, unsigned char partId, unsigned char shootsCount);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:163:16
// alt::IVehicle::IsLightDamaged
// Return type
// cpptype _Bool
// fundamental
// cpptype unsigned char
// fundamental
CAPI _Bool alt_IVehicle_IsLightDamaged(struct alt_IVehicle* _instance, unsigned char lightId);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:164:16
// alt::IVehicle::SetLightDamaged
// Return type
// cpptype void
// fundamental
// cpptype unsigned char
// fundamental
// cpptype _Bool
// fundamental
CAPI void alt_IVehicle_SetLightDamaged(struct alt_IVehicle* _instance, unsigned char lightId, _Bool isDamaged);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:165:16
// alt::IVehicle::IsWindowDamaged
// Return type
// cpptype _Bool
// fundamental
// cpptype unsigned char
// fundamental
CAPI _Bool alt_IVehicle_IsWindowDamaged(struct alt_IVehicle* _instance, unsigned char windowId);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:166:16
// alt::IVehicle::SetWindowDamaged
// Return type
// cpptype void
// fundamental
// cpptype unsigned char
// fundamental
// cpptype _Bool
// fundamental
CAPI void alt_IVehicle_SetWindowDamaged(struct alt_IVehicle* _instance, unsigned char windowId, _Bool isDamaged);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:167:16
// alt::IVehicle::IsSpecialLightDamaged
// Return type
// cpptype _Bool
// fundamental
// cpptype unsigned char
// fundamental
CAPI _Bool alt_IVehicle_IsSpecialLightDamaged(struct alt_IVehicle* _instance, unsigned char specialLightId);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:168:16
// alt::IVehicle::SetSpecialLightDamaged
// Return type
// cpptype void
// fundamental
// cpptype unsigned char
// fundamental
// cpptype _Bool
// fundamental
CAPI void alt_IVehicle_SetSpecialLightDamaged(struct alt_IVehicle* _instance, unsigned char specialLightId, _Bool isDamaged);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:169:16
// alt::IVehicle::HasArmoredWindows
// Return type
// cpptype _Bool
// fundamental
CAPI _Bool alt_IVehicle_HasArmoredWindows(struct alt_IVehicle* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:170:17
// alt::IVehicle::GetArmoredWindowHealth
// Return type
// cpptype float
// fundamental
// cpptype unsigned char
// fundamental
CAPI float alt_IVehicle_GetArmoredWindowHealth(struct alt_IVehicle* _instance, unsigned char windowId);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:171:16
// alt::IVehicle::SetArmoredWindowHealth
// Return type
// cpptype void
// fundamental
// cpptype unsigned char
// fundamental
// cpptype float
// fundamental
CAPI void alt_IVehicle_SetArmoredWindowHealth(struct alt_IVehicle* _instance, unsigned char windowId, float health);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:172:19
// alt::IVehicle::GetArmoredWindowShootCount
// Return type
// cpptype unsigned char
// fundamental
// cpptype unsigned char
// fundamental
CAPI unsigned char alt_IVehicle_GetArmoredWindowShootCount(struct alt_IVehicle* _instance, unsigned char windowId);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:173:16
// alt::IVehicle::SetArmoredWindowShootCount
// Return type
// cpptype void
// fundamental
// cpptype unsigned char
// fundamental
// cpptype unsigned char
// fundamental
CAPI void alt_IVehicle_SetArmoredWindowShootCount(struct alt_IVehicle* _instance, unsigned char windowId, unsigned char count);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:174:19
// alt::IVehicle::GetBumperDamageLevel
// Return type
// cpptype unsigned char
// fundamental
// cpptype unsigned char
// fundamental
CAPI unsigned char alt_IVehicle_GetBumperDamageLevel(struct alt_IVehicle* _instance, unsigned char bumperId);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:175:16
// alt::IVehicle::SetBumperDamageLevel
// Return type
// cpptype void
// fundamental
// cpptype unsigned char
// fundamental
// cpptype unsigned char
// fundamental
CAPI void alt_IVehicle_SetBumperDamageLevel(struct alt_IVehicle* _instance, unsigned char bumperId, unsigned char damageLevel);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:177:18
// alt::IVehicle::GetDamageDataBase64
// Return type
// cpptype class alt::String
// Return ptr must be manually freed with alt_String_free()
CAPI struct alt_String* alt_IVehicle_GetDamageDataBase64(struct alt_IVehicle* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:178:16
// alt::IVehicle::LoadDamageDataFromBase64
// Return type
// cpptype void
// fundamental
// cpptype class alt::StringView
CAPI void alt_IVehicle_LoadDamageDataFromBase64(struct alt_IVehicle* _instance, struct alt_StringView* base64);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:181:16
// alt::IVehicle::SetManualEngineControl
// Return type
// cpptype void
// fundamental
// cpptype _Bool
// fundamental
CAPI void alt_IVehicle_SetManualEngineControl(struct alt_IVehicle* _instance, _Bool state);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:182:16
// alt::IVehicle::IsManualEngineControl
// Return type
// cpptype _Bool
// fundamental
CAPI _Bool alt_IVehicle_IsManualEngineControl(struct alt_IVehicle* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:184:18
// alt::IVehicle::GetScriptDataBase64
// Return type
// cpptype class alt::String
// Return ptr must be manually freed with alt_String_free()
CAPI struct alt_String* alt_IVehicle_GetScriptDataBase64(struct alt_IVehicle* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:185:16
// alt::IVehicle::LoadScriptDataFromBase64
// Return type
// cpptype void
// fundamental
// cpptype class alt::StringView
CAPI void alt_IVehicle_LoadScriptDataFromBase64(struct alt_IVehicle* _instance, struct alt_StringView* base64);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:188:11
// alt::IVehicle::~IVehicle
// Not public

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:14:8
// alt::IVehicle::IVehicle
// Constructor
// class is abstract
// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/IVehicle.h:14:8
// alt::IVehicle::operator=
// Overloaded operator
// Return type
// cpptype class alt::IVehicle &
// Reference type
// cpptype class alt::IVehicle
// cpptype const class alt::IVehicle &
// Reference type
// cpptype class alt::IVehicle
CAPI void alt_IVehicle_Assign_constIVehicleRef(struct alt_IVehicle* _instance, struct alt_IVehicle* _p0);

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/script-objects/ICheckpoint.h:12:8
// class alt::ICheckpoint
// derives from class alt::IWorldObject
// derives from class alt::IBaseObject
typedef struct alt_ICheckpoint alt_ICheckpoint;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/script-objects/ICheckpoint.h:12:8
// class alt::ICheckpoint
// functions from class alt::ICheckpoint
// has no accessible destructor for 'free' function

// derived record IWorldObject is not publicly accessible

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/script-objects/ICheckpoint.h:15:16
// alt::ICheckpoint::IsGlobal
// Return type
// cpptype _Bool
// fundamental
CAPI _Bool alt_ICheckpoint_IsGlobal(struct alt_ICheckpoint* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/script-objects/ICheckpoint.h:16:20
// alt::ICheckpoint::GetTarget
// Return type
// cpptype class alt::IPlayer *
// Pointer type
// cpptype class alt::IPlayer
CAPI struct alt_IPlayer* alt_ICheckpoint_GetTarget(struct alt_ICheckpoint* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/script-objects/ICheckpoint.h:18:19
// alt::ICheckpoint::GetCheckpointType
// Return type
// cpptype unsigned char
// fundamental
CAPI unsigned char alt_ICheckpoint_GetCheckpointType(struct alt_ICheckpoint* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/script-objects/ICheckpoint.h:19:17
// alt::ICheckpoint::GetHeight
// Return type
// cpptype float
// fundamental
CAPI float alt_ICheckpoint_GetHeight(struct alt_ICheckpoint* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/script-objects/ICheckpoint.h:20:17
// alt::ICheckpoint::GetRadius
// Return type
// cpptype float
// fundamental
CAPI float alt_ICheckpoint_GetRadius(struct alt_ICheckpoint* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/script-objects/ICheckpoint.h:21:16
// alt::ICheckpoint::GetColor
// Return type
// cpptype struct alt::RGBA
// Return ptr must be manually freed with alt_RGBA_free()
CAPI struct alt_RGBA* alt_ICheckpoint_GetColor(struct alt_ICheckpoint* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/script-objects/ICheckpoint.h:23:16
// alt::ICheckpoint::IsEntityIn
// Return type
// cpptype _Bool
// fundamental
// cpptype class alt::IEntity *
// Pointer type
// cpptype class alt::IEntity
CAPI _Bool alt_ICheckpoint_IsEntityIn(struct alt_ICheckpoint* _instance, struct alt_IEntity* ent);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/script-objects/ICheckpoint.h:26:11
// alt::ICheckpoint::~ICheckpoint
// Not public

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/script-objects/ICheckpoint.h:12:8
// alt::ICheckpoint::ICheckpoint
// Constructor
// class is abstract
// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/script-objects/ICheckpoint.h:12:8
// alt::ICheckpoint::operator=
// Overloaded operator
// Return type
// cpptype class alt::ICheckpoint &
// Reference type
// cpptype class alt::ICheckpoint
// cpptype const class alt::ICheckpoint &
// Reference type
// cpptype class alt::ICheckpoint
CAPI void alt_ICheckpoint_Assign_constICheckpointRef(struct alt_ICheckpoint* _instance, struct alt_ICheckpoint* _p0);

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/script-objects/IBlip.h:12:8
// class alt::IBlip
// derives from class alt::IWorldObject
// derives from class alt::IBaseObject
typedef struct alt_IBlip alt_IBlip;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/script-objects/IBlip.h:12:8
// class alt::IBlip
// functions from class alt::IBlip
// has no accessible destructor for 'free' function

// derived record IWorldObject is not publicly accessible

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/script-objects/IBlip.h:31:16
// alt::IBlip::IsGlobal
// Return type
// cpptype _Bool
// fundamental
CAPI _Bool alt_IBlip_IsGlobal(struct alt_IBlip* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/script-objects/IBlip.h:32:20
// alt::IBlip::GetTarget
// Return type
// cpptype class alt::IPlayer *
// Pointer type
// cpptype class alt::IPlayer
CAPI struct alt_IPlayer* alt_IBlip_GetTarget(struct alt_IBlip* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/script-objects/IBlip.h:34:16
// alt::IBlip::IsAttached
// Return type
// cpptype _Bool
// fundamental
CAPI _Bool alt_IBlip_IsAttached(struct alt_IBlip* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/script-objects/IBlip.h:35:20
// alt::IBlip::AttachedTo
// Return type
// cpptype class alt::IEntity *
// Pointer type
// cpptype class alt::IEntity
CAPI struct alt_IEntity* alt_IBlip_AttachedTo(struct alt_IBlip* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/script-objects/IBlip.h:36:16
// alt::IBlip::GetBlipType
// Return type
// cpptype enum alt::IBlip::Type
// enumaral type
CAPI enum alt_IBlip_Type alt_IBlip_GetBlipType(struct alt_IBlip* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/script-objects/IBlip.h:38:16
// alt::IBlip::SetSprite
// Return type
// cpptype void
// fundamental
// cpptype unsigned short
// fundamental
CAPI void alt_IBlip_SetSprite(struct alt_IBlip* _instance, unsigned short sprite);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/script-objects/IBlip.h:39:16
// alt::IBlip::SetColor
// Return type
// cpptype void
// fundamental
// cpptype unsigned char
// fundamental
CAPI void alt_IBlip_SetColor(struct alt_IBlip* _instance, unsigned char color);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/script-objects/IBlip.h:40:16
// alt::IBlip::SetRoute
// Return type
// cpptype void
// fundamental
// cpptype _Bool
// fundamental
CAPI void alt_IBlip_SetRoute(struct alt_IBlip* _instance, _Bool state);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/script-objects/IBlip.h:41:16
// alt::IBlip::SetRouteColor
// Return type
// cpptype void
// fundamental
// cpptype unsigned char
// fundamental
CAPI void alt_IBlip_SetRouteColor(struct alt_IBlip* _instance, unsigned char color);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/script-objects/IBlip.h:44:11
// alt::IBlip::~IBlip
// Not public

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/script-objects/IBlip.h:12:8
// alt::IBlip::IBlip
// Constructor
// class is abstract
// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/script-objects/IBlip.h:12:8
// alt::IBlip::operator=
// Overloaded operator
// Return type
// cpptype class alt::IBlip &
// Reference type
// cpptype class alt::IBlip
// cpptype const class alt::IBlip &
// Reference type
// cpptype class alt::IBlip
CAPI void alt_IBlip_Assign_constIBlipRef(struct alt_IBlip* _instance, struct alt_IBlip* _p0);

typedef enum alt_IBlip_Type {
    ALT_IBLIP_TYPE_VEHICLE = 1,
    ALT_IBLIP_TYPE_PED = 2,
    ALT_IBLIP_TYPE_OBJECT = 3,
    ALT_IBLIP_TYPE_DESTINATION = 4,
    ALT_IBLIP_TYPE_CONT = 5,
    ALT_IBLIP_TYPE_PICKUP_UNK = 6,
    ALT_IBLIP_TYPE_RADIUS = 7,
    ALT_IBLIP_TYPE_PICKUP = 8,
    ALT_IBLIP_TYPE_COP = 9,
    ALT_IBLIP_TYPE_AREA = 11,
    ALT_IBLIP_TYPE_GALLERY = 12,
    ALT_IBLIP_TYPE_PICKUP_OBJECT = 13
};

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/script-objects/IVoiceChannel.h:10:8
// class alt::IVoiceChannel
// derives from class alt::IBaseObject
typedef struct alt_IVoiceChannel alt_IVoiceChannel;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/script-objects/IVoiceChannel.h:10:8
// class alt::IVoiceChannel
// functions from class alt::IVoiceChannel
// has no accessible destructor for 'free' function

// derived record IBaseObject is not publicly accessible

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/script-objects/IVoiceChannel.h:13:16
// alt::IVoiceChannel::AddPlayer
// Return type
// cpptype void
// fundamental
// cpptype class alt::IPlayer *
// Pointer type
// cpptype class alt::IPlayer
CAPI void alt_IVoiceChannel_AddPlayer(struct alt_IVoiceChannel* _instance, struct alt_IPlayer* player);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/script-objects/IVoiceChannel.h:14:16
// alt::IVoiceChannel::RemovePlayer
// Return type
// cpptype void
// fundamental
// cpptype class alt::IPlayer *
// Pointer type
// cpptype class alt::IPlayer
CAPI void alt_IVoiceChannel_RemovePlayer(struct alt_IVoiceChannel* _instance, struct alt_IPlayer* player);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/script-objects/IVoiceChannel.h:15:16
// alt::IVoiceChannel::MutePlayer
// Return type
// cpptype void
// fundamental
// cpptype class alt::IPlayer *
// Pointer type
// cpptype class alt::IPlayer
CAPI void alt_IVoiceChannel_MutePlayer(struct alt_IVoiceChannel* _instance, struct alt_IPlayer* player);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/script-objects/IVoiceChannel.h:16:16
// alt::IVoiceChannel::UnmutePlayer
// Return type
// cpptype void
// fundamental
// cpptype class alt::IPlayer *
// Pointer type
// cpptype class alt::IPlayer
CAPI void alt_IVoiceChannel_UnmutePlayer(struct alt_IVoiceChannel* _instance, struct alt_IPlayer* player);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/script-objects/IVoiceChannel.h:17:16
// alt::IVoiceChannel::IsPlayerConnected
// Return type
// cpptype _Bool
// fundamental
// cpptype class alt::IPlayer *
// Pointer type
// cpptype class alt::IPlayer
CAPI _Bool alt_IVoiceChannel_IsPlayerConnected(struct alt_IVoiceChannel* _instance, struct alt_IPlayer* player);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/script-objects/IVoiceChannel.h:18:16
// alt::IVoiceChannel::IsPlayerMuted
// Return type
// cpptype _Bool
// fundamental
// cpptype class alt::IPlayer *
// Pointer type
// cpptype class alt::IPlayer
CAPI _Bool alt_IVoiceChannel_IsPlayerMuted(struct alt_IVoiceChannel* _instance, struct alt_IPlayer* player);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/script-objects/IVoiceChannel.h:19:16
// alt::IVoiceChannel::IsSpatial
// Return type
// cpptype _Bool
// fundamental
CAPI _Bool alt_IVoiceChannel_IsSpatial(struct alt_IVoiceChannel* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/script-objects/IVoiceChannel.h:20:17
// alt::IVoiceChannel::GetMaxDistance
// Return type
// cpptype float
// fundamental
CAPI float alt_IVoiceChannel_GetMaxDistance(struct alt_IVoiceChannel* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/script-objects/IVoiceChannel.h:23:11
// alt::IVoiceChannel::~IVoiceChannel
// Not public

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/script-objects/IVoiceChannel.h:10:8
// alt::IVoiceChannel::IVoiceChannel
// Constructor
// class is abstract
// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/script-objects/IVoiceChannel.h:10:8
// alt::IVoiceChannel::operator=
// Overloaded operator
// Return type
// cpptype class alt::IVoiceChannel &
// Reference type
// cpptype class alt::IVoiceChannel
// cpptype const class alt::IVoiceChannel &
// Reference type
// cpptype class alt::IVoiceChannel
CAPI void alt_IVoiceChannel_Assign_constIVoiceChannelRef(struct alt_IVoiceChannel* _instance, struct alt_IVoiceChannel* _p0);

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CEvent.h:7:8
// class alt::CEvent
    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CEvent.h:58:8
    // enum alt::CEvent::Type type

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CEvent.h:59:16
    // _Bool cancelled

typedef struct alt_CEvent {
    enum alt_CEvent_Type type;
    _Bool cancelled;
} alt_CEvent;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CEvent.h:7:8
// class alt::CEvent
// functions from class alt::CEvent
CAPI void alt_CEvent_free(struct alt_CEvent* ptr);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CEvent.h:51:3
// alt::CEvent::CEvent
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype enum alt::CEvent::Type
// enumaral type
// Return ptr must be manually freed with alt_CEvent_free()
CAPI struct alt_CEvent* alt_CEvent_Create(enum alt_CEvent_Type _type);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CEvent.h:53:8
// alt::CEvent::GetType
// Return type
// cpptype enum alt::CEvent::Type
// enumaral type
CAPI enum alt_CEvent_Type alt_CEvent_GetType(struct alt_CEvent* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CEvent.h:54:8
// alt::CEvent::WasCancelled
// Return type
// cpptype _Bool
// fundamental
CAPI _Bool alt_CEvent_WasCancelled(struct alt_CEvent* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CEvent.h:55:8
// alt::CEvent::Cancel
// Return type
// cpptype void
// fundamental
CAPI void alt_CEvent_Cancel(struct alt_CEvent* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CEvent.h:7:8
// alt::CEvent::CEvent
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype const class alt::CEvent &
// Reference type
// cpptype class alt::CEvent
// Return ptr must be manually freed with alt_CEvent_free()
CAPI struct alt_CEvent* alt_CEvent_Create_1(struct alt_CEvent* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CEvent.h:7:8
// alt::CEvent::operator=
// Overloaded operator
// Return type
// cpptype class alt::CEvent &
// Reference type
// cpptype class alt::CEvent
// cpptype const class alt::CEvent &
// Reference type
// cpptype class alt::CEvent
CAPI void alt_CEvent_Assign_constCEventRef(struct alt_CEvent* _instance, struct alt_CEvent* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CEvent.h:7:8
// alt::CEvent::CEvent
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype class alt::CEvent &&
// Reference type
// cpptype class alt::CEvent
// Return ptr must be manually freed with alt_CEvent_free()
CAPI struct alt_CEvent* alt_CEvent_Create_2(struct alt_CEvent* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CEvent.h:7:8
// alt::CEvent::~CEvent
// Destructor

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CEvent.h:7:8
// alt::CEvent::operator=
// Overloaded operator
// Return type
// cpptype class alt::CEvent &
// Reference type
// cpptype class alt::CEvent
// cpptype class alt::CEvent &&
// Reference type
// cpptype class alt::CEvent
CAPI void alt_CEvent_Assign_CEventRefRef(struct alt_CEvent* _instance, struct alt_CEvent* _p0);

typedef enum alt_CEvent_Type {
    ALT_CEVENT_TYPE_NONE = 0,
    ALT_CEVENT_TYPE_PLAYER_CONNECT = 1,
    ALT_CEVENT_TYPE_PLAYER_DISCONNECT = 2,
    ALT_CEVENT_TYPE_SERVER_SCRIPT_EVENT = 3,
    ALT_CEVENT_TYPE_CLIENT_SCRIPT_EVENT = 4,
    ALT_CEVENT_TYPE_META_CHANGE = 5,
    ALT_CEVENT_TYPE_SYNCED_META_CHANGE = 6,
    ALT_CEVENT_TYPE_PLAYER_DAMAGE = 7,
    ALT_CEVENT_TYPE_PLAYER_DEATH = 8,
    ALT_CEVENT_TYPE_CHECKPOINT_EVENT = 9,
    ALT_CEVENT_TYPE_COLSHAPE_EVENT = 10,
    ALT_CEVENT_TYPE_PLAYER_ENTER_VEHICLE = 11,
    ALT_CEVENT_TYPE_PLAYER_LEAVE_VEHICLE = 12,
    ALT_CEVENT_TYPE_PLAYER_CHANGE_VEHICLE_SEAT = 13,
    ALT_CEVENT_TYPE_REMOVE_ENTITY_EVENT = 14,
    ALT_CEVENT_TYPE_DATA_NODE_RECEIVED_EVENT = 15,
    ALT_CEVENT_TYPE_CONSOLE_COMMAND_EVENT = 16,
    ALT_CEVENT_TYPE_CONNECTION_COMPLETE = 17,
    ALT_CEVENT_TYPE_DISCONNECT_EVENT = 18,
    ALT_CEVENT_TYPE_WEB_VIEW_EVENT = 19,
    ALT_CEVENT_TYPE_KEYBOARD_EVENT = 20,
    ALT_CEVENT_TYPE_GAME_ENTITY_CREATE = 21,
    ALT_CEVENT_TYPE_GAME_ENTITY_DESTROY = 22,
    ALT_CEVENT_TYPE_ALL = 23,
    ALT_CEVENT_TYPE_SIZE = 24
};

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CServerScriptEvent.h:12:8
// class alt::CServerScriptEvent
// derives from class alt::CEvent
    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CEvent.h:58:8
    // enum alt::CEvent::Type type

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CEvent.h:59:16
    // _Bool cancelled

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CServerScriptEvent.h:27:10
    // class alt::String name

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CServerScriptEvent.h:28:14
    // class alt::MValueList args

typedef struct alt_CServerScriptEvent {
    enum alt_CEvent_Type type;
    _Bool cancelled;
    struct alt_String name;
    struct alt_MValueList args;
} alt_CServerScriptEvent;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CServerScriptEvent.h:12:8
// class alt::CServerScriptEvent
// functions from class alt::CServerScriptEvent
CAPI void alt_CServerScriptEvent_free(struct alt_CServerScriptEvent* ptr);

// derived record CEvent is not publicly accessible

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CServerScriptEvent.h:15:3
// alt::CServerScriptEvent::CServerScriptEvent
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype class alt::StringView
// cpptype class alt::MValueList
// Return ptr must be manually freed with alt_CServerScriptEvent_free()
CAPI struct alt_CServerScriptEvent* alt_CServerScriptEvent_Create(struct alt_StringView* _name, struct alt_MValueList* _args);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CServerScriptEvent.h:23:14
// alt::CServerScriptEvent::GetName
// Return type
// cpptype class alt::StringView
// Return ptr must be manually freed with alt_StringView_free()
CAPI struct alt_StringView* alt_CServerScriptEvent_GetName(struct alt_CServerScriptEvent* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CServerScriptEvent.h:24:14
// alt::CServerScriptEvent::GetArgs
// Return type
// cpptype class alt::MValueList
// Return ptr must be manually freed with alt_MValueList_free()
CAPI struct alt_MValueList* alt_CServerScriptEvent_GetArgs(struct alt_CServerScriptEvent* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CServerScriptEvent.h:12:8
// alt::CServerScriptEvent::CServerScriptEvent
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype const class alt::CServerScriptEvent &
// Reference type
// cpptype class alt::CServerScriptEvent
// Return ptr must be manually freed with alt_CServerScriptEvent_free()
CAPI struct alt_CServerScriptEvent* alt_CServerScriptEvent_Create_1(struct alt_CServerScriptEvent* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CServerScriptEvent.h:12:8
// alt::CServerScriptEvent::CServerScriptEvent
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype class alt::CServerScriptEvent &&
// Reference type
// cpptype class alt::CServerScriptEvent
// Return ptr must be manually freed with alt_CServerScriptEvent_free()
CAPI struct alt_CServerScriptEvent* alt_CServerScriptEvent_Create_2(struct alt_CServerScriptEvent* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CServerScriptEvent.h:12:8
// alt::CServerScriptEvent::operator=
// Overloaded operator
// Return type
// cpptype class alt::CServerScriptEvent &
// Reference type
// cpptype class alt::CServerScriptEvent
// cpptype const class alt::CServerScriptEvent &
// Reference type
// cpptype class alt::CServerScriptEvent
CAPI void alt_CServerScriptEvent_Assign_constCServerScriptEventRef(struct alt_CServerScriptEvent* _instance, struct alt_CServerScriptEvent* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CServerScriptEvent.h:12:8
// alt::CServerScriptEvent::operator=
// Overloaded operator
// Return type
// cpptype class alt::CServerScriptEvent &
// Reference type
// cpptype class alt::CServerScriptEvent
// cpptype class alt::CServerScriptEvent &&
// Reference type
// cpptype class alt::CServerScriptEvent
CAPI void alt_CServerScriptEvent_Assign_CServerScriptEventRefRef(struct alt_CServerScriptEvent* _instance, struct alt_CServerScriptEvent* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CServerScriptEvent.h:12:8
// alt::CServerScriptEvent::~CServerScriptEvent
// Destructor

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CClientScriptEvent.h:37:8
// class alt::CClientScriptEvent
// derives from class alt::CEvent
    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CEvent.h:58:8
    // enum alt::CEvent::Type type

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CEvent.h:59:16
    // _Bool cancelled

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CClientScriptEvent.h:52:10
    // class alt::String name

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CClientScriptEvent.h:53:14
    // class alt::MValueList args

typedef struct alt_CClientScriptEvent {
    enum alt_CEvent_Type type;
    _Bool cancelled;
    struct alt_String name;
    struct alt_MValueList args;
} alt_CClientScriptEvent;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CClientScriptEvent.h:37:8
// class alt::CClientScriptEvent
// functions from class alt::CClientScriptEvent
CAPI void alt_CClientScriptEvent_free(struct alt_CClientScriptEvent* ptr);

// derived record CEvent is not publicly accessible

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CClientScriptEvent.h:40:3
// alt::CClientScriptEvent::CClientScriptEvent
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype class alt::StringView
// cpptype class alt::MValueList
// Return ptr must be manually freed with alt_CClientScriptEvent_free()
CAPI struct alt_CClientScriptEvent* alt_CClientScriptEvent_Create(struct alt_StringView* _name, struct alt_MValueList* _args);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CClientScriptEvent.h:48:14
// alt::CClientScriptEvent::GetName
// Return type
// cpptype class alt::StringView
// Return ptr must be manually freed with alt_StringView_free()
CAPI struct alt_StringView* alt_CClientScriptEvent_GetName(struct alt_CClientScriptEvent* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CClientScriptEvent.h:49:14
// alt::CClientScriptEvent::GetArgs
// Return type
// cpptype class alt::MValueList
// Return ptr must be manually freed with alt_MValueList_free()
CAPI struct alt_MValueList* alt_CClientScriptEvent_GetArgs(struct alt_CClientScriptEvent* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CClientScriptEvent.h:37:8
// alt::CClientScriptEvent::CClientScriptEvent
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype const class alt::CClientScriptEvent &
// Reference type
// cpptype class alt::CClientScriptEvent
// Return ptr must be manually freed with alt_CClientScriptEvent_free()
CAPI struct alt_CClientScriptEvent* alt_CClientScriptEvent_Create_1(struct alt_CClientScriptEvent* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CClientScriptEvent.h:37:8
// alt::CClientScriptEvent::CClientScriptEvent
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype class alt::CClientScriptEvent &&
// Reference type
// cpptype class alt::CClientScriptEvent
// Return ptr must be manually freed with alt_CClientScriptEvent_free()
CAPI struct alt_CClientScriptEvent* alt_CClientScriptEvent_Create_2(struct alt_CClientScriptEvent* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CClientScriptEvent.h:37:8
// alt::CClientScriptEvent::operator=
// Overloaded operator
// Return type
// cpptype class alt::CClientScriptEvent &
// Reference type
// cpptype class alt::CClientScriptEvent
// cpptype const class alt::CClientScriptEvent &
// Reference type
// cpptype class alt::CClientScriptEvent
CAPI void alt_CClientScriptEvent_Assign_constCClientScriptEventRef(struct alt_CClientScriptEvent* _instance, struct alt_CClientScriptEvent* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CClientScriptEvent.h:37:8
// alt::CClientScriptEvent::operator=
// Overloaded operator
// Return type
// cpptype class alt::CClientScriptEvent &
// Reference type
// cpptype class alt::CClientScriptEvent
// cpptype class alt::CClientScriptEvent &&
// Reference type
// cpptype class alt::CClientScriptEvent
CAPI void alt_CClientScriptEvent_Assign_CClientScriptEventRefRef(struct alt_CClientScriptEvent* _instance, struct alt_CClientScriptEvent* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CClientScriptEvent.h:37:8
// alt::CClientScriptEvent::~CClientScriptEvent
// Destructor

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerConnectEvent.h:12:8
// class alt::CPlayerConnectEvent
// derives from class alt::CEvent
    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CEvent.h:58:8
    // enum alt::CEvent::Type type

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CEvent.h:59:16
    // _Bool cancelled

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerConnectEvent.h:31:12
    // class alt::IPlayer * target

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerConnectEvent.h:32:10
    // class alt::String reason

typedef struct alt_CPlayerConnectEvent {
    enum alt_CEvent_Type type;
    _Bool cancelled;
    struct alt_IPlayer* target;
    struct alt_String reason;
} alt_CPlayerConnectEvent;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerConnectEvent.h:12:8
// class alt::CPlayerConnectEvent
// functions from class alt::CPlayerConnectEvent
CAPI void alt_CPlayerConnectEvent_free(struct alt_CPlayerConnectEvent* ptr);

// derived record CEvent is not publicly accessible

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerConnectEvent.h:15:3
// alt::CPlayerConnectEvent::CPlayerConnectEvent
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype class alt::IPlayer *
// Pointer type
// cpptype class alt::IPlayer
// Return ptr must be manually freed with alt_CPlayerConnectEvent_free()
CAPI struct alt_CPlayerConnectEvent* alt_CPlayerConnectEvent_Create(struct alt_IPlayer* _target);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerConnectEvent.h:21:12
// alt::CPlayerConnectEvent::GetTarget
// Return type
// cpptype class alt::IPlayer *
// Pointer type
// cpptype class alt::IPlayer
CAPI struct alt_IPlayer* alt_CPlayerConnectEvent_GetTarget(struct alt_CPlayerConnectEvent* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerConnectEvent.h:22:14
// alt::CPlayerConnectEvent::GetReason
// Return type
// cpptype class alt::StringView
// Return ptr must be manually freed with alt_StringView_free()
CAPI struct alt_StringView* alt_CPlayerConnectEvent_GetReason(struct alt_CPlayerConnectEvent* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerConnectEvent.h:24:8
// alt::CPlayerConnectEvent::Cancel
// Return type
// cpptype void
// fundamental
// cpptype class alt::StringView
CAPI void alt_CPlayerConnectEvent_Cancel(struct alt_CPlayerConnectEvent* _instance, struct alt_StringView* _reason);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerConnectEvent.h:12:8
// alt::CPlayerConnectEvent::CPlayerConnectEvent
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype const class alt::CPlayerConnectEvent &
// Reference type
// cpptype class alt::CPlayerConnectEvent
// Return ptr must be manually freed with alt_CPlayerConnectEvent_free()
CAPI struct alt_CPlayerConnectEvent* alt_CPlayerConnectEvent_Create_1(struct alt_CPlayerConnectEvent* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerConnectEvent.h:12:8
// alt::CPlayerConnectEvent::CPlayerConnectEvent
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype class alt::CPlayerConnectEvent &&
// Reference type
// cpptype class alt::CPlayerConnectEvent
// Return ptr must be manually freed with alt_CPlayerConnectEvent_free()
CAPI struct alt_CPlayerConnectEvent* alt_CPlayerConnectEvent_Create_2(struct alt_CPlayerConnectEvent* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerConnectEvent.h:12:8
// alt::CPlayerConnectEvent::operator=
// Overloaded operator
// Return type
// cpptype class alt::CPlayerConnectEvent &
// Reference type
// cpptype class alt::CPlayerConnectEvent
// cpptype const class alt::CPlayerConnectEvent &
// Reference type
// cpptype class alt::CPlayerConnectEvent
CAPI void alt_CPlayerConnectEvent_Assign_constCPlayerConnectEventRef(struct alt_CPlayerConnectEvent* _instance, struct alt_CPlayerConnectEvent* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerConnectEvent.h:12:8
// alt::CPlayerConnectEvent::operator=
// Overloaded operator
// Return type
// cpptype class alt::CPlayerConnectEvent &
// Reference type
// cpptype class alt::CPlayerConnectEvent
// cpptype class alt::CPlayerConnectEvent &&
// Reference type
// cpptype class alt::CPlayerConnectEvent
CAPI void alt_CPlayerConnectEvent_Assign_CPlayerConnectEventRefRef(struct alt_CPlayerConnectEvent* _instance, struct alt_CPlayerConnectEvent* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerConnectEvent.h:12:8
// alt::CPlayerConnectEvent::~CPlayerConnectEvent
// Destructor

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerDisconnectEvent.h:12:8
// class alt::CPlayerDisconnectEvent
// derives from class alt::CEvent
    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CEvent.h:58:8
    // enum alt::CEvent::Type type

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CEvent.h:59:16
    // _Bool cancelled

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerDisconnectEvent.h:27:12
    // class alt::IPlayer * target

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerDisconnectEvent.h:28:10
    // class alt::String reason

typedef struct alt_CPlayerDisconnectEvent {
    enum alt_CEvent_Type type;
    _Bool cancelled;
    struct alt_IPlayer* target;
    struct alt_String reason;
} alt_CPlayerDisconnectEvent;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerDisconnectEvent.h:12:8
// class alt::CPlayerDisconnectEvent
// functions from class alt::CPlayerDisconnectEvent
CAPI void alt_CPlayerDisconnectEvent_free(struct alt_CPlayerDisconnectEvent* ptr);

// derived record CEvent is not publicly accessible

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerDisconnectEvent.h:15:3
// alt::CPlayerDisconnectEvent::CPlayerDisconnectEvent
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype class alt::IPlayer *
// Pointer type
// cpptype class alt::IPlayer
// cpptype class alt::StringView
// Return ptr must be manually freed with alt_CPlayerDisconnectEvent_free()
CAPI struct alt_CPlayerDisconnectEvent* alt_CPlayerDisconnectEvent_Create(struct alt_IPlayer* _target, struct alt_StringView* _reason);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerDisconnectEvent.h:23:12
// alt::CPlayerDisconnectEvent::GetTarget
// Return type
// cpptype class alt::IPlayer *
// Pointer type
// cpptype class alt::IPlayer
CAPI struct alt_IPlayer* alt_CPlayerDisconnectEvent_GetTarget(struct alt_CPlayerDisconnectEvent* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerDisconnectEvent.h:24:14
// alt::CPlayerDisconnectEvent::GetReason
// Return type
// cpptype class alt::StringView
// Return ptr must be manually freed with alt_StringView_free()
CAPI struct alt_StringView* alt_CPlayerDisconnectEvent_GetReason(struct alt_CPlayerDisconnectEvent* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerDisconnectEvent.h:12:8
// alt::CPlayerDisconnectEvent::CPlayerDisconnectEvent
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype const class alt::CPlayerDisconnectEvent &
// Reference type
// cpptype class alt::CPlayerDisconnectEvent
// Return ptr must be manually freed with alt_CPlayerDisconnectEvent_free()
CAPI struct alt_CPlayerDisconnectEvent* alt_CPlayerDisconnectEvent_Create_1(struct alt_CPlayerDisconnectEvent* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerDisconnectEvent.h:12:8
// alt::CPlayerDisconnectEvent::CPlayerDisconnectEvent
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype class alt::CPlayerDisconnectEvent &&
// Reference type
// cpptype class alt::CPlayerDisconnectEvent
// Return ptr must be manually freed with alt_CPlayerDisconnectEvent_free()
CAPI struct alt_CPlayerDisconnectEvent* alt_CPlayerDisconnectEvent_Create_2(struct alt_CPlayerDisconnectEvent* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerDisconnectEvent.h:12:8
// alt::CPlayerDisconnectEvent::operator=
// Overloaded operator
// Return type
// cpptype class alt::CPlayerDisconnectEvent &
// Reference type
// cpptype class alt::CPlayerDisconnectEvent
// cpptype const class alt::CPlayerDisconnectEvent &
// Reference type
// cpptype class alt::CPlayerDisconnectEvent
CAPI void alt_CPlayerDisconnectEvent_Assign_constCPlayerDisconnectEventRef(struct alt_CPlayerDisconnectEvent* _instance, struct alt_CPlayerDisconnectEvent* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerDisconnectEvent.h:12:8
// alt::CPlayerDisconnectEvent::operator=
// Overloaded operator
// Return type
// cpptype class alt::CPlayerDisconnectEvent &
// Reference type
// cpptype class alt::CPlayerDisconnectEvent
// cpptype class alt::CPlayerDisconnectEvent &&
// Reference type
// cpptype class alt::CPlayerDisconnectEvent
CAPI void alt_CPlayerDisconnectEvent_Assign_CPlayerDisconnectEventRefRef(struct alt_CPlayerDisconnectEvent* _instance, struct alt_CPlayerDisconnectEvent* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerDisconnectEvent.h:12:8
// alt::CPlayerDisconnectEvent::~CPlayerDisconnectEvent
// Destructor

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerDamageEvent.h:12:8
// class alt::CPlayerDamageEvent
// derives from class alt::CEvent
    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CEvent.h:58:8
    // enum alt::CEvent::Type type

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CEvent.h:59:16
    // _Bool cancelled

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerDamageEvent.h:31:12
    // class alt::IPlayer * target

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerDamageEvent.h:32:12
    // class alt::IEntity * attacker

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerDamageEvent.h:33:12
    // uint16_t damage

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerDamageEvent.h:34:12
    // uint32_t weapon

typedef struct alt_CPlayerDamageEvent {
    enum alt_CEvent_Type type;
    _Bool cancelled;
    struct alt_IPlayer* target;
    struct alt_IEntity* attacker;
    unsigned short damage;
    unsigned int weapon;
} alt_CPlayerDamageEvent;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerDamageEvent.h:12:8
// class alt::CPlayerDamageEvent
// functions from class alt::CPlayerDamageEvent
CAPI void alt_CPlayerDamageEvent_free(struct alt_CPlayerDamageEvent* ptr);

// derived record CEvent is not publicly accessible

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerDamageEvent.h:15:3
// alt::CPlayerDamageEvent::CPlayerDamageEvent
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype class alt::IPlayer *
// Pointer type
// cpptype class alt::IPlayer
// cpptype class alt::IEntity *
// Pointer type
// cpptype class alt::IEntity
// cpptype unsigned short
// fundamental
// cpptype unsigned int
// fundamental
// Return ptr must be manually freed with alt_CPlayerDamageEvent_free()
CAPI struct alt_CPlayerDamageEvent* alt_CPlayerDamageEvent_Create(struct alt_IPlayer* _target, struct alt_IEntity* _attacker, unsigned short _damage, unsigned int _weapon);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerDamageEvent.h:25:12
// alt::CPlayerDamageEvent::GetTarget
// Return type
// cpptype class alt::IPlayer *
// Pointer type
// cpptype class alt::IPlayer
CAPI struct alt_IPlayer* alt_CPlayerDamageEvent_GetTarget(struct alt_CPlayerDamageEvent* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerDamageEvent.h:26:12
// alt::CPlayerDamageEvent::GetAttacker
// Return type
// cpptype class alt::IEntity *
// Pointer type
// cpptype class alt::IEntity
CAPI struct alt_IEntity* alt_CPlayerDamageEvent_GetAttacker(struct alt_CPlayerDamageEvent* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerDamageEvent.h:27:12
// alt::CPlayerDamageEvent::GetDamage
// Return type
// cpptype unsigned short
// fundamental
CAPI unsigned short alt_CPlayerDamageEvent_GetDamage(struct alt_CPlayerDamageEvent* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerDamageEvent.h:28:12
// alt::CPlayerDamageEvent::GetWeapon
// Return type
// cpptype unsigned int
// fundamental
CAPI unsigned int alt_CPlayerDamageEvent_GetWeapon(struct alt_CPlayerDamageEvent* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerDamageEvent.h:12:8
// alt::CPlayerDamageEvent::CPlayerDamageEvent
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype const class alt::CPlayerDamageEvent &
// Reference type
// cpptype class alt::CPlayerDamageEvent
// Return ptr must be manually freed with alt_CPlayerDamageEvent_free()
CAPI struct alt_CPlayerDamageEvent* alt_CPlayerDamageEvent_Create_1(struct alt_CPlayerDamageEvent* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerDamageEvent.h:12:8
// alt::CPlayerDamageEvent::operator=
// Overloaded operator
// Return type
// cpptype class alt::CPlayerDamageEvent &
// Reference type
// cpptype class alt::CPlayerDamageEvent
// cpptype const class alt::CPlayerDamageEvent &
// Reference type
// cpptype class alt::CPlayerDamageEvent
CAPI void alt_CPlayerDamageEvent_Assign_constCPlayerDamageEventRef(struct alt_CPlayerDamageEvent* _instance, struct alt_CPlayerDamageEvent* _p0);

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerDeathEvent.h:12:8
// class alt::CPlayerDeathEvent
// derives from class alt::CEvent
    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CEvent.h:58:8
    // enum alt::CEvent::Type type

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CEvent.h:59:16
    // _Bool cancelled

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerDeathEvent.h:29:12
    // class alt::IPlayer * target

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerDeathEvent.h:30:12
    // class alt::IEntity * killer

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerDeathEvent.h:31:12
    // uint32_t weapon

typedef struct alt_CPlayerDeathEvent {
    enum alt_CEvent_Type type;
    _Bool cancelled;
    struct alt_IPlayer* target;
    struct alt_IEntity* killer;
    unsigned int weapon;
} alt_CPlayerDeathEvent;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerDeathEvent.h:12:8
// class alt::CPlayerDeathEvent
// functions from class alt::CPlayerDeathEvent
CAPI void alt_CPlayerDeathEvent_free(struct alt_CPlayerDeathEvent* ptr);

// derived record CEvent is not publicly accessible

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerDeathEvent.h:15:3
// alt::CPlayerDeathEvent::CPlayerDeathEvent
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype class alt::IPlayer *
// Pointer type
// cpptype class alt::IPlayer
// cpptype class alt::IEntity *
// Pointer type
// cpptype class alt::IEntity
// cpptype unsigned int
// fundamental
// Return ptr must be manually freed with alt_CPlayerDeathEvent_free()
CAPI struct alt_CPlayerDeathEvent* alt_CPlayerDeathEvent_Create(struct alt_IPlayer* _target, struct alt_IEntity* _killer, unsigned int _weapon);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerDeathEvent.h:24:12
// alt::CPlayerDeathEvent::GetTarget
// Return type
// cpptype class alt::IPlayer *
// Pointer type
// cpptype class alt::IPlayer
CAPI struct alt_IPlayer* alt_CPlayerDeathEvent_GetTarget(struct alt_CPlayerDeathEvent* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerDeathEvent.h:25:12
// alt::CPlayerDeathEvent::GetKiller
// Return type
// cpptype class alt::IEntity *
// Pointer type
// cpptype class alt::IEntity
CAPI struct alt_IEntity* alt_CPlayerDeathEvent_GetKiller(struct alt_CPlayerDeathEvent* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerDeathEvent.h:26:12
// alt::CPlayerDeathEvent::GetWeapon
// Return type
// cpptype unsigned int
// fundamental
CAPI unsigned int alt_CPlayerDeathEvent_GetWeapon(struct alt_CPlayerDeathEvent* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerDeathEvent.h:12:8
// alt::CPlayerDeathEvent::CPlayerDeathEvent
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype const class alt::CPlayerDeathEvent &
// Reference type
// cpptype class alt::CPlayerDeathEvent
// Return ptr must be manually freed with alt_CPlayerDeathEvent_free()
CAPI struct alt_CPlayerDeathEvent* alt_CPlayerDeathEvent_Create_1(struct alt_CPlayerDeathEvent* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerDeathEvent.h:12:8
// alt::CPlayerDeathEvent::operator=
// Overloaded operator
// Return type
// cpptype class alt::CPlayerDeathEvent &
// Reference type
// cpptype class alt::CPlayerDeathEvent
// cpptype const class alt::CPlayerDeathEvent &
// Reference type
// cpptype class alt::CPlayerDeathEvent
CAPI void alt_CPlayerDeathEvent_Assign_constCPlayerDeathEventRef(struct alt_CPlayerDeathEvent* _instance, struct alt_CPlayerDeathEvent* _p0);

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CCheckpointEvent.h:10:8
// class alt::CCheckpointEvent
// derives from class alt::CEvent
    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CEvent.h:58:8
    // enum alt::CEvent::Type type

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CEvent.h:59:16
    // _Bool cancelled

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CCheckpointEvent.h:27:16
    // class alt::ICheckpoint * target

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CCheckpointEvent.h:28:12
    // class alt::IEntity * entity

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CCheckpointEvent.h:29:8
    // _Bool state

typedef struct alt_CCheckpointEvent {
    enum alt_CEvent_Type type;
    _Bool cancelled;
    struct alt_ICheckpoint* target;
    struct alt_IEntity* entity;
    _Bool state;
} alt_CCheckpointEvent;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CCheckpointEvent.h:10:8
// class alt::CCheckpointEvent
// functions from class alt::CCheckpointEvent
CAPI void alt_CCheckpointEvent_free(struct alt_CCheckpointEvent* ptr);

// derived record CEvent is not publicly accessible

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CCheckpointEvent.h:13:3
// alt::CCheckpointEvent::CCheckpointEvent
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype class alt::ICheckpoint *
// Pointer type
// cpptype class alt::ICheckpoint
// cpptype class alt::IEntity *
// Pointer type
// cpptype class alt::IEntity
// cpptype _Bool
// fundamental
// Return ptr must be manually freed with alt_CCheckpointEvent_free()
CAPI struct alt_CCheckpointEvent* alt_CCheckpointEvent_Create(struct alt_ICheckpoint* _target, struct alt_IEntity* _entity, _Bool _state);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CCheckpointEvent.h:22:16
// alt::CCheckpointEvent::GetTarget
// Return type
// cpptype class alt::ICheckpoint *
// Pointer type
// cpptype class alt::ICheckpoint
CAPI struct alt_ICheckpoint* alt_CCheckpointEvent_GetTarget(struct alt_CCheckpointEvent* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CCheckpointEvent.h:23:12
// alt::CCheckpointEvent::GetEntity
// Return type
// cpptype class alt::IEntity *
// Pointer type
// cpptype class alt::IEntity
CAPI struct alt_IEntity* alt_CCheckpointEvent_GetEntity(struct alt_CCheckpointEvent* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CCheckpointEvent.h:24:8
// alt::CCheckpointEvent::GetState
// Return type
// cpptype _Bool
// fundamental
CAPI _Bool alt_CCheckpointEvent_GetState(struct alt_CCheckpointEvent* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CCheckpointEvent.h:10:8
// alt::CCheckpointEvent::CCheckpointEvent
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype const class alt::CCheckpointEvent &
// Reference type
// cpptype class alt::CCheckpointEvent
// Return ptr must be manually freed with alt_CCheckpointEvent_free()
CAPI struct alt_CCheckpointEvent* alt_CCheckpointEvent_Create_1(struct alt_CCheckpointEvent* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CCheckpointEvent.h:10:8
// alt::CCheckpointEvent::operator=
// Overloaded operator
// Return type
// cpptype class alt::CCheckpointEvent &
// Reference type
// cpptype class alt::CCheckpointEvent
// cpptype const class alt::CCheckpointEvent &
// Reference type
// cpptype class alt::CCheckpointEvent
CAPI void alt_CCheckpointEvent_Assign_constCCheckpointEventRef(struct alt_CCheckpointEvent* _instance, struct alt_CCheckpointEvent* _p0);

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CColShapeEvent.h:10:8
// class alt::CColShapeEvent
// derives from class alt::CEvent
    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CEvent.h:58:8
    // enum alt::CEvent::Type type

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CEvent.h:59:16
    // _Bool cancelled

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CColShapeEvent.h:27:14
    // class alt::IColShape * target

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CColShapeEvent.h:28:12
    // class alt::IEntity * entity

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CColShapeEvent.h:29:8
    // _Bool state

typedef struct alt_CColShapeEvent {
    enum alt_CEvent_Type type;
    _Bool cancelled;
    struct alt_IColShape* target;
    struct alt_IEntity* entity;
    _Bool state;
} alt_CColShapeEvent;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CColShapeEvent.h:10:8
// class alt::CColShapeEvent
// functions from class alt::CColShapeEvent
CAPI void alt_CColShapeEvent_free(struct alt_CColShapeEvent* ptr);

// derived record CEvent is not publicly accessible

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CColShapeEvent.h:13:3
// alt::CColShapeEvent::CColShapeEvent
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype class alt::IColShape *
// Pointer type
// cpptype class alt::IColShape
// cpptype class alt::IEntity *
// Pointer type
// cpptype class alt::IEntity
// cpptype _Bool
// fundamental
// Return ptr must be manually freed with alt_CColShapeEvent_free()
CAPI struct alt_CColShapeEvent* alt_CColShapeEvent_Create(struct alt_IColShape* _target, struct alt_IEntity* _entity, _Bool _state);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CColShapeEvent.h:22:14
// alt::CColShapeEvent::GetTarget
// Return type
// cpptype class alt::IColShape *
// Pointer type
// cpptype class alt::IColShape
CAPI struct alt_IColShape* alt_CColShapeEvent_GetTarget(struct alt_CColShapeEvent* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CColShapeEvent.h:23:12
// alt::CColShapeEvent::GetEntity
// Return type
// cpptype class alt::IEntity *
// Pointer type
// cpptype class alt::IEntity
CAPI struct alt_IEntity* alt_CColShapeEvent_GetEntity(struct alt_CColShapeEvent* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CColShapeEvent.h:24:8
// alt::CColShapeEvent::GetState
// Return type
// cpptype _Bool
// fundamental
CAPI _Bool alt_CColShapeEvent_GetState(struct alt_CColShapeEvent* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CColShapeEvent.h:10:8
// alt::CColShapeEvent::CColShapeEvent
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype const class alt::CColShapeEvent &
// Reference type
// cpptype class alt::CColShapeEvent
// Return ptr must be manually freed with alt_CColShapeEvent_free()
CAPI struct alt_CColShapeEvent* alt_CColShapeEvent_Create_1(struct alt_CColShapeEvent* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CColShapeEvent.h:10:8
// alt::CColShapeEvent::operator=
// Overloaded operator
// Return type
// cpptype class alt::CColShapeEvent &
// Reference type
// cpptype class alt::CColShapeEvent
// cpptype const class alt::CColShapeEvent &
// Reference type
// cpptype class alt::CColShapeEvent
CAPI void alt_CColShapeEvent_Assign_constCColShapeEventRef(struct alt_CColShapeEvent* _instance, struct alt_CColShapeEvent* _p0);

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerEnterVehicleEvent.h:10:8
// class alt::CPlayerEnterVehicleEvent
// derives from class alt::CEvent
    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CEvent.h:58:8
    // enum alt::CEvent::Type type

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CEvent.h:59:16
    // _Bool cancelled

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerEnterVehicleEvent.h:27:13
    // class alt::IVehicle * target

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerEnterVehicleEvent.h:28:12
    // class alt::IPlayer * player

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerEnterVehicleEvent.h:29:11
    // uint8_t seat

typedef struct alt_CPlayerEnterVehicleEvent {
    enum alt_CEvent_Type type;
    _Bool cancelled;
    struct alt_IVehicle* target;
    struct alt_IPlayer* player;
    unsigned char seat;
} alt_CPlayerEnterVehicleEvent;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerEnterVehicleEvent.h:10:8
// class alt::CPlayerEnterVehicleEvent
// functions from class alt::CPlayerEnterVehicleEvent
CAPI void alt_CPlayerEnterVehicleEvent_free(struct alt_CPlayerEnterVehicleEvent* ptr);

// derived record CEvent is not publicly accessible

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerEnterVehicleEvent.h:13:3
// alt::CPlayerEnterVehicleEvent::CPlayerEnterVehicleEvent
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype class alt::IVehicle *
// Pointer type
// cpptype class alt::IVehicle
// cpptype class alt::IPlayer *
// Pointer type
// cpptype class alt::IPlayer
// cpptype unsigned char
// fundamental
// Return ptr must be manually freed with alt_CPlayerEnterVehicleEvent_free()
CAPI struct alt_CPlayerEnterVehicleEvent* alt_CPlayerEnterVehicleEvent_Create(struct alt_IVehicle* _target, struct alt_IPlayer* _player, unsigned char _seat);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerEnterVehicleEvent.h:22:13
// alt::CPlayerEnterVehicleEvent::GetTarget
// Return type
// cpptype class alt::IVehicle *
// Pointer type
// cpptype class alt::IVehicle
CAPI struct alt_IVehicle* alt_CPlayerEnterVehicleEvent_GetTarget(struct alt_CPlayerEnterVehicleEvent* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerEnterVehicleEvent.h:23:12
// alt::CPlayerEnterVehicleEvent::GetPlayer
// Return type
// cpptype class alt::IPlayer *
// Pointer type
// cpptype class alt::IPlayer
CAPI struct alt_IPlayer* alt_CPlayerEnterVehicleEvent_GetPlayer(struct alt_CPlayerEnterVehicleEvent* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerEnterVehicleEvent.h:24:11
// alt::CPlayerEnterVehicleEvent::GetSeat
// Return type
// cpptype unsigned char
// fundamental
CAPI unsigned char alt_CPlayerEnterVehicleEvent_GetSeat(struct alt_CPlayerEnterVehicleEvent* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerEnterVehicleEvent.h:10:8
// alt::CPlayerEnterVehicleEvent::CPlayerEnterVehicleEvent
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype const class alt::CPlayerEnterVehicleEvent &
// Reference type
// cpptype class alt::CPlayerEnterVehicleEvent
// Return ptr must be manually freed with alt_CPlayerEnterVehicleEvent_free()
CAPI struct alt_CPlayerEnterVehicleEvent* alt_CPlayerEnterVehicleEvent_Create_1(struct alt_CPlayerEnterVehicleEvent* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerEnterVehicleEvent.h:10:8
// alt::CPlayerEnterVehicleEvent::operator=
// Overloaded operator
// Return type
// cpptype class alt::CPlayerEnterVehicleEvent &
// Reference type
// cpptype class alt::CPlayerEnterVehicleEvent
// cpptype const class alt::CPlayerEnterVehicleEvent &
// Reference type
// cpptype class alt::CPlayerEnterVehicleEvent
CAPI void alt_CPlayerEnterVehicleEvent_Assign_constCPlayerEnterVehicleEventRef(struct alt_CPlayerEnterVehicleEvent* _instance, struct alt_CPlayerEnterVehicleEvent* _p0);

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerLeaveVehicleEvent.h:10:8
// class alt::CPlayerLeaveVehicleEvent
// derives from class alt::CEvent
    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CEvent.h:58:8
    // enum alt::CEvent::Type type

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CEvent.h:59:16
    // _Bool cancelled

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerLeaveVehicleEvent.h:27:13
    // class alt::IVehicle * target

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerLeaveVehicleEvent.h:28:12
    // class alt::IPlayer * player

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerLeaveVehicleEvent.h:29:11
    // uint8_t seat

typedef struct alt_CPlayerLeaveVehicleEvent {
    enum alt_CEvent_Type type;
    _Bool cancelled;
    struct alt_IVehicle* target;
    struct alt_IPlayer* player;
    unsigned char seat;
} alt_CPlayerLeaveVehicleEvent;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerLeaveVehicleEvent.h:10:8
// class alt::CPlayerLeaveVehicleEvent
// functions from class alt::CPlayerLeaveVehicleEvent
CAPI void alt_CPlayerLeaveVehicleEvent_free(struct alt_CPlayerLeaveVehicleEvent* ptr);

// derived record CEvent is not publicly accessible

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerLeaveVehicleEvent.h:13:3
// alt::CPlayerLeaveVehicleEvent::CPlayerLeaveVehicleEvent
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype class alt::IVehicle *
// Pointer type
// cpptype class alt::IVehicle
// cpptype class alt::IPlayer *
// Pointer type
// cpptype class alt::IPlayer
// cpptype unsigned char
// fundamental
// Return ptr must be manually freed with alt_CPlayerLeaveVehicleEvent_free()
CAPI struct alt_CPlayerLeaveVehicleEvent* alt_CPlayerLeaveVehicleEvent_Create(struct alt_IVehicle* _target, struct alt_IPlayer* _player, unsigned char _seat);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerLeaveVehicleEvent.h:22:13
// alt::CPlayerLeaveVehicleEvent::GetTarget
// Return type
// cpptype class alt::IVehicle *
// Pointer type
// cpptype class alt::IVehicle
CAPI struct alt_IVehicle* alt_CPlayerLeaveVehicleEvent_GetTarget(struct alt_CPlayerLeaveVehicleEvent* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerLeaveVehicleEvent.h:23:12
// alt::CPlayerLeaveVehicleEvent::GetPlayer
// Return type
// cpptype class alt::IPlayer *
// Pointer type
// cpptype class alt::IPlayer
CAPI struct alt_IPlayer* alt_CPlayerLeaveVehicleEvent_GetPlayer(struct alt_CPlayerLeaveVehicleEvent* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerLeaveVehicleEvent.h:24:11
// alt::CPlayerLeaveVehicleEvent::GetSeat
// Return type
// cpptype unsigned char
// fundamental
CAPI unsigned char alt_CPlayerLeaveVehicleEvent_GetSeat(struct alt_CPlayerLeaveVehicleEvent* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerLeaveVehicleEvent.h:10:8
// alt::CPlayerLeaveVehicleEvent::CPlayerLeaveVehicleEvent
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype const class alt::CPlayerLeaveVehicleEvent &
// Reference type
// cpptype class alt::CPlayerLeaveVehicleEvent
// Return ptr must be manually freed with alt_CPlayerLeaveVehicleEvent_free()
CAPI struct alt_CPlayerLeaveVehicleEvent* alt_CPlayerLeaveVehicleEvent_Create_1(struct alt_CPlayerLeaveVehicleEvent* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerLeaveVehicleEvent.h:10:8
// alt::CPlayerLeaveVehicleEvent::operator=
// Overloaded operator
// Return type
// cpptype class alt::CPlayerLeaveVehicleEvent &
// Reference type
// cpptype class alt::CPlayerLeaveVehicleEvent
// cpptype const class alt::CPlayerLeaveVehicleEvent &
// Reference type
// cpptype class alt::CPlayerLeaveVehicleEvent
CAPI void alt_CPlayerLeaveVehicleEvent_Assign_constCPlayerLeaveVehicleEventRef(struct alt_CPlayerLeaveVehicleEvent* _instance, struct alt_CPlayerLeaveVehicleEvent* _p0);

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerChangeVehicleSeatEvent.h:10:8
// class alt::CPlayerChangeVehicleSeatEvent
// derives from class alt::CEvent
    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CEvent.h:58:8
    // enum alt::CEvent::Type type

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CEvent.h:59:16
    // _Bool cancelled

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerChangeVehicleSeatEvent.h:29:13
    // class alt::IVehicle * target

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerChangeVehicleSeatEvent.h:30:12
    // class alt::IPlayer * player

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerChangeVehicleSeatEvent.h:31:11
    // uint8_t oldSeat

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerChangeVehicleSeatEvent.h:32:11
    // uint8_t newSeat

typedef struct alt_CPlayerChangeVehicleSeatEvent {
    enum alt_CEvent_Type type;
    _Bool cancelled;
    struct alt_IVehicle* target;
    struct alt_IPlayer* player;
    unsigned char oldSeat;
    unsigned char newSeat;
} alt_CPlayerChangeVehicleSeatEvent;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerChangeVehicleSeatEvent.h:10:8
// class alt::CPlayerChangeVehicleSeatEvent
// functions from class alt::CPlayerChangeVehicleSeatEvent
CAPI void alt_CPlayerChangeVehicleSeatEvent_free(struct alt_CPlayerChangeVehicleSeatEvent* ptr);

// derived record CEvent is not publicly accessible

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerChangeVehicleSeatEvent.h:13:3
// alt::CPlayerChangeVehicleSeatEvent::CPlayerChangeVehicleSeatEvent
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype class alt::IVehicle *
// Pointer type
// cpptype class alt::IVehicle
// cpptype class alt::IPlayer *
// Pointer type
// cpptype class alt::IPlayer
// cpptype unsigned char
// fundamental
// cpptype unsigned char
// fundamental
// Return ptr must be manually freed with alt_CPlayerChangeVehicleSeatEvent_free()
CAPI struct alt_CPlayerChangeVehicleSeatEvent* alt_CPlayerChangeVehicleSeatEvent_Create(struct alt_IVehicle* _target, struct alt_IPlayer* _player, unsigned char _oldSeat, unsigned char _newSeat);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerChangeVehicleSeatEvent.h:23:13
// alt::CPlayerChangeVehicleSeatEvent::GetTarget
// Return type
// cpptype class alt::IVehicle *
// Pointer type
// cpptype class alt::IVehicle
CAPI struct alt_IVehicle* alt_CPlayerChangeVehicleSeatEvent_GetTarget(struct alt_CPlayerChangeVehicleSeatEvent* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerChangeVehicleSeatEvent.h:24:12
// alt::CPlayerChangeVehicleSeatEvent::GetPlayer
// Return type
// cpptype class alt::IPlayer *
// Pointer type
// cpptype class alt::IPlayer
CAPI struct alt_IPlayer* alt_CPlayerChangeVehicleSeatEvent_GetPlayer(struct alt_CPlayerChangeVehicleSeatEvent* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerChangeVehicleSeatEvent.h:25:11
// alt::CPlayerChangeVehicleSeatEvent::GetOldSeat
// Return type
// cpptype unsigned char
// fundamental
CAPI unsigned char alt_CPlayerChangeVehicleSeatEvent_GetOldSeat(struct alt_CPlayerChangeVehicleSeatEvent* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerChangeVehicleSeatEvent.h:26:11
// alt::CPlayerChangeVehicleSeatEvent::GetNewSeat
// Return type
// cpptype unsigned char
// fundamental
CAPI unsigned char alt_CPlayerChangeVehicleSeatEvent_GetNewSeat(struct alt_CPlayerChangeVehicleSeatEvent* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerChangeVehicleSeatEvent.h:10:8
// alt::CPlayerChangeVehicleSeatEvent::CPlayerChangeVehicleSeatEvent
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype const class alt::CPlayerChangeVehicleSeatEvent &
// Reference type
// cpptype class alt::CPlayerChangeVehicleSeatEvent
// Return ptr must be manually freed with alt_CPlayerChangeVehicleSeatEvent_free()
CAPI struct alt_CPlayerChangeVehicleSeatEvent* alt_CPlayerChangeVehicleSeatEvent_Create_1(struct alt_CPlayerChangeVehicleSeatEvent* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CPlayerChangeVehicleSeatEvent.h:10:8
// alt::CPlayerChangeVehicleSeatEvent::operator=
// Overloaded operator
// Return type
// cpptype class alt::CPlayerChangeVehicleSeatEvent &
// Reference type
// cpptype class alt::CPlayerChangeVehicleSeatEvent
// cpptype const class alt::CPlayerChangeVehicleSeatEvent &
// Reference type
// cpptype class alt::CPlayerChangeVehicleSeatEvent
CAPI void alt_CPlayerChangeVehicleSeatEvent_Assign_constCPlayerChangeVehicleSeatEventRef(struct alt_CPlayerChangeVehicleSeatEvent* _instance, struct alt_CPlayerChangeVehicleSeatEvent* _p0);

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CDataNodeReceivedEvent.h:12:8
// class alt::CDataNodeReceivedEvent
// derives from class alt::CEvent
    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CEvent.h:58:8
    // enum alt::CEvent::Type type

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CEvent.h:59:16
    // _Bool cancelled

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CDataNodeReceivedEvent.h:27:10
    // class alt::String name

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CDataNodeReceivedEvent.h:28:10
    // class alt::String json

typedef struct alt_CDataNodeReceivedEvent {
    enum alt_CEvent_Type type;
    _Bool cancelled;
    struct alt_String name;
    struct alt_String json;
} alt_CDataNodeReceivedEvent;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CDataNodeReceivedEvent.h:12:8
// class alt::CDataNodeReceivedEvent
// functions from class alt::CDataNodeReceivedEvent
CAPI void alt_CDataNodeReceivedEvent_free(struct alt_CDataNodeReceivedEvent* ptr);

// derived record CEvent is not publicly accessible

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CDataNodeReceivedEvent.h:15:3
// alt::CDataNodeReceivedEvent::CDataNodeReceivedEvent
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype class alt::StringView
// cpptype class alt::StringView
// Return ptr must be manually freed with alt_CDataNodeReceivedEvent_free()
CAPI struct alt_CDataNodeReceivedEvent* alt_CDataNodeReceivedEvent_Create(struct alt_StringView* _name, struct alt_StringView* _logJson);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CDataNodeReceivedEvent.h:23:14
// alt::CDataNodeReceivedEvent::GetName
// Return type
// cpptype class alt::StringView
// Return ptr must be manually freed with alt_StringView_free()
CAPI struct alt_StringView* alt_CDataNodeReceivedEvent_GetName(struct alt_CDataNodeReceivedEvent* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CDataNodeReceivedEvent.h:24:14
// alt::CDataNodeReceivedEvent::GetJson
// Return type
// cpptype class alt::StringView
// Return ptr must be manually freed with alt_StringView_free()
CAPI struct alt_StringView* alt_CDataNodeReceivedEvent_GetJson(struct alt_CDataNodeReceivedEvent* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CDataNodeReceivedEvent.h:12:8
// alt::CDataNodeReceivedEvent::CDataNodeReceivedEvent
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype const class alt::CDataNodeReceivedEvent &
// Reference type
// cpptype class alt::CDataNodeReceivedEvent
// Return ptr must be manually freed with alt_CDataNodeReceivedEvent_free()
CAPI struct alt_CDataNodeReceivedEvent* alt_CDataNodeReceivedEvent_Create_1(struct alt_CDataNodeReceivedEvent* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CDataNodeReceivedEvent.h:12:8
// alt::CDataNodeReceivedEvent::CDataNodeReceivedEvent
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype class alt::CDataNodeReceivedEvent &&
// Reference type
// cpptype class alt::CDataNodeReceivedEvent
// Return ptr must be manually freed with alt_CDataNodeReceivedEvent_free()
CAPI struct alt_CDataNodeReceivedEvent* alt_CDataNodeReceivedEvent_Create_2(struct alt_CDataNodeReceivedEvent* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CDataNodeReceivedEvent.h:12:8
// alt::CDataNodeReceivedEvent::operator=
// Overloaded operator
// Return type
// cpptype class alt::CDataNodeReceivedEvent &
// Reference type
// cpptype class alt::CDataNodeReceivedEvent
// cpptype const class alt::CDataNodeReceivedEvent &
// Reference type
// cpptype class alt::CDataNodeReceivedEvent
CAPI void alt_CDataNodeReceivedEvent_Assign_constCDataNodeReceivedEventRef(struct alt_CDataNodeReceivedEvent* _instance, struct alt_CDataNodeReceivedEvent* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CDataNodeReceivedEvent.h:12:8
// alt::CDataNodeReceivedEvent::operator=
// Overloaded operator
// Return type
// cpptype class alt::CDataNodeReceivedEvent &
// Reference type
// cpptype class alt::CDataNodeReceivedEvent
// cpptype class alt::CDataNodeReceivedEvent &&
// Reference type
// cpptype class alt::CDataNodeReceivedEvent
CAPI void alt_CDataNodeReceivedEvent_Assign_CDataNodeReceivedEventRefRef(struct alt_CDataNodeReceivedEvent* _instance, struct alt_CDataNodeReceivedEvent* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CDataNodeReceivedEvent.h:12:8
// alt::CDataNodeReceivedEvent::~CDataNodeReceivedEvent
// Destructor

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CRemoveEntityEvent.h:9:8
// class alt::CRemoveEntityEvent
// derives from class alt::CEvent
    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CEvent.h:58:8
    // enum alt::CEvent::Type type

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CEvent.h:59:16
    // _Bool cancelled

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CRemoveEntityEvent.h:22:12
    // class alt::IEntity * target

typedef struct alt_CRemoveEntityEvent {
    enum alt_CEvent_Type type;
    _Bool cancelled;
    struct alt_IEntity* target;
} alt_CRemoveEntityEvent;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CRemoveEntityEvent.h:9:8
// class alt::CRemoveEntityEvent
// functions from class alt::CRemoveEntityEvent
CAPI void alt_CRemoveEntityEvent_free(struct alt_CRemoveEntityEvent* ptr);

// derived record CEvent is not publicly accessible

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CRemoveEntityEvent.h:12:3
// alt::CRemoveEntityEvent::CRemoveEntityEvent
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype class alt::IEntity *
// Pointer type
// cpptype class alt::IEntity
// Return ptr must be manually freed with alt_CRemoveEntityEvent_free()
CAPI struct alt_CRemoveEntityEvent* alt_CRemoveEntityEvent_Create(struct alt_IEntity* _target);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CRemoveEntityEvent.h:19:12
// alt::CRemoveEntityEvent::GetEntity
// Return type
// cpptype class alt::IEntity *
// Pointer type
// cpptype class alt::IEntity
CAPI struct alt_IEntity* alt_CRemoveEntityEvent_GetEntity(struct alt_CRemoveEntityEvent* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CRemoveEntityEvent.h:9:8
// alt::CRemoveEntityEvent::CRemoveEntityEvent
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype const class alt::CRemoveEntityEvent &
// Reference type
// cpptype class alt::CRemoveEntityEvent
// Return ptr must be manually freed with alt_CRemoveEntityEvent_free()
CAPI struct alt_CRemoveEntityEvent* alt_CRemoveEntityEvent_Create_1(struct alt_CRemoveEntityEvent* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CRemoveEntityEvent.h:9:8
// alt::CRemoveEntityEvent::operator=
// Overloaded operator
// Return type
// cpptype class alt::CRemoveEntityEvent &
// Reference type
// cpptype class alt::CRemoveEntityEvent
// cpptype const class alt::CRemoveEntityEvent &
// Reference type
// cpptype class alt::CRemoveEntityEvent
CAPI void alt_CRemoveEntityEvent_Assign_constCRemoveEntityEventRef(struct alt_CRemoveEntityEvent* _instance, struct alt_CRemoveEntityEvent* _p0);

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CConsoleCommandEvent.h:10:8
// class alt::CConsoleCommandEvent
// derives from class alt::CEvent
    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CEvent.h:58:8
    // enum alt::CEvent::Type type

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CEvent.h:59:16
    // _Bool cancelled

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CConsoleCommandEvent.h:25:14
    // class alt::StringView name

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CConsoleCommandEvent.h:26:21
    // Array<class alt::StringView> args

typedef struct alt_CConsoleCommandEvent {
    enum alt_CEvent_Type type;
    _Bool cancelled;
    struct alt_StringView name;
    struct alt_ArrayStringView args;
} alt_CConsoleCommandEvent;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CConsoleCommandEvent.h:10:8
// class alt::CConsoleCommandEvent
// functions from class alt::CConsoleCommandEvent
CAPI void alt_CConsoleCommandEvent_free(struct alt_CConsoleCommandEvent* ptr);

// derived record CEvent is not publicly accessible

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CConsoleCommandEvent.h:13:3
// alt::CConsoleCommandEvent::CConsoleCommandEvent
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype class alt::StringView
// cpptype class alt::Array<class alt::StringView>
// Return ptr must be manually freed with alt_CConsoleCommandEvent_free()
CAPI struct alt_CConsoleCommandEvent* alt_CConsoleCommandEvent_Create(struct alt_StringView* _name, struct alt_ArrayStringView* _args);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CConsoleCommandEvent.h:21:14
// alt::CConsoleCommandEvent::GetName
// Return type
// cpptype class alt::StringView
// Return ptr must be manually freed with alt_StringView_free()
CAPI struct alt_StringView* alt_CConsoleCommandEvent_GetName(struct alt_CConsoleCommandEvent* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CConsoleCommandEvent.h:22:28
// alt::CConsoleCommandEvent::GetArgs
// Return type
// cpptype const class alt::Array<class alt::StringView> &
// Reference type
// cpptype class alt::Array<class alt::StringView>
CAPI struct alt_ArrayStringView* alt_CConsoleCommandEvent_GetArgs(struct alt_CConsoleCommandEvent* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CConsoleCommandEvent.h:10:8
// alt::CConsoleCommandEvent::CConsoleCommandEvent
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype const class alt::CConsoleCommandEvent &
// Reference type
// cpptype class alt::CConsoleCommandEvent
// Return ptr must be manually freed with alt_CConsoleCommandEvent_free()
CAPI struct alt_CConsoleCommandEvent* alt_CConsoleCommandEvent_Create_1(struct alt_CConsoleCommandEvent* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CConsoleCommandEvent.h:10:8
// alt::CConsoleCommandEvent::CConsoleCommandEvent
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype class alt::CConsoleCommandEvent &&
// Reference type
// cpptype class alt::CConsoleCommandEvent
// Return ptr must be manually freed with alt_CConsoleCommandEvent_free()
CAPI struct alt_CConsoleCommandEvent* alt_CConsoleCommandEvent_Create_2(struct alt_CConsoleCommandEvent* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CConsoleCommandEvent.h:10:8
// alt::CConsoleCommandEvent::operator=
// Overloaded operator
// Return type
// cpptype class alt::CConsoleCommandEvent &
// Reference type
// cpptype class alt::CConsoleCommandEvent
// cpptype const class alt::CConsoleCommandEvent &
// Reference type
// cpptype class alt::CConsoleCommandEvent
CAPI void alt_CConsoleCommandEvent_Assign_constCConsoleCommandEventRef(struct alt_CConsoleCommandEvent* _instance, struct alt_CConsoleCommandEvent* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CConsoleCommandEvent.h:10:8
// alt::CConsoleCommandEvent::operator=
// Overloaded operator
// Return type
// cpptype class alt::CConsoleCommandEvent &
// Reference type
// cpptype class alt::CConsoleCommandEvent
// cpptype class alt::CConsoleCommandEvent &&
// Reference type
// cpptype class alt::CConsoleCommandEvent
CAPI void alt_CConsoleCommandEvent_Assign_CConsoleCommandEventRefRef(struct alt_CConsoleCommandEvent* _instance, struct alt_CConsoleCommandEvent* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CConsoleCommandEvent.h:10:8
// alt::CConsoleCommandEvent::~CConsoleCommandEvent
// Destructor

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CConnectionComplete.h:9:8
// class alt::CConnectionCompleteEvent
// derives from class alt::CEvent
    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CEvent.h:58:8
    // enum alt::CEvent::Type type

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CEvent.h:59:16
    // _Bool cancelled

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CConnectionComplete.h:22:8
    // _Bool isAnyMapLoaded

typedef struct alt_CConnectionCompleteEvent {
    enum alt_CEvent_Type type;
    _Bool cancelled;
    _Bool isAnyMapLoaded;
} alt_CConnectionCompleteEvent;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CConnectionComplete.h:9:8
// class alt::CConnectionCompleteEvent
// functions from class alt::CConnectionCompleteEvent
CAPI void alt_CConnectionCompleteEvent_free(struct alt_CConnectionCompleteEvent* ptr);

// derived record CEvent is not publicly accessible

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CConnectionComplete.h:12:3
// alt::CConnectionCompleteEvent::CConnectionCompleteEvent
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype _Bool
// fundamental
// Return ptr must be manually freed with alt_CConnectionCompleteEvent_free()
CAPI struct alt_CConnectionCompleteEvent* alt_CConnectionCompleteEvent_Create(_Bool _anyMapLoaded);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CConnectionComplete.h:19:8
// alt::CConnectionCompleteEvent::IsAnyMapLoaded
// Return type
// cpptype _Bool
// fundamental
CAPI _Bool alt_CConnectionCompleteEvent_IsAnyMapLoaded(struct alt_CConnectionCompleteEvent* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CConnectionComplete.h:9:8
// alt::CConnectionCompleteEvent::CConnectionCompleteEvent
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype const class alt::CConnectionCompleteEvent &
// Reference type
// cpptype class alt::CConnectionCompleteEvent
// Return ptr must be manually freed with alt_CConnectionCompleteEvent_free()
CAPI struct alt_CConnectionCompleteEvent* alt_CConnectionCompleteEvent_Create_1(struct alt_CConnectionCompleteEvent* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CConnectionComplete.h:9:8
// alt::CConnectionCompleteEvent::operator=
// Overloaded operator
// Return type
// cpptype class alt::CConnectionCompleteEvent &
// Reference type
// cpptype class alt::CConnectionCompleteEvent
// cpptype const class alt::CConnectionCompleteEvent &
// Reference type
// cpptype class alt::CConnectionCompleteEvent
CAPI void alt_CConnectionCompleteEvent_Assign_constCConnectionCompleteEventRef(struct alt_CConnectionCompleteEvent* _instance, struct alt_CConnectionCompleteEvent* _p0);

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CDisconnectEvent.h:7:8
// class alt::CDisconnectEvent
// derives from class alt::CEvent
    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CEvent.h:58:8
    // enum alt::CEvent::Type type

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CEvent.h:59:16
    // _Bool cancelled

typedef struct alt_CDisconnectEvent {
    enum alt_CEvent_Type type;
    _Bool cancelled;
} alt_CDisconnectEvent;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CDisconnectEvent.h:7:8
// class alt::CDisconnectEvent
// functions from class alt::CDisconnectEvent
CAPI void alt_CDisconnectEvent_free(struct alt_CDisconnectEvent* ptr);

// derived record CEvent is not publicly accessible

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CDisconnectEvent.h:10:3
// alt::CDisconnectEvent::CDisconnectEvent
// Constructor
// Return type
// cpptype void
// fundamental
// Return ptr must be manually freed with alt_CDisconnectEvent_free()
CAPI struct alt_CDisconnectEvent* alt_CDisconnectEvent_Create();

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CDisconnectEvent.h:7:8
// alt::CDisconnectEvent::CDisconnectEvent
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype const class alt::CDisconnectEvent &
// Reference type
// cpptype class alt::CDisconnectEvent
// Return ptr must be manually freed with alt_CDisconnectEvent_free()
CAPI struct alt_CDisconnectEvent* alt_CDisconnectEvent_Create_1(struct alt_CDisconnectEvent* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CDisconnectEvent.h:7:8
// alt::CDisconnectEvent::operator=
// Overloaded operator
// Return type
// cpptype class alt::CDisconnectEvent &
// Reference type
// cpptype class alt::CDisconnectEvent
// cpptype const class alt::CDisconnectEvent &
// Reference type
// cpptype class alt::CDisconnectEvent
CAPI void alt_CDisconnectEvent_Assign_constCDisconnectEventRef(struct alt_CDisconnectEvent* _instance, struct alt_CDisconnectEvent* _p0);

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CGameEntityCreateEvent.h:9:8
// class alt::CGameEntityCreateEvent
// derives from class alt::CEvent
    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CEvent.h:58:8
    // enum alt::CEvent::Type type

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CEvent.h:59:16
    // _Bool cancelled

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CGameEntityCreateEvent.h:22:12
    // class alt::IEntity * target

typedef struct alt_CGameEntityCreateEvent {
    enum alt_CEvent_Type type;
    _Bool cancelled;
    struct alt_IEntity* target;
} alt_CGameEntityCreateEvent;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CGameEntityCreateEvent.h:9:8
// class alt::CGameEntityCreateEvent
// functions from class alt::CGameEntityCreateEvent
CAPI void alt_CGameEntityCreateEvent_free(struct alt_CGameEntityCreateEvent* ptr);

// derived record CEvent is not publicly accessible

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CGameEntityCreateEvent.h:12:3
// alt::CGameEntityCreateEvent::CGameEntityCreateEvent
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype class alt::IEntity *
// Pointer type
// cpptype class alt::IEntity
// Return ptr must be manually freed with alt_CGameEntityCreateEvent_free()
CAPI struct alt_CGameEntityCreateEvent* alt_CGameEntityCreateEvent_Create(struct alt_IEntity* _target);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CGameEntityCreateEvent.h:19:12
// alt::CGameEntityCreateEvent::GetTarget
// Return type
// cpptype class alt::IEntity *
// Pointer type
// cpptype class alt::IEntity
CAPI struct alt_IEntity* alt_CGameEntityCreateEvent_GetTarget(struct alt_CGameEntityCreateEvent* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CGameEntityCreateEvent.h:9:8
// alt::CGameEntityCreateEvent::CGameEntityCreateEvent
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype const class alt::CGameEntityCreateEvent &
// Reference type
// cpptype class alt::CGameEntityCreateEvent
// Return ptr must be manually freed with alt_CGameEntityCreateEvent_free()
CAPI struct alt_CGameEntityCreateEvent* alt_CGameEntityCreateEvent_Create_1(struct alt_CGameEntityCreateEvent* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CGameEntityCreateEvent.h:9:8
// alt::CGameEntityCreateEvent::operator=
// Overloaded operator
// Return type
// cpptype class alt::CGameEntityCreateEvent &
// Reference type
// cpptype class alt::CGameEntityCreateEvent
// cpptype const class alt::CGameEntityCreateEvent &
// Reference type
// cpptype class alt::CGameEntityCreateEvent
CAPI void alt_CGameEntityCreateEvent_Assign_constCGameEntityCreateEventRef(struct alt_CGameEntityCreateEvent* _instance, struct alt_CGameEntityCreateEvent* _p0);

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CGameEntityDestroyEvent.h:9:8
// class alt::CGameEntityDestroyEvent
// derives from class alt::CEvent
    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CEvent.h:58:8
    // enum alt::CEvent::Type type

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CEvent.h:59:16
    // _Bool cancelled

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CGameEntityDestroyEvent.h:22:12
    // class alt::IEntity * target

typedef struct alt_CGameEntityDestroyEvent {
    enum alt_CEvent_Type type;
    _Bool cancelled;
    struct alt_IEntity* target;
} alt_CGameEntityDestroyEvent;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CGameEntityDestroyEvent.h:9:8
// class alt::CGameEntityDestroyEvent
// functions from class alt::CGameEntityDestroyEvent
CAPI void alt_CGameEntityDestroyEvent_free(struct alt_CGameEntityDestroyEvent* ptr);

// derived record CEvent is not publicly accessible

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CGameEntityDestroyEvent.h:12:3
// alt::CGameEntityDestroyEvent::CGameEntityDestroyEvent
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype class alt::IEntity *
// Pointer type
// cpptype class alt::IEntity
// Return ptr must be manually freed with alt_CGameEntityDestroyEvent_free()
CAPI struct alt_CGameEntityDestroyEvent* alt_CGameEntityDestroyEvent_Create(struct alt_IEntity* _target);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CGameEntityDestroyEvent.h:19:12
// alt::CGameEntityDestroyEvent::GetTarget
// Return type
// cpptype class alt::IEntity *
// Pointer type
// cpptype class alt::IEntity
CAPI struct alt_IEntity* alt_CGameEntityDestroyEvent_GetTarget(struct alt_CGameEntityDestroyEvent* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CGameEntityDestroyEvent.h:9:8
// alt::CGameEntityDestroyEvent::CGameEntityDestroyEvent
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype const class alt::CGameEntityDestroyEvent &
// Reference type
// cpptype class alt::CGameEntityDestroyEvent
// Return ptr must be manually freed with alt_CGameEntityDestroyEvent_free()
CAPI struct alt_CGameEntityDestroyEvent* alt_CGameEntityDestroyEvent_Create_1(struct alt_CGameEntityDestroyEvent* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CGameEntityDestroyEvent.h:9:8
// alt::CGameEntityDestroyEvent::operator=
// Overloaded operator
// Return type
// cpptype class alt::CGameEntityDestroyEvent &
// Reference type
// cpptype class alt::CGameEntityDestroyEvent
// cpptype const class alt::CGameEntityDestroyEvent &
// Reference type
// cpptype class alt::CGameEntityDestroyEvent
CAPI void alt_CGameEntityDestroyEvent_Assign_constCGameEntityDestroyEventRef(struct alt_CGameEntityDestroyEvent* _instance, struct alt_CGameEntityDestroyEvent* _p0);

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CKeyboardEvent.h:9:8
// class alt::CKeyboardEvent
// derives from class alt::CEvent
    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CEvent.h:58:8
    // enum alt::CEvent::Type type

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CEvent.h:59:16
    // _Bool cancelled

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CKeyboardEvent.h:30:12
    // uint32_t keyCode

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CKeyboardEvent.h:31:12
    // enum alt::CKeyboardEvent::KeyState keyState

typedef struct alt_CKeyboardEvent {
    enum alt_CEvent_Type type;
    _Bool cancelled;
    unsigned int keyCode;
    enum alt_CKeyboardEvent_KeyState keyState;
} alt_CKeyboardEvent;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CKeyboardEvent.h:9:8
// class alt::CKeyboardEvent
// functions from class alt::CKeyboardEvent
CAPI void alt_CKeyboardEvent_free(struct alt_CKeyboardEvent* ptr);

// derived record CEvent is not publicly accessible

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CKeyboardEvent.h:18:3
// alt::CKeyboardEvent::CKeyboardEvent
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype unsigned int
// fundamental
// cpptype enum alt::CKeyboardEvent::KeyState
// enumaral type
// Return ptr must be manually freed with alt_CKeyboardEvent_free()
CAPI struct alt_CKeyboardEvent* alt_CKeyboardEvent_Create(unsigned int _keyCode, enum alt_CKeyboardEvent_KeyState state);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CKeyboardEvent.h:26:12
// alt::CKeyboardEvent::GetKeyCode
// Return type
// cpptype unsigned int
// fundamental
CAPI unsigned int alt_CKeyboardEvent_GetKeyCode(struct alt_CKeyboardEvent* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CKeyboardEvent.h:27:12
// alt::CKeyboardEvent::GetKeyState
// Return type
// cpptype enum alt::CKeyboardEvent::KeyState
// enumaral type
CAPI enum alt_CKeyboardEvent_KeyState alt_CKeyboardEvent_GetKeyState(struct alt_CKeyboardEvent* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CKeyboardEvent.h:9:8
// alt::CKeyboardEvent::CKeyboardEvent
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype const class alt::CKeyboardEvent &
// Reference type
// cpptype class alt::CKeyboardEvent
// Return ptr must be manually freed with alt_CKeyboardEvent_free()
CAPI struct alt_CKeyboardEvent* alt_CKeyboardEvent_Create_1(struct alt_CKeyboardEvent* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CKeyboardEvent.h:9:8
// alt::CKeyboardEvent::operator=
// Overloaded operator
// Return type
// cpptype class alt::CKeyboardEvent &
// Reference type
// cpptype class alt::CKeyboardEvent
// cpptype const class alt::CKeyboardEvent &
// Reference type
// cpptype class alt::CKeyboardEvent
CAPI void alt_CKeyboardEvent_Assign_constCKeyboardEventRef(struct alt_CKeyboardEvent* _instance, struct alt_CKeyboardEvent* _p0);

typedef enum alt_CKeyboardEvent_KeyState {
    ALT_CKEYBOARDEVENT_KEYSTATE_UP = 0,
    ALT_CKEYBOARDEVENT_KEYSTATE_DOWN = 1
};

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CWebViewEvent.h:12:8
// class alt::CWebViewEvent
// derives from class alt::CEvent
    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CEvent.h:58:8
    // enum alt::CEvent::Type type

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CEvent.h:59:16
    // _Bool cancelled

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CWebViewEvent.h:29:13
    // class CWebView * target

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CWebViewEvent.h:30:10
    // class alt::String name

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CWebViewEvent.h:31:14
    // class alt::MValueList args

typedef struct alt_CWebViewEvent {
    enum alt_CEvent_Type type;
    _Bool cancelled;
    struct CWebView* target;
    struct alt_String name;
    struct alt_MValueList args;
} alt_CWebViewEvent;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CWebViewEvent.h:12:8
// class alt::CWebViewEvent
// functions from class alt::CWebViewEvent
CAPI void alt_CWebViewEvent_free(struct alt_CWebViewEvent* ptr);

// derived record CEvent is not publicly accessible

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CWebViewEvent.h:15:3
// alt::CWebViewEvent::CWebViewEvent
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype class CWebView *
// Pointer type
// cpptype class CWebView
// cpptype class alt::StringView
// cpptype class alt::MValueList
// Return ptr must be manually freed with alt_CWebViewEvent_free()
CAPI struct alt_CWebViewEvent* alt_CWebViewEvent_Create(struct CWebView* _target, struct alt_StringView* _name, struct alt_MValueList* _args);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CWebViewEvent.h:24:13
// alt::CWebViewEvent::GetTarget
// Return type
// cpptype class CWebView *
// Pointer type
// cpptype class CWebView
CAPI struct CWebView* alt_CWebViewEvent_GetTarget(struct alt_CWebViewEvent* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CWebViewEvent.h:25:14
// alt::CWebViewEvent::GetName
// Return type
// cpptype class alt::StringView
// Return ptr must be manually freed with alt_StringView_free()
CAPI struct alt_StringView* alt_CWebViewEvent_GetName(struct alt_CWebViewEvent* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CWebViewEvent.h:26:14
// alt::CWebViewEvent::GetArgs
// Return type
// cpptype class alt::MValueList
// Return ptr must be manually freed with alt_MValueList_free()
CAPI struct alt_MValueList* alt_CWebViewEvent_GetArgs(struct alt_CWebViewEvent* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CWebViewEvent.h:12:8
// alt::CWebViewEvent::CWebViewEvent
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype const class alt::CWebViewEvent &
// Reference type
// cpptype class alt::CWebViewEvent
// Return ptr must be manually freed with alt_CWebViewEvent_free()
CAPI struct alt_CWebViewEvent* alt_CWebViewEvent_Create_1(struct alt_CWebViewEvent* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CWebViewEvent.h:12:8
// alt::CWebViewEvent::CWebViewEvent
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype class alt::CWebViewEvent &&
// Reference type
// cpptype class alt::CWebViewEvent
// Return ptr must be manually freed with alt_CWebViewEvent_free()
CAPI struct alt_CWebViewEvent* alt_CWebViewEvent_Create_2(struct alt_CWebViewEvent* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CWebViewEvent.h:12:8
// alt::CWebViewEvent::operator=
// Overloaded operator
// Return type
// cpptype class alt::CWebViewEvent &
// Reference type
// cpptype class alt::CWebViewEvent
// cpptype const class alt::CWebViewEvent &
// Reference type
// cpptype class alt::CWebViewEvent
CAPI void alt_CWebViewEvent_Assign_constCWebViewEventRef(struct alt_CWebViewEvent* _instance, struct alt_CWebViewEvent* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CWebViewEvent.h:12:8
// alt::CWebViewEvent::operator=
// Overloaded operator
// Return type
// cpptype class alt::CWebViewEvent &
// Reference type
// cpptype class alt::CWebViewEvent
// cpptype class alt::CWebViewEvent &&
// Reference type
// cpptype class alt::CWebViewEvent
CAPI void alt_CWebViewEvent_Assign_CWebViewEventRefRef(struct alt_CWebViewEvent* _instance, struct alt_CWebViewEvent* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/CWebViewEvent.h:12:8
// alt::CWebViewEvent::~CWebViewEvent
// Destructor

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/IPackage.h:8:8
// class alt::IPackage
typedef struct alt_IPackage alt_IPackage;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/IPackage.h:8:8
// class alt::IPackage
// functions from class alt::IPackage
// has no accessible destructor for 'free' function

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/IPackage.h:30:11
// alt::IPackage::~IPackage
// Destructor

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/IPackage.h:32:16
// alt::IPackage::GetMode
// Return type
// cpptype enum alt::IPackage::Mode
// enumaral type
CAPI enum alt_IPackage_Mode alt_IPackage_GetMode(struct alt_IPackage* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/IPackage.h:34:16
// alt::IPackage::FileExists
// Return type
// cpptype _Bool
// fundamental
// cpptype class alt::StringView
CAPI _Bool alt_IPackage_FileExists(struct alt_IPackage* _instance, struct alt_StringView* path);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/IPackage.h:36:17
// alt::IPackage::OpenFile
// Return type
// cpptype class alt::IPackage::File *
// Pointer type
// cpptype class alt::IPackage::File
// cpptype class alt::StringView
CAPI struct alt_IPackage_File* alt_IPackage_OpenFile(struct alt_IPackage* _instance, struct alt_StringView* path);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/IPackage.h:37:16
// alt::IPackage::CloseFile
// Return type
// cpptype void
// fundamental
// cpptype class alt::IPackage::File *
// Pointer type
// cpptype class alt::IPackage::File
CAPI void alt_IPackage_CloseFile(struct alt_IPackage* _instance, struct alt_IPackage_File* file);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/IPackage.h:39:20
// alt::IPackage::GetFileSize
// Return type
// cpptype unsigned long long
// fundamental
// cpptype class alt::IPackage::File *
// Pointer type
// cpptype class alt::IPackage::File
CAPI unsigned long long alt_IPackage_GetFileSize(struct alt_IPackage* _instance, struct alt_IPackage_File* file);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/IPackage.h:40:16
// alt::IPackage::SeekFile
// Return type
// cpptype void
// fundamental
// cpptype class alt::IPackage::File *
// Pointer type
// cpptype class alt::IPackage::File
// cpptype unsigned long long
// fundamental
// cpptype enum alt::IPackage::SeekOrigin
// enumaral type
CAPI void alt_IPackage_SeekFile(struct alt_IPackage* _instance, struct alt_IPackage_File* file, unsigned long long offset, enum alt_IPackage_SeekOrigin origin);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/IPackage.h:41:20
// alt::IPackage::TellFile
// Return type
// cpptype unsigned long long
// fundamental
// cpptype class alt::IPackage::File *
// Pointer type
// cpptype class alt::IPackage::File
CAPI unsigned long long alt_IPackage_TellFile(struct alt_IPackage* _instance, struct alt_IPackage_File* file);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/IPackage.h:43:20
// alt::IPackage::ReadFile
// Return type
// cpptype unsigned long long
// fundamental
// cpptype class alt::IPackage::File *
// Pointer type
// cpptype class alt::IPackage::File
// cpptype void *
// Pointer type
// cpptype void
// fundamental
// cpptype unsigned long long
// fundamental
CAPI unsigned long long alt_IPackage_ReadFile(struct alt_IPackage* _instance, struct alt_IPackage_File* file, void* buffer, unsigned long long size);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/IPackage.h:44:20
// alt::IPackage::WriteFile
// Return type
// cpptype unsigned long long
// fundamental
// cpptype class alt::IPackage::File *
// Pointer type
// cpptype class alt::IPackage::File
// cpptype void *
// Pointer type
// cpptype void
// fundamental
// cpptype unsigned long long
// fundamental
CAPI unsigned long long alt_IPackage_WriteFile(struct alt_IPackage* _instance, struct alt_IPackage_File* file, void* buffer, unsigned long long size);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/IPackage.h:47:3
// alt::IPackage::IPackage
// Not public

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/IPackage.h:50:3
// alt::IPackage::IPackage
// Not public

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/IPackage.h:51:13
// alt::IPackage::operator=
// Not public

typedef enum alt_IPackage_Mode {
    ALT_IPACKAGE_MODE_READ = 0,
    ALT_IPACKAGE_MODE_WRITE = 1
};

typedef enum alt_IPackage_SeekOrigin {
    ALT_IPACKAGE_SEEKORIGIN_SET = 0,
    ALT_IPACKAGE_SEEKORIGIN_CUR = 1,
    ALT_IPACKAGE_SEEKORIGIN_END = 2
};

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/IPackage.h:24:9
// class alt::IPackage::File
typedef struct alt_IPackage_File alt_IPackage_File;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/IPackage.h:24:9
// class alt::IPackage::File
// functions from class alt::IPackage::File
// has no accessible destructor for 'free' function

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/IPackage.h:27:12
// alt::IPackage::File::~File
// Destructor

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/IPackage.h:24:9
// alt::IPackage::File::operator=
// Overloaded operator
// Return type
// cpptype class alt::IPackage::File &
// Reference type
// cpptype class alt::IPackage::File
// cpptype const class alt::IPackage::File &
// Reference type
// cpptype class alt::IPackage::File
CAPI void alt_IPackage_File_Assign_constIPackage_FileRef(struct alt_IPackage_File* _instance, struct alt_IPackage_File* _p0);

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/IScriptRuntime.h:10:8
// class alt::IScriptRuntime
typedef struct alt_IScriptRuntime alt_IScriptRuntime;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/IScriptRuntime.h:10:8
// class alt::IScriptRuntime
// functions from class alt::IScriptRuntime
// has no accessible destructor for 'free' function

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/IScriptRuntime.h:13:11
// alt::IScriptRuntime::~IScriptRuntime
// Destructor

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/IScriptRuntime.h:15:22
// alt::IScriptRuntime::CreateResource
// Return type
// cpptype class alt::IResource *
// Pointer type
// cpptype class alt::IResource
// cpptype struct alt::IResource::CreationInfo *
// Pointer type
// cpptype struct alt::IResource::CreationInfo
CAPI struct alt_IResource* alt_IScriptRuntime_CreateResource(struct alt_IScriptRuntime* _instance, struct alt_IResource_CreationInfo* info);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/IScriptRuntime.h:16:16
// alt::IScriptRuntime::RemoveResource
// Return type
// cpptype void
// fundamental
// cpptype class alt::IResource *
// Pointer type
// cpptype class alt::IResource
CAPI void alt_IScriptRuntime_RemoveResource(struct alt_IScriptRuntime* _instance, struct alt_IResource* resource);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/IScriptRuntime.h:18:16
// alt::IScriptRuntime::OnTick
// Return type
// cpptype void
// fundamental
CAPI void alt_IScriptRuntime_OnTick(struct alt_IScriptRuntime* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/IScriptRuntime.h:10:8
// alt::IScriptRuntime::operator=
// Overloaded operator
// Return type
// cpptype class alt::IScriptRuntime &
// Reference type
// cpptype class alt::IScriptRuntime
// cpptype const class alt::IScriptRuntime &
// Reference type
// cpptype class alt::IScriptRuntime
CAPI void alt_IScriptRuntime_Assign_constIScriptRuntimeRef(struct alt_IScriptRuntime* _instance, struct alt_IScriptRuntime* _p0);

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/IClient.h:13:7
// class alt::IClient
typedef struct alt_IClient alt_IClient;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/IClient.h:13:7
// class alt::IClient
// functions from class alt::IClient
CAPI void alt_IClient_free(struct alt_IClient* ptr);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/IClient.h:17:18
// alt::IClient::LogInfo
// Return type
// cpptype void
// fundamental
// cpptype class alt::StringView
CAPI void alt_IClient_LogInfo(struct alt_IClient* _instance, struct alt_StringView* str);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/IClient.h:18:15
// alt::IClient::RegisterScriptRuntime
// Return type
// cpptype _Bool
// fundamental
// cpptype class alt::StringView
// cpptype class alt::IScriptRuntime *
// Pointer type
// cpptype class alt::IScriptRuntime
CAPI _Bool alt_IClient_RegisterScriptRuntime(struct alt_IClient* _instance, struct alt_StringView* resourceType, struct alt_IScriptRuntime* runtime);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/IClient.h:13:7
// alt::IClient::operator=
// Overloaded operator
// Return type
// cpptype class alt::IClient &
// Reference type
// cpptype class alt::IClient
// cpptype const class alt::IClient &
// Reference type
// cpptype class alt::IClient
CAPI void alt_IClient_Assign_constIClientRef(struct alt_IClient* _instance, struct alt_IClient* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/IClient.h:13:7
// alt::IClient::operator=
// Overloaded operator
// Return type
// cpptype class alt::IClient &
// Reference type
// cpptype class alt::IClient
// cpptype class alt::IClient &&
// Reference type
// cpptype class alt::IClient
CAPI void alt_IClient_Assign_IClientRefRef(struct alt_IClient* _instance, struct alt_IClient* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/IClient.h:13:7
// alt::IClient::~IClient
// Destructor



#include "altv-capi-extra.h"

#endif // _CAPI_H_
