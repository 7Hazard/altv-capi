
/**
 * CAPI API Header for C++
 * THIS HEADER IS AUTOGENERATED
 * Fri Jul 12 04:00:49 2019

 * 
 * Include header for alt:V C API
 */

#pragma once

#define _Bool bool
#define CAPIEXTERN extern "C"

#ifndef CAPI
#ifdef CAPI_DLL
#ifdef _WIN32
#define CAPI CAPIEXTERN __declspec(dllimport)
#endif // _WIN32
#else
#define CAPI CAPIEXTERN
#endif // CAPI_DLL
#endif // CAPI

// Typedef
// <invalid loc>
// __int128_t
// Canonical decl: __int128_t
// using __int128_t = __int128
// Invalid loc

// Typedef
// <invalid loc>
// __uint128_t
// Canonical decl: __uint128_t
// using __uint128_t = unsigned __int128
// Invalid loc

// Typedef
// <invalid loc>
// __NSConstantString
// Canonical decl: __NSConstantString
// using __NSConstantString = struct __NSConstantString_tag
// Invalid loc

// Typedef
// <invalid loc>
// size_t
// Canonical decl: size_t
// tdtd
// using size_t = unsigned long long
// Invalid loc

// Typedef
// <invalid loc>
// __builtin_ms_va_list
// Canonical decl: __builtin_ms_va_list
// using __builtin_ms_va_list = char *
// Invalid loc

// Typedef
// <invalid loc>
// __builtin_va_list
// Canonical decl: __builtin_va_list
// tdtd
// using __builtin_va_list = char *
// Invalid loc

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:17:11
// VectorLayout<T, W>
// isTemplated || isTemplateDecl.

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:17:11
// class alt::VectorLayout<float, 4>
    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:54:17
    // alt::VectorLayout<float, 4>::Element [4] elements

struct alt_VectorLayoutfloat4 {
    float elements[4];
};

// functions from class alt::VectorLayout<float, 4>
CAPI void alt_VectorLayoutfloat4_free(struct alt_VectorLayoutfloat4* ptr);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:24:9
// alt::VectorLayout<float, 4>::VectorLayout
// Constructor
// Return type
// cpptype void
// fundamental
// Return ptr must be manually freed with alt_VectorLayoutfloat4_free()
CAPI struct alt_VectorLayoutfloat4* alt_VectorLayoutfloat4_Create();

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:25:9
// alt::VectorLayout<float, 4>::VectorLayout
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype float const (&)[4]
// Reference type
// cpptype float [4]
// array type
// cpptype float
// fundamental
// Return ptr must be manually freed with alt_VectorLayoutfloat4_free()
CAPI struct alt_VectorLayoutfloat4* alt_VectorLayoutfloat4_Create_1(float** _elements);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:26:9
// alt::VectorLayout<float, 4>::VectorLayout
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype const float &
// Reference type
// cpptype float
// fundamental
// Return ptr must be manually freed with alt_VectorLayoutfloat4_free()
CAPI struct alt_VectorLayoutfloat4* alt_VectorLayoutfloat4_Create_2(float* el);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:37:18
// alt::VectorLayout<float, 4>::operator[]
// Overloaded operator
// Return type
// cpptype float &
// Reference type
// cpptype float
// fundamental
// cpptype unsigned long long
// fundamental
CAPI float* alt_VectorLayoutfloat4_Access_size_t(struct alt_VectorLayoutfloat4* _instance, unsigned long long key);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:38:24
// alt::VectorLayout<float, 4>::operator[]
// Overloaded operator
// Return type
// cpptype const float &
// Reference type
// cpptype float
// fundamental
// cpptype unsigned long long
// fundamental
CAPI float* alt_VectorLayoutfloat4_Access_size_t_1(struct alt_VectorLayoutfloat4* _instance, unsigned long long key);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:17:11
// alt::VectorLayout<float, 4>::~VectorLayout
// Destructor

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:17:11
// alt::VectorLayout<float, 4>::VectorLayout
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype const class alt::VectorLayout<float, 4> &
// Reference type
// cpptype class alt::VectorLayout<float, 4>
// Return ptr must be manually freed with alt_VectorLayoutfloat4_free()
CAPI struct alt_VectorLayoutfloat4* alt_VectorLayoutfloat4_Create_3(struct alt_VectorLayoutfloat4* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:17:11
// alt::VectorLayout<float, 4>::VectorLayout
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype class alt::VectorLayout<float, 4> &&
// Reference type
// cpptype class alt::VectorLayout<float, 4>
// Return ptr must be manually freed with alt_VectorLayoutfloat4_free()
CAPI struct alt_VectorLayoutfloat4* alt_VectorLayoutfloat4_Create_4(struct alt_VectorLayoutfloat4* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:17:11
// alt::VectorLayout<float, 4>::operator=
// Overloaded operator
// Return type
// cpptype class alt::VectorLayout<float, 4> &
// Reference type
// cpptype class alt::VectorLayout<float, 4>
// cpptype const class alt::VectorLayout<float, 4> &
// Reference type
// cpptype class alt::VectorLayout<float, 4>
CAPI void alt_VectorLayoutfloat4_Assign_constVectorLayoutfloat4Ref(struct alt_VectorLayoutfloat4* _instance, struct alt_VectorLayoutfloat4* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:17:11
// alt::VectorLayout<float, 4>::operator=
// Overloaded operator
// Return type
// cpptype class alt::VectorLayout<float, 4> &
// Reference type
// cpptype class alt::VectorLayout<float, 4>
// cpptype class alt::VectorLayout<float, 4> &&
// Reference type
// cpptype class alt::VectorLayout<float, 4>
CAPI void alt_VectorLayoutfloat4_Assign_VectorLayoutfloat4RefRef(struct alt_VectorLayoutfloat4* _instance, struct alt_VectorLayoutfloat4* _p0);

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:20:15
// alt::VectorLayout<float, 4>::Element
// Canonical decl: alt::VectorLayout<float, 4>::Element
// tdtd
// using alt::VectorLayout<float, 4>::Element = float
typedef float alt_VectorLayoutfloat4_Element;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:58:11
// Vector<T, W, _Layout>
// isTemplated || isTemplateDecl.

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:58:11
// class alt::Vector<float, 4, class alt::VectorLayout<float, 4> >
// derives from class alt::VectorLayout<float, 4>
    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:54:17
    // alt::VectorLayout<float, 4>::Element [4] elements

struct alt_Vectorfloat4VectorLayoutfloat4 {
    float elements[4];
};

// functions from class alt::Vector<float, 4, class alt::VectorLayout<float, 4> >
CAPI void alt_Vectorfloat4VectorLayoutfloat4_free(struct alt_Vectorfloat4VectorLayoutfloat4* ptr);

// derived record VectorLayout is not publicly accessible

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:66:9
// alt::Vector<float, 4, alt::VectorLayout<float, 4> >::Vector
// Constructor
// Return type
// cpptype void
// fundamental
// Return ptr must be manually freed with alt_Vectorfloat4VectorLayoutfloat4_free()
CAPI struct alt_Vectorfloat4VectorLayoutfloat4* alt_Vectorfloat4VectorLayoutfloat4_Create();

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:67:9
// alt::Vector<float, 4, alt::VectorLayout<float, 4> >::Vector
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype float const (&)[4]
// Reference type
// cpptype float [4]
// array type
// cpptype float
// fundamental
// Return ptr must be manually freed with alt_Vectorfloat4VectorLayoutfloat4_free()
CAPI struct alt_Vectorfloat4VectorLayoutfloat4* alt_Vectorfloat4VectorLayoutfloat4_Create_1(float** _elements);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:68:9
// alt::Vector<float, 4, alt::VectorLayout<float, 4> >::Vector
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype const class alt::VectorLayout<float, 4> &
// Reference type
// cpptype class alt::VectorLayout<float, 4>
// Return ptr must be manually freed with alt_Vectorfloat4VectorLayoutfloat4_free()
CAPI struct alt_Vectorfloat4VectorLayoutfloat4* alt_Vectorfloat4VectorLayoutfloat4_Create_2(struct alt_VectorLayoutfloat4* layout);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:76:11
// alt::Vector<float, 4, alt::VectorLayout<float, 4> >::LengthSqr
// Return type
// cpptype float
// fundamental
CAPI float alt_Vectorfloat4VectorLayoutfloat4_LengthSqr(struct alt_Vectorfloat4VectorLayoutfloat4* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:86:11
// alt::Vector<float, 4, alt::VectorLayout<float, 4> >::Length
// Return type
// cpptype float
// fundamental
CAPI float alt_Vectorfloat4VectorLayoutfloat4_Length(struct alt_Vectorfloat4VectorLayoutfloat4* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:58:11
// alt::Vector<float, 4, alt::VectorLayout<float, 4> >::~Vector
// Destructor

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:58:11
// alt::Vector<float, 4, alt::VectorLayout<float, 4> >::Vector
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype const class alt::Vector<float, 4, class alt::VectorLayout<float, 4> > &
// Reference type
// cpptype class alt::Vector<float, 4, class alt::VectorLayout<float, 4> >
// Return ptr must be manually freed with alt_Vectorfloat4VectorLayoutfloat4_free()
CAPI struct alt_Vectorfloat4VectorLayoutfloat4* alt_Vectorfloat4VectorLayoutfloat4_Create_3(struct alt_Vectorfloat4VectorLayoutfloat4* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:58:11
// alt::Vector<float, 4, alt::VectorLayout<float, 4> >::Vector
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype class alt::Vector<float, 4, class alt::VectorLayout<float, 4> > &&
// Reference type
// cpptype class alt::Vector<float, 4, class alt::VectorLayout<float, 4> >
// Return ptr must be manually freed with alt_Vectorfloat4VectorLayoutfloat4_free()
CAPI struct alt_Vectorfloat4VectorLayoutfloat4* alt_Vectorfloat4VectorLayoutfloat4_Create_4(struct alt_Vectorfloat4VectorLayoutfloat4* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:58:11
// alt::Vector<float, 4, alt::VectorLayout<float, 4> >::operator=
// Overloaded operator
// Return type
// cpptype class alt::Vector<float, 4, class alt::VectorLayout<float, 4> > &
// Reference type
// cpptype class alt::Vector<float, 4, class alt::VectorLayout<float, 4> >
// cpptype const class alt::Vector<float, 4, class alt::VectorLayout<float, 4> > &
// Reference type
// cpptype class alt::Vector<float, 4, class alt::VectorLayout<float, 4> >
CAPI void alt_Vectorfloat4VectorLayoutfloat4_Assign_constVectorfloat4VectorLayoutfloat4Ref(struct alt_Vectorfloat4VectorLayoutfloat4* _instance, struct alt_Vectorfloat4VectorLayoutfloat4* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:58:11
// alt::Vector<float, 4, alt::VectorLayout<float, 4> >::operator=
// Overloaded operator
// Return type
// cpptype class alt::Vector<float, 4, class alt::VectorLayout<float, 4> > &
// Reference type
// cpptype class alt::Vector<float, 4, class alt::VectorLayout<float, 4> >
// cpptype class alt::Vector<float, 4, class alt::VectorLayout<float, 4> > &&
// Reference type
// cpptype class alt::Vector<float, 4, class alt::VectorLayout<float, 4> >
CAPI void alt_Vectorfloat4VectorLayoutfloat4_Assign_Vectorfloat4VectorLayoutfloat4RefRef(struct alt_Vectorfloat4VectorLayoutfloat4* _instance, struct alt_Vectorfloat4VectorLayoutfloat4* _p0);

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:61:15
// alt::Vector<float, 4, alt::VectorLayout<float, 4> >::Layout
// Canonical decl: alt::Vector<float, 4, alt::VectorLayout<float, 4> >::Layout
// tdtd
// using alt::Vector<float, 4, alt::VectorLayout<float, 4> >::Layout = class alt::VectorLayout<float, 4>
// alt_VectorLayoutfloat4 is already typedefed

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:62:15
// alt::Vector<float, 4, alt::VectorLayout<float, 4> >::Element
// Canonical decl: alt::Vector<float, 4, alt::VectorLayout<float, 4> >::Element
// tdtd
// using alt::Vector<float, 4, alt::VectorLayout<float, 4> >::Element = float
typedef float alt_Vectorfloat4VectorLayoutfloat4_Element;

// Template Alias
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:106:23
// alt::Vector2 = alt::Vector2

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:106:29
// alt::Vector2
// Canonical decl: alt::Vector2
// Describes template
// using alt::Vector2 = Vector<type-parameter-0-0, 2, VectorLayout<type-parameter-0-0, 2> >
// Not trivial type

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:107:11
// alt::Vector2f
// Canonical decl: alt::Vector2f
// using alt::Vector2f = class alt::Vector<float, 2, class alt::VectorLayout<float, 2> >
typedef struct alt_Vectorfloat2VectorLayoutfloat2 alt_Vectorfloat2VectorLayoutfloat2;

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:108:11
// alt::Vector2i
// Canonical decl: alt::Vector2i
// using alt::Vector2i = class alt::Vector<int, 2, class alt::VectorLayout<int, 2> >
typedef struct alt_Vectorint2VectorLayoutint2 alt_Vectorint2VectorLayoutint2;

// Template Alias
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:110:23
// alt::Vector3 = alt::Vector3

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:110:29
// alt::Vector3
// Canonical decl: alt::Vector3
// Describes template
// using alt::Vector3 = Vector<type-parameter-0-0, 3, VectorLayout<type-parameter-0-0, 3> >
// Not trivial type

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:111:11
// alt::Vector3f
// Canonical decl: alt::Vector3f
// using alt::Vector3f = class alt::Vector<float, 3, class alt::VectorLayout<float, 3> >
typedef struct alt_Vectorfloat3VectorLayoutfloat3 alt_Vectorfloat3VectorLayoutfloat3;

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:112:11
// alt::Vector3i
// Canonical decl: alt::Vector3i
// using alt::Vector3i = class alt::Vector<int, 3, class alt::VectorLayout<int, 3> >
typedef struct alt_Vectorint3VectorLayoutint3 alt_Vectorint3VectorLayoutint3;

// Template Alias
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:114:23
// alt::Vector4 = alt::Vector4

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:114:29
// alt::Vector4
// Canonical decl: alt::Vector4
// Describes template
// using alt::Vector4 = Vector<type-parameter-0-0, 4, VectorLayout<type-parameter-0-0, 4> >
// Not trivial type

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:115:11
// alt::Vector4f
// Canonical decl: alt::Vector4f
// tdtd
// using alt::Vector4f = class alt::Vector<float, 4, class alt::VectorLayout<float, 4> >
// alt_Vectorfloat4VectorLayoutfloat4 is already typedefed

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:116:11
// alt::Vector4i
// Canonical decl: alt::Vector4i
// using alt::Vector4i = class alt::Vector<int, 4, class alt::VectorLayout<int, 4> >
typedef struct alt_Vectorint4VectorLayoutint4 alt_Vectorint4VectorLayoutint4;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:119:11
// MatrixLayout<T, W, H>
// isTemplated || isTemplateDecl.

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:122:15
// alt::MatrixLayout::Row
// Canonical decl: alt::MatrixLayout::Row
// tdtd
// tdtd instantiation dependent
// using alt::MatrixLayout::Row = Vector<type-parameter-0-0, W, VectorLayout<type-parameter-0-0, W> >
// Not trivial type

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:123:15
// alt::MatrixLayout::Element
// Canonical decl: alt::MatrixLayout::Element
// tdtd
// tdtd instantiation dependent
// using alt::MatrixLayout::Element = typename Vector<type-parameter-0-0, W, VectorLayout<type-parameter-0-0, W> >::Element
// Not trivial type

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:124:15
// alt::MatrixLayout::Transposed
// Canonical decl: alt::MatrixLayout::Transposed
// using alt::MatrixLayout::Transposed = MatrixLayout<type-parameter-0-0, H, W>
// Not trivial type

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:174:11
// Matrix<T, W, H, _Layout>
// isTemplated || isTemplateDecl.

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:178:15
// alt::Matrix::Row
// Canonical decl: alt::Matrix::Row
// tdtd
// tdtd instantiation dependent
// using alt::Matrix::Row = typename type-parameter-0-3::Row
// Not trivial type

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:179:15
// alt::Matrix::Element
// Canonical decl: alt::Matrix::Element
// tdtd
// tdtd instantiation dependent
// using alt::Matrix::Element = typename type-parameter-0-3::Element
// Not trivial type

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:180:15
// alt::Matrix::Transposed
// Canonical decl: alt::Matrix::Transposed
// tdtd
// tdtd instantiation dependent
// using alt::Matrix::Transposed = Matrix<type-parameter-0-0, H, W, typename type-parameter-0-3::Transposed>
// Not trivial type

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:210:11
// alt::DXMatrix
// Canonical decl: alt::DXMatrix
// using alt::DXMatrix = class alt::Matrix<float, 4, 4, class alt::MatrixLayout<float, 4, 4> >
typedef struct alt_Matrixfloat44MatrixLayoutfloat44 alt_Matrixfloat44MatrixLayoutfloat44;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:212:11
// class alt::PointLayout
    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:237:15
    // float x

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:237:18
    // float y

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:237:21
    // float z

struct alt_PointLayout {
    float x;
    float y;
    float z;
};

// functions from class alt::PointLayout
CAPI void alt_PointLayout_free(struct alt_PointLayout* ptr);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:219:9
// alt::PointLayout::PointLayout
// Constructor
// Return type
// cpptype void
// fundamental
// Return ptr must be manually freed with alt_PointLayout_free()
CAPI struct alt_PointLayout* alt_PointLayout_Create();

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:220:9
// alt::PointLayout::PointLayout
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype float
// fundamental
// cpptype float
// fundamental
// cpptype float
// fundamental
// Return ptr must be manually freed with alt_PointLayout_free()
CAPI struct alt_PointLayout* alt_PointLayout_Create_1(float _x, float _y, float _z);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:221:9
// alt::PointLayout::PointLayout
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype float const (&)[3]
// Reference type
// cpptype float [3]
// array type
// cpptype float
// fundamental
// Return ptr must be manually freed with alt_PointLayout_free()
CAPI struct alt_PointLayout* alt_PointLayout_Create_2(float** elements);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:229:16
// alt::PointLayout::operator[]
// Overloaded operator
// Return type
// cpptype float &
// Reference type
// cpptype float
// fundamental
// cpptype unsigned long long
// fundamental
CAPI float* alt_PointLayout_Access_size_t(struct alt_PointLayout* _instance, unsigned long long key);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:230:22
// alt::PointLayout::operator[]
// Overloaded operator
// Return type
// cpptype const float &
// Reference type
// cpptype float
// fundamental
// cpptype unsigned long long
// fundamental
CAPI float* alt_PointLayout_Access_size_t_1(struct alt_PointLayout* _instance, unsigned long long key);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:212:11
// alt::PointLayout::~PointLayout
// Destructor

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:212:11
// alt::PointLayout::PointLayout
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype const class alt::PointLayout &
// Reference type
// cpptype class alt::PointLayout
// Return ptr must be manually freed with alt_PointLayout_free()
CAPI struct alt_PointLayout* alt_PointLayout_Create_3(struct alt_PointLayout* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:212:11
// alt::PointLayout::PointLayout
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype class alt::PointLayout &&
// Reference type
// cpptype class alt::PointLayout
// Return ptr must be manually freed with alt_PointLayout_free()
CAPI struct alt_PointLayout* alt_PointLayout_Create_4(struct alt_PointLayout* _p0);

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:215:15
// alt::PointLayout::Element
// Canonical decl: alt::PointLayout::Element
// using alt::PointLayout::Element = float
typedef float alt_PointLayout_Element;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:240:11
// class alt::PointPaddedLayout
// derives from class alt::PointLayout
    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:237:15
    // float x

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:237:18
    // float y

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:237:21
    // float z

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:251:15
    // float pad

struct alt_PointPaddedLayout {
    float x;
    float y;
    float z;
    float pad;
};

// functions from class alt::PointPaddedLayout
CAPI void alt_PointPaddedLayout_free(struct alt_PointPaddedLayout* ptr);

// derived record PointLayout is not publicly accessible

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:243:9
// alt::PointPaddedLayout::PointPaddedLayout
// Constructor
// Return type
// cpptype void
// fundamental
// Return ptr must be manually freed with alt_PointPaddedLayout_free()
CAPI struct alt_PointPaddedLayout* alt_PointPaddedLayout_Create();

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:244:9
// alt::PointPaddedLayout::PointPaddedLayout
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype float
// fundamental
// cpptype float
// fundamental
// cpptype float
// fundamental
// Return ptr must be manually freed with alt_PointPaddedLayout_free()
CAPI struct alt_PointPaddedLayout* alt_PointPaddedLayout_Create_1(float x, float y, float z);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:245:9
// alt::PointPaddedLayout::PointPaddedLayout
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype float const (&)[3]
// Reference type
// cpptype float [3]
// array type
// cpptype float
// fundamental
// Return ptr must be manually freed with alt_PointPaddedLayout_free()
CAPI struct alt_PointPaddedLayout* alt_PointPaddedLayout_Create_2(float** elements);

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:254:11
// alt::Point
// Canonical decl: alt::Point
// tdtd
// tdtd incomplete type
// using alt::Point = class alt::Vector<float, 3, class alt::PointLayout>
typedef struct alt_Vectorfloat3PointLayout alt_Vectorfloat3PointLayout;

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:255:11
// alt::PointPadded
// Canonical decl: alt::PointPadded
// tdtd
// tdtd incomplete type
// using alt::PointPadded = class alt::Vector<float, 3, class alt::PointPaddedLayout>
typedef struct alt_Vectorfloat3PointPaddedLayout alt_Vectorfloat3PointPaddedLayout;

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:257:11
// alt::Position
// Canonical decl: alt::Position
// tdtd
// tdtd incomplete type
// using alt::Position = class alt::Vector<float, 3, class alt::PointLayout>
// alt_Vectorfloat3PointLayout is already typedefed

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:258:11
// alt::PositionPadded
// Canonical decl: alt::PositionPadded
// using alt::PositionPadded = class alt::Vector<float, 3, class alt::PointPaddedLayout>
// alt_Vectorfloat3PointPaddedLayout is already typedefed

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:260:11
// class alt::RotationLayout
    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:292:15
    // float roll

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:292:21
    // float pitch

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:292:28
    // float yaw

struct alt_RotationLayout {
    float roll;
    float pitch;
    float yaw;
};

// functions from class alt::RotationLayout
CAPI void alt_RotationLayout_free(struct alt_RotationLayout* ptr);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:267:3
// alt::RotationLayout::RotationLayout
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype float
// fundamental
// cpptype float
// fundamental
// cpptype float
// fundamental
// Return ptr must be manually freed with alt_RotationLayout_free()
CAPI struct alt_RotationLayout* alt_RotationLayout_Create(float _roll, float _pitch, float _yaw);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:268:9
// alt::RotationLayout::RotationLayout
// Constructor
// Return type
// cpptype void
// fundamental
// Return ptr must be manually freed with alt_RotationLayout_free()
CAPI struct alt_RotationLayout* alt_RotationLayout_Create_1();

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:269:9
// alt::RotationLayout::RotationLayout
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype float const (&)[3]
// Reference type
// cpptype float [3]
// array type
// cpptype float
// fundamental
// Return ptr must be manually freed with alt_RotationLayout_free()
CAPI struct alt_RotationLayout* alt_RotationLayout_Create_2(float** elements);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:277:16
// alt::RotationLayout::operator[]
// Overloaded operator
// Return type
// cpptype float &
// Reference type
// cpptype float
// fundamental
// cpptype unsigned long long
// fundamental
CAPI float* alt_RotationLayout_Access_size_t(struct alt_RotationLayout* _instance, unsigned long long key);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:278:22
// alt::RotationLayout::operator[]
// Overloaded operator
// Return type
// cpptype const float &
// Reference type
// cpptype float
// fundamental
// cpptype unsigned long long
// fundamental
CAPI float* alt_RotationLayout_Access_size_t_1(struct alt_RotationLayout* _instance, unsigned long long key);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:285:8
// alt::RotationLayout::Normalize
// Return type
// cpptype void
// fundamental
CAPI void alt_RotationLayout_Normalize(struct alt_RotationLayout* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:295:16
// alt::RotationLayout::Normalize
// Not public

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:260:11
// alt::RotationLayout::RotationLayout
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype const class alt::RotationLayout &
// Reference type
// cpptype class alt::RotationLayout
// Return ptr must be manually freed with alt_RotationLayout_free()
CAPI struct alt_RotationLayout* alt_RotationLayout_Create_3(struct alt_RotationLayout* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:260:11
// alt::RotationLayout::RotationLayout
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype class alt::RotationLayout &&
// Reference type
// cpptype class alt::RotationLayout
// Return ptr must be manually freed with alt_RotationLayout_free()
CAPI struct alt_RotationLayout* alt_RotationLayout_Create_4(struct alt_RotationLayout* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:260:11
// alt::RotationLayout::~RotationLayout
// Destructor

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:263:15
// alt::RotationLayout::Element
// Canonical decl: alt::RotationLayout::Element
// using alt::RotationLayout::Element = float
typedef float alt_RotationLayout_Element;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:301:11
// class alt::RotationPaddedLayout
// derives from class alt::RotationLayout
    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:292:15
    // float roll

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:292:21
    // float pitch

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:292:28
    // float yaw

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:312:15
    // float pad

struct alt_RotationPaddedLayout {
    float roll;
    float pitch;
    float yaw;
    float pad;
};

// functions from class alt::RotationPaddedLayout
CAPI void alt_RotationPaddedLayout_free(struct alt_RotationPaddedLayout* ptr);

// derived record RotationLayout is not publicly accessible

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:304:9
// alt::RotationPaddedLayout::RotationPaddedLayout
// Constructor
// Return type
// cpptype void
// fundamental
// Return ptr must be manually freed with alt_RotationPaddedLayout_free()
CAPI struct alt_RotationPaddedLayout* alt_RotationPaddedLayout_Create();

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:305:9
// alt::RotationPaddedLayout::RotationPaddedLayout
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype float
// fundamental
// cpptype float
// fundamental
// cpptype float
// fundamental
// Return ptr must be manually freed with alt_RotationPaddedLayout_free()
CAPI struct alt_RotationPaddedLayout* alt_RotationPaddedLayout_Create_1(float roll, float pitch, float yaw);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:306:9
// alt::RotationPaddedLayout::RotationPaddedLayout
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype float const (&)[3]
// Reference type
// cpptype float [3]
// array type
// cpptype float
// fundamental
// Return ptr must be manually freed with alt_RotationPaddedLayout_free()
CAPI struct alt_RotationPaddedLayout* alt_RotationPaddedLayout_Create_2(float** elements);

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:315:11
// alt::Rotation
// Canonical decl: alt::Rotation
// tdtd
// tdtd incomplete type
// using alt::Rotation = class alt::Vector<float, 3, class alt::RotationLayout>
typedef struct alt_Vectorfloat3RotationLayout alt_Vectorfloat3RotationLayout;

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:316:11
// alt::RotationPadded
// Canonical decl: alt::RotationPadded
// using alt::RotationPadded = class alt::Vector<float, 3, class alt::RotationPaddedLayout>
typedef struct alt_Vectorfloat3RotationPaddedLayout alt_Vectorfloat3RotationPaddedLayout;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:318:11
// class alt::ViewMatrixLayout
    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:359:18
    // alt::Vector4f right

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:359:25
    // alt::Vector4f up

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:359:29
    // alt::Vector4f forward

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:359:38
    // alt::Vector4f pos

struct alt_ViewMatrixLayout {
    struct alt_Vectorfloat4VectorLayoutfloat4 right;
    struct alt_Vectorfloat4VectorLayoutfloat4 up;
    struct alt_Vectorfloat4VectorLayoutfloat4 forward;
    struct alt_Vectorfloat4VectorLayoutfloat4 pos;
};

// functions from class alt::ViewMatrixLayout
CAPI void alt_ViewMatrixLayout_free(struct alt_ViewMatrixLayout* ptr);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:328:9
// alt::ViewMatrixLayout::ViewMatrixLayout
// Constructor
// Return type
// cpptype void
// fundamental
// Return ptr must be manually freed with alt_ViewMatrixLayout_free()
CAPI struct alt_ViewMatrixLayout* alt_ViewMatrixLayout_Create();

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:329:9
// alt::ViewMatrixLayout::ViewMatrixLayout
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype class alt::Vector<float, 4, class alt::VectorLayout<float, 4> > const (&)[4]
// Reference type
// cpptype class alt::Vector<float, 4, class alt::VectorLayout<float, 4> > [4]
// array type
// cpptype class alt::Vector<float, 4, class alt::VectorLayout<float, 4> >
// Return ptr must be manually freed with alt_ViewMatrixLayout_free()
CAPI struct alt_ViewMatrixLayout* alt_ViewMatrixLayout_Create_1(struct alt_Vectorfloat4VectorLayoutfloat4** _rows);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:331:9
// alt::ViewMatrixLayout::ViewMatrixLayout
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype const class alt::Vector<float, 4, class alt::VectorLayout<float, 4> > &
// Reference type
// cpptype class alt::Vector<float, 4, class alt::VectorLayout<float, 4> >
// Return ptr must be manually freed with alt_ViewMatrixLayout_free()
CAPI struct alt_ViewMatrixLayout* alt_ViewMatrixLayout_Create_2(struct alt_Vectorfloat4VectorLayoutfloat4* row);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:333:9
// alt::ViewMatrixLayout::ViewMatrixLayout
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype float const (&)[16]
// Reference type
// cpptype float [16]
// array type
// cpptype float
// fundamental
// Return ptr must be manually freed with alt_ViewMatrixLayout_free()
CAPI struct alt_ViewMatrixLayout* alt_ViewMatrixLayout_Create_3(float** elements);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:338:9
// alt::ViewMatrixLayout::ViewMatrixLayout
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype const class alt::Vector<float, 4, class alt::VectorLayout<float, 4> > &
// Reference type
// cpptype class alt::Vector<float, 4, class alt::VectorLayout<float, 4> >
// cpptype const class alt::Vector<float, 4, class alt::VectorLayout<float, 4> > &
// Reference type
// cpptype class alt::Vector<float, 4, class alt::VectorLayout<float, 4> >
// cpptype const class alt::Vector<float, 4, class alt::VectorLayout<float, 4> > &
// Reference type
// cpptype class alt::Vector<float, 4, class alt::VectorLayout<float, 4> >
// cpptype const class alt::Vector<float, 4, class alt::VectorLayout<float, 4> > &
// Reference type
// cpptype class alt::Vector<float, 4, class alt::VectorLayout<float, 4> >
// Return ptr must be manually freed with alt_ViewMatrixLayout_free()
CAPI struct alt_ViewMatrixLayout* alt_ViewMatrixLayout_Create_4(struct alt_Vectorfloat4VectorLayoutfloat4* _right, struct alt_Vectorfloat4VectorLayoutfloat4* _up, struct alt_Vectorfloat4VectorLayoutfloat4* _forward, struct alt_Vectorfloat4VectorLayoutfloat4* _pos);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:346:14
// alt::ViewMatrixLayout::operator[]
// Overloaded operator
// Return type
// cpptype class alt::Vector<float, 4, class alt::VectorLayout<float, 4> > &
// Reference type
// cpptype class alt::Vector<float, 4, class alt::VectorLayout<float, 4> >
// cpptype unsigned long long
// fundamental
CAPI struct alt_Vectorfloat4VectorLayoutfloat4* alt_ViewMatrixLayout_Access_size_t(struct alt_ViewMatrixLayout* _instance, unsigned long long key);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:347:20
// alt::ViewMatrixLayout::operator[]
// Overloaded operator
// Return type
// cpptype const class alt::Vector<float, 4, class alt::VectorLayout<float, 4> > &
// Reference type
// cpptype class alt::Vector<float, 4, class alt::VectorLayout<float, 4> >
// cpptype unsigned long long
// fundamental
CAPI struct alt_Vectorfloat4VectorLayoutfloat4* alt_ViewMatrixLayout_Access_size_t_1(struct alt_ViewMatrixLayout* _instance, unsigned long long key);

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:321:15
// alt::ViewMatrixLayout::Row
// Canonical decl: alt::ViewMatrixLayout::Row
// tdtd
// using alt::ViewMatrixLayout::Row = class alt::Vector<float, 4, class alt::VectorLayout<float, 4> >
// alt_Vectorfloat4VectorLayoutfloat4 is already typedefed

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:322:15
// alt::ViewMatrixLayout::Element
// Canonical decl: alt::ViewMatrixLayout::Element
// tdtd
// using alt::ViewMatrixLayout::Element = float
typedef float alt_ViewMatrixLayout_Element;

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:323:15
// alt::ViewMatrixLayout::Transposed
// Canonical decl: alt::ViewMatrixLayout::Transposed
// using alt::ViewMatrixLayout::Transposed = class alt::ViewMatrixLayout
// alt_ViewMatrixLayout is already typedefed

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/entities/../deps/alt-math/alt-math.h:362:11
// alt::ViewMatrix
// Canonical decl: alt::ViewMatrix
// using alt::ViewMatrix = class alt::Matrix<float, 4, 4, class alt::ViewMatrixLayout>
typedef struct alt_Matrixfloat44ViewMatrixLayout alt_Matrixfloat44ViewMatrixLayout;

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/types/Types.h:7:8
// alt::Size
// Canonical decl: alt::Size
// tdtd
// using alt::Size = unsigned long long
typedef unsigned long long alt_Size;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/String.h:13:8
// class alt::String
    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/String.h:124:9
    // char * data

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/String.h:125:8
    // alt::Size size

struct alt_String {
    char * data;
    unsigned long long size;
};

// functions from class alt::String
// has no accessible destructor for 'free' function

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/String.h:16:3
// alt::String::String
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype unsigned long long
// fundamental
// cpptype char
// fundamental
// Return ptr must be manually freed with alt_String_free()
CAPI struct alt_String* alt_String_Create(unsigned long long _size, char fill);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/String.h:37:3
// alt::String::String
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype const char *
// Pointer type
// cpptype char
// fundamental
// cpptype unsigned long long
// fundamental
// Return ptr must be manually freed with alt_String_free()
CAPI struct alt_String* alt_String_Create_1(char* _data, unsigned long long size);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/String.h:43:3
// alt::String::String
// Constructor
// Return type
// cpptype void
// fundamental
// Return ptr must be manually freed with alt_String_free()
CAPI struct alt_String* alt_String_Create_2();

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/String.h:49:3
// alt::String::String
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype const char *
// Pointer type
// cpptype char
// fundamental
// Return ptr must be manually freed with alt_String_free()
CAPI struct alt_String* alt_String_Create_3(char* _str);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/String.h:62:3
// alt::String::String
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype const class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> > &
// type is in STD

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/String.h:68:3
// alt::String::String
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype const class alt::String &
// Reference type
// cpptype class alt::String
// Return ptr must be manually freed with alt_String_free()
CAPI struct alt_String* alt_String_Create_5(struct alt_String* that);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/String.h:74:3
// alt::String::String
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype class alt::String &&
// Reference type
// cpptype class alt::String
// Return ptr must be manually freed with alt_String_free()
CAPI struct alt_String* alt_String_Create_6(struct alt_String* that);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/String.h:82:3
// alt::String::~String
// Destructor

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/String.h:84:9
// alt::String::operator[]
// Overloaded operator
// Return type
// cpptype char &
// Reference type
// cpptype char
// fundamental
// cpptype unsigned long long
// fundamental
CAPI char* alt_String_Access_uint64_t(struct alt_String* _instance, unsigned long long key);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/String.h:85:8
// alt::String::operator[]
// Overloaded operator
// Return type
// cpptype char
// fundamental
// cpptype unsigned long long
// fundamental
CAPI char alt_String_Access_uint64_t_1(struct alt_String* _instance, unsigned long long key);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/String.h:87:11
// alt::String::operator=
// Overloaded operator
// Return type
// cpptype class alt::String &
// Reference type
// cpptype class alt::String
// cpptype const class alt::String &
// Reference type
// cpptype class alt::String
CAPI void alt_String_Assign_constStringRef(struct alt_String* _instance, struct alt_String* that);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/String.h:94:11
// alt::String::operator=
// Overloaded operator
// Return type
// cpptype class alt::String &
// Reference type
// cpptype class alt::String
// cpptype class alt::String &&
// Reference type
// cpptype class alt::String
CAPI void alt_String_Assign_StringRefRef(struct alt_String* _instance, struct alt_String* that);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/String.h:101:8
// alt::String::IsEmpty
// Return type
// cpptype _Bool
// fundamental
CAPI _Bool alt_String_IsEmpty(struct alt_String* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/String.h:103:15
// alt::String::GetData
// Return type
// cpptype const char *
// Pointer type
// cpptype char
// fundamental
CAPI char* alt_String_GetData(struct alt_String* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/String.h:104:9
// alt::String::GetData
// Return type
// cpptype char *
// Pointer type
// cpptype char
// fundamental
CAPI char* alt_String_GetData_1(struct alt_String* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/String.h:105:8
// alt::String::GetSize
// Return type
// cpptype unsigned long long
// fundamental
CAPI unsigned long long alt_String_GetSize(struct alt_String* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/String.h:107:8
// alt::String::operator==
// Overloaded operator
// Return type
// cpptype _Bool
// fundamental
// cpptype class alt::String
CAPI _Bool alt_String_Equals_String(struct alt_String* _instance, struct alt_String* that);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/String.h:108:8
// alt::String::operator!=
// Overloaded operator
// Return type
// cpptype _Bool
// fundamental
// cpptype class alt::String
CAPI _Bool alt_String_NotEquals_String(struct alt_String* _instance, struct alt_String* that);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/String.h:110:15
// alt::String::ToString
// Return type
// cpptype class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >
// type is in STD

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/String.h:111:15
// alt::String::CStr
// Return type
// cpptype const char *
// Pointer type
// cpptype char
// fundamental
CAPI char* alt_String_CStr(struct alt_String* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/String.h:127:8
// alt::String::Swap
// Not public

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/String.h:133:17
// alt::String::Concat
// Not public

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/String.h:150:9
// struct std::hash<alt::String>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/StringView.h:14:8
// class alt::StringView
    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/StringView.h:16:15
    // const char * data

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/StringView.h:17:8
    // alt::Size size

struct alt_StringView {
    const char * data;
    unsigned long long size;
};

// functions from class alt::StringView
CAPI void alt_StringView_free(struct alt_StringView* ptr);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/StringView.h:20:3
// alt::StringView::StringView
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype const char *
// Pointer type
// cpptype char
// fundamental
// cpptype unsigned long long
// fundamental
// Return ptr must be manually freed with alt_StringView_free()
CAPI struct alt_StringView* alt_StringView_Create(char* _data, unsigned long long _size);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/StringView.h:27:3
// alt::StringView::StringView
// Constructor
// Return type
// cpptype void
// fundamental
// Return ptr must be manually freed with alt_StringView_free()
CAPI struct alt_StringView* alt_StringView_Create_1();

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/StringView.h:33:3
// alt::StringView::StringView
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype const char *
// Pointer type
// cpptype char
// fundamental
// Return ptr must be manually freed with alt_StringView_free()
CAPI struct alt_StringView* alt_StringView_Create_2(char* _str);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/StringView.h:46:3
// alt::StringView::StringView
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype const class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> > &
// type is in STD

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/StringView.h:52:3
// alt::StringView::StringView
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype const class alt::String &
// Reference type
// cpptype class alt::String
// Return ptr must be manually freed with alt_StringView_free()
CAPI struct alt_StringView* alt_StringView_Create_4(struct alt_String* _str);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/StringView.h:58:3
// alt::StringView::StringView
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype class std::basic_string_view<char, struct std::char_traits<char> >
// type is in STD

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/StringView.h:64:8
// alt::StringView::IsEmpty
// Return type
// cpptype _Bool
// fundamental
CAPI _Bool alt_StringView_IsEmpty(struct alt_StringView* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/StringView.h:66:15
// alt::StringView::GetData
// Return type
// cpptype const char *
// Pointer type
// cpptype char
// fundamental
CAPI char* alt_StringView_GetData(struct alt_StringView* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/StringView.h:67:8
// alt::StringView::GetSize
// Return type
// cpptype unsigned long long
// fundamental
CAPI unsigned long long alt_StringView_GetSize(struct alt_StringView* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/StringView.h:69:8
// alt::StringView::operator[]
// Overloaded operator
// Return type
// cpptype char
// fundamental
// cpptype unsigned long long
// fundamental
CAPI char alt_StringView_Access_uint64_t(struct alt_StringView* _instance, unsigned long long key);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/StringView.h:71:8
// alt::StringView::operator==
// Overloaded operator
// Return type
// cpptype _Bool
// fundamental
// cpptype class alt::StringView
CAPI _Bool alt_StringView_Equals_StringView(struct alt_StringView* _instance, struct alt_StringView* that);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/StringView.h:72:8
// alt::StringView::operator!=
// Overloaded operator
// Return type
// cpptype _Bool
// fundamental
// cpptype class alt::StringView
CAPI _Bool alt_StringView_NotEquals_StringView(struct alt_StringView* _instance, struct alt_StringView* that);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/StringView.h:74:15
// alt::StringView::ToString
// Return type
// cpptype class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> >
// type is in STD

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/StringView.h:75:3
// alt::StringView::operator String
// Typecast overload
// Return type
// cpptype class alt::String
// Return ptr must be manually freed with alt_String_free()
CAPI struct alt_String* alt_StringView_To_String(struct alt_StringView* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/StringView.h:76:15
// alt::StringView::CStr
// Return type
// cpptype const char *
// Pointer type
// cpptype char
// fundamental
CAPI char* alt_StringView_CStr(struct alt_StringView* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/StringView.h:14:8
// alt::StringView::StringView
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype const class alt::StringView &
// Reference type
// cpptype class alt::StringView
// Return ptr must be manually freed with alt_StringView_free()
CAPI struct alt_StringView* alt_StringView_Create_6(struct alt_StringView* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/StringView.h:14:8
// alt::StringView::StringView
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype class alt::StringView &&
// Reference type
// cpptype class alt::StringView
// Return ptr must be manually freed with alt_StringView_free()
CAPI struct alt_StringView* alt_StringView_Create_7(struct alt_StringView* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/StringView.h:14:8
// alt::StringView::~StringView
// Destructor

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/StringView.h:14:8
// alt::StringView::operator=
// Overloaded operator
// Return type
// cpptype class alt::StringView &
// Reference type
// cpptype class alt::StringView
// cpptype const class alt::StringView &
// Reference type
// cpptype class alt::StringView
CAPI void alt_StringView_Assign_constStringViewRef(struct alt_StringView* _instance, struct alt_StringView* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/StringView.h:14:8
// alt::StringView::operator=
// Overloaded operator
// Return type
// cpptype class alt::StringView &
// Reference type
// cpptype class alt::StringView
// cpptype class alt::StringView &&
// Reference type
// cpptype class alt::StringView
CAPI void alt_StringView_Assign_StringViewRefRef(struct alt_StringView* _instance, struct alt_StringView* _p0);

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/script-objects/../types/RGBA.h:8:9
// struct alt::RGBA
    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/script-objects/../types/RGBA.h:10:11
    // uint8_t r

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/script-objects/../types/RGBA.h:11:11
    // uint8_t g

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/script-objects/../types/RGBA.h:12:11
    // uint8_t b

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/script-objects/../types/RGBA.h:13:11
    // uint8_t a

struct alt_RGBA {
    unsigned char r;
    unsigned char g;
    unsigned char b;
    unsigned char a;
};

// functions from struct alt::RGBA
CAPI void alt_RGBA_free(struct alt_RGBA* ptr);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/script-objects/../types/RGBA.h:15:3
// alt::RGBA::RGBA
// Constructor
// Return type
// cpptype void
// fundamental
// Return ptr must be manually freed with alt_RGBA_free()
CAPI struct alt_RGBA* alt_RGBA_Create();

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/script-objects/../types/RGBA.h:17:3
// alt::RGBA::RGBA
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype unsigned char
// fundamental
// cpptype unsigned char
// fundamental
// cpptype unsigned char
// fundamental
// cpptype unsigned char
// fundamental
// Return ptr must be manually freed with alt_RGBA_free()
CAPI struct alt_RGBA* alt_RGBA_Create_1(unsigned char _r, unsigned char _g, unsigned char _b, unsigned char _a);

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:10:8
// Array<T>
// isTemplated || isTemplateDecl.

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:10:8
// class alt::Array<class alt::MValue>
    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:105:6
    // class alt::MValue * data

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:106:8
    // alt::Size size

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:107:8
    // alt::Size capacity

struct alt_ArrayMValue {
    struct alt_MValue* data;
    unsigned long long size;
    unsigned long long capacity;
};

// functions from class alt::Array<class alt::MValue>
// has no accessible destructor for 'free' function

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:13:3
// alt::Array<alt::MValue>::Array
// Constructor
// Return type
// cpptype void
// fundamental
// Return ptr must be manually freed with alt_ArrayMValue_free()
CAPI struct alt_ArrayMValue* alt_ArrayMValue_Create();

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:31:3
// alt::Array<alt::MValue>::Array
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype const class alt::MValue *
// Pointer type
// cpptype class alt::MValue
// cpptype unsigned long long
// fundamental
// Return ptr must be manually freed with alt_ArrayMValue_free()
CAPI struct alt_ArrayMValue* alt_ArrayMValue_Create_1(struct alt_MValue* _data, unsigned long long _size);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:37:3
// alt::Array<alt::MValue>::Array
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype unsigned long long
// fundamental
// cpptype const class alt::MValue &
// Reference type
// cpptype class alt::MValue
// Return ptr must be manually freed with alt_ArrayMValue_free()
CAPI struct alt_ArrayMValue* alt_ArrayMValue_Create_2(unsigned long long _size, struct alt_MValue* fill);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:47:3
// alt::Array<alt::MValue>::Array
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype const class alt::Array<class alt::MValue> &
// Reference type
// cpptype class alt::Array<class alt::MValue>
// Return ptr must be manually freed with alt_ArrayMValue_free()
CAPI struct alt_ArrayMValue* alt_ArrayMValue_Create_3(struct alt_ArrayMValue* that);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:53:3
// alt::Array<alt::MValue>::Array
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype class alt::Array<class alt::MValue> &&
// Reference type
// cpptype class alt::Array<class alt::MValue>
// Return ptr must be manually freed with alt_ArrayMValue_free()
CAPI struct alt_ArrayMValue* alt_ArrayMValue_Create_4(struct alt_ArrayMValue* that);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:60:3
// alt::Array<alt::MValue>::~Array
// Destructor

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:62:10
// alt::Array<alt::MValue>::operator=
// Overloaded operator
// Return type
// cpptype class alt::Array<class alt::MValue> &
// Reference type
// cpptype class alt::Array<class alt::MValue>
// cpptype const class alt::Array<class alt::MValue> &
// Reference type
// cpptype class alt::Array<class alt::MValue>
CAPI void alt_ArrayMValue_Assign_constArrayMValueRef(struct alt_ArrayMValue* _instance, struct alt_ArrayMValue* that);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:73:10
// alt::Array<alt::MValue>::operator=
// Overloaded operator
// Return type
// cpptype class alt::Array<class alt::MValue> &
// Reference type
// cpptype class alt::Array<class alt::MValue>
// cpptype class alt::Array<class alt::MValue> &&
// Reference type
// cpptype class alt::Array<class alt::MValue>
CAPI void alt_ArrayMValue_Assign_ArrayMValueRefRef(struct alt_ArrayMValue* _instance, struct alt_ArrayMValue* that);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:86:8
// alt::Array<alt::MValue>::Push
// Return type
// cpptype void
// fundamental
// cpptype const class alt::MValue &
// Reference type
// cpptype class alt::MValue
CAPI void alt_ArrayMValue_Push(struct alt_ArrayMValue* _instance, struct alt_MValue* el);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:93:8
// alt::Array<alt::MValue>::GetSize
// Return type
// cpptype unsigned long long
// fundamental
CAPI unsigned long long alt_ArrayMValue_GetSize(struct alt_ArrayMValue* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:94:8
// alt::Array<alt::MValue>::GetCapacity
// Return type
// cpptype unsigned long long
// fundamental
CAPI unsigned long long alt_ArrayMValue_GetCapacity(struct alt_ArrayMValue* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:96:6
// alt::Array<alt::MValue>::operator[]
// Overloaded operator
// Return type
// cpptype class alt::MValue &
// Reference type
// cpptype class alt::MValue
// cpptype unsigned long long
// fundamental
CAPI struct alt_MValue* alt_ArrayMValue_Access_uint64_t(struct alt_ArrayMValue* _instance, unsigned long long key);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:97:12
// alt::Array<alt::MValue>::operator[]
// Overloaded operator
// Return type
// cpptype const class alt::MValue &
// Reference type
// cpptype class alt::MValue
// cpptype unsigned long long
// fundamental
CAPI struct alt_MValue* alt_ArrayMValue_Access_uint64_t_1(struct alt_ArrayMValue* _instance, unsigned long long key);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:99:6
// alt::Array<alt::MValue>::begin
// Return type
// cpptype class alt::MValue *
// Pointer type
// cpptype class alt::MValue
CAPI struct alt_MValue* alt_ArrayMValue_begin(struct alt_ArrayMValue* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:100:12
// alt::Array<alt::MValue>::begin
// Return type
// cpptype const class alt::MValue *
// Pointer type
// cpptype class alt::MValue
CAPI struct alt_MValue* alt_ArrayMValue_begin_1(struct alt_ArrayMValue* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:101:6
// alt::Array<alt::MValue>::end
// Return type
// cpptype class alt::MValue *
// Pointer type
// cpptype class alt::MValue
CAPI struct alt_MValue* alt_ArrayMValue_end(struct alt_ArrayMValue* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:102:12
// alt::Array<alt::MValue>::end
// Return type
// cpptype const class alt::MValue *
// Pointer type
// cpptype class alt::MValue
CAPI struct alt_MValue* alt_ArrayMValue_end_1(struct alt_ArrayMValue* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:109:8
// alt::Array<alt::MValue>::Realloc
// Not public

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:10:8
// class alt::Array<class alt::String>
    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:105:6
    // class alt::String * data

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:106:8
    // alt::Size size

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:107:8
    // alt::Size capacity

struct alt_ArrayString {
    struct alt_String* data;
    unsigned long long size;
    unsigned long long capacity;
};

// functions from class alt::Array<class alt::String>
// has no accessible destructor for 'free' function

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:13:3
// alt::Array<alt::String>::Array
// Constructor
// Return type
// cpptype void
// fundamental
// Return ptr must be manually freed with alt_ArrayString_free()
CAPI struct alt_ArrayString* alt_ArrayString_Create();

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:31:3
// alt::Array<alt::String>::Array
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype const class alt::String *
// Pointer type
// cpptype class alt::String
// cpptype unsigned long long
// fundamental
// Return ptr must be manually freed with alt_ArrayString_free()
CAPI struct alt_ArrayString* alt_ArrayString_Create_1(struct alt_String* _data, unsigned long long _size);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:37:3
// alt::Array<alt::String>::Array
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype unsigned long long
// fundamental
// cpptype const class alt::String &
// Reference type
// cpptype class alt::String
// Return ptr must be manually freed with alt_ArrayString_free()
CAPI struct alt_ArrayString* alt_ArrayString_Create_2(unsigned long long _size, struct alt_String* fill);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:47:3
// alt::Array<alt::String>::Array
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype const class alt::Array<class alt::String> &
// Reference type
// cpptype class alt::Array<class alt::String>
// Return ptr must be manually freed with alt_ArrayString_free()
CAPI struct alt_ArrayString* alt_ArrayString_Create_3(struct alt_ArrayString* that);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:53:3
// alt::Array<alt::String>::Array
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype class alt::Array<class alt::String> &&
// Reference type
// cpptype class alt::Array<class alt::String>
// Return ptr must be manually freed with alt_ArrayString_free()
CAPI struct alt_ArrayString* alt_ArrayString_Create_4(struct alt_ArrayString* that);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:60:3
// alt::Array<alt::String>::~Array
// Destructor

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:62:10
// alt::Array<alt::String>::operator=
// Overloaded operator
// Return type
// cpptype class alt::Array<class alt::String> &
// Reference type
// cpptype class alt::Array<class alt::String>
// cpptype const class alt::Array<class alt::String> &
// Reference type
// cpptype class alt::Array<class alt::String>
CAPI void alt_ArrayString_Assign_constArrayStringRef(struct alt_ArrayString* _instance, struct alt_ArrayString* that);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:73:10
// alt::Array<alt::String>::operator=
// Overloaded operator
// Return type
// cpptype class alt::Array<class alt::String> &
// Reference type
// cpptype class alt::Array<class alt::String>
// cpptype class alt::Array<class alt::String> &&
// Reference type
// cpptype class alt::Array<class alt::String>
CAPI void alt_ArrayString_Assign_ArrayStringRefRef(struct alt_ArrayString* _instance, struct alt_ArrayString* that);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:86:8
// alt::Array<alt::String>::Push
// Return type
// cpptype void
// fundamental
// cpptype const class alt::String &
// Reference type
// cpptype class alt::String
CAPI void alt_ArrayString_Push(struct alt_ArrayString* _instance, struct alt_String* el);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:93:8
// alt::Array<alt::String>::GetSize
// Return type
// cpptype unsigned long long
// fundamental
CAPI unsigned long long alt_ArrayString_GetSize(struct alt_ArrayString* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:94:8
// alt::Array<alt::String>::GetCapacity
// Return type
// cpptype unsigned long long
// fundamental
CAPI unsigned long long alt_ArrayString_GetCapacity(struct alt_ArrayString* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:96:6
// alt::Array<alt::String>::operator[]
// Overloaded operator
// Return type
// cpptype class alt::String &
// Reference type
// cpptype class alt::String
// cpptype unsigned long long
// fundamental
CAPI struct alt_String* alt_ArrayString_Access_uint64_t(struct alt_ArrayString* _instance, unsigned long long key);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:97:12
// alt::Array<alt::String>::operator[]
// Overloaded operator
// Return type
// cpptype const class alt::String &
// Reference type
// cpptype class alt::String
// cpptype unsigned long long
// fundamental
CAPI struct alt_String* alt_ArrayString_Access_uint64_t_1(struct alt_ArrayString* _instance, unsigned long long key);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:99:6
// alt::Array<alt::String>::begin
// Return type
// cpptype class alt::String *
// Pointer type
// cpptype class alt::String
CAPI struct alt_String* alt_ArrayString_begin(struct alt_ArrayString* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:100:12
// alt::Array<alt::String>::begin
// Return type
// cpptype const class alt::String *
// Pointer type
// cpptype class alt::String
CAPI struct alt_String* alt_ArrayString_begin_1(struct alt_ArrayString* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:101:6
// alt::Array<alt::String>::end
// Return type
// cpptype class alt::String *
// Pointer type
// cpptype class alt::String
CAPI struct alt_String* alt_ArrayString_end(struct alt_ArrayString* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:102:12
// alt::Array<alt::String>::end
// Return type
// cpptype const class alt::String *
// Pointer type
// cpptype class alt::String
CAPI struct alt_String* alt_ArrayString_end_1(struct alt_ArrayString* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:109:8
// alt::Array<alt::String>::Realloc
// Not public

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:10:8
// class alt::Array<class alt::StringView>
    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:105:6
    // class alt::StringView * data

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:106:8
    // alt::Size size

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:107:8
    // alt::Size capacity

struct alt_ArrayStringView {
    struct alt_StringView* data;
    unsigned long long size;
    unsigned long long capacity;
};

// functions from class alt::Array<class alt::StringView>
// has no accessible destructor for 'free' function

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:13:3
// alt::Array<alt::StringView>::Array
// Constructor
// Return type
// cpptype void
// fundamental
// Return ptr must be manually freed with alt_ArrayStringView_free()
CAPI struct alt_ArrayStringView* alt_ArrayStringView_Create();

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:31:3
// alt::Array<alt::StringView>::Array
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype const class alt::StringView *
// Pointer type
// cpptype class alt::StringView
// cpptype unsigned long long
// fundamental
// Return ptr must be manually freed with alt_ArrayStringView_free()
CAPI struct alt_ArrayStringView* alt_ArrayStringView_Create_1(struct alt_StringView* _data, unsigned long long _size);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:37:3
// alt::Array<alt::StringView>::Array
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype unsigned long long
// fundamental
// cpptype const class alt::StringView &
// Reference type
// cpptype class alt::StringView
// Return ptr must be manually freed with alt_ArrayStringView_free()
CAPI struct alt_ArrayStringView* alt_ArrayStringView_Create_2(unsigned long long _size, struct alt_StringView* fill);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:47:3
// alt::Array<alt::StringView>::Array
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype const class alt::Array<class alt::StringView> &
// Reference type
// cpptype class alt::Array<class alt::StringView>
// Return ptr must be manually freed with alt_ArrayStringView_free()
CAPI struct alt_ArrayStringView* alt_ArrayStringView_Create_3(struct alt_ArrayStringView* that);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:53:3
// alt::Array<alt::StringView>::Array
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype class alt::Array<class alt::StringView> &&
// Reference type
// cpptype class alt::Array<class alt::StringView>
// Return ptr must be manually freed with alt_ArrayStringView_free()
CAPI struct alt_ArrayStringView* alt_ArrayStringView_Create_4(struct alt_ArrayStringView* that);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:60:3
// alt::Array<alt::StringView>::~Array
// Destructor

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:62:10
// alt::Array<alt::StringView>::operator=
// Overloaded operator
// Return type
// cpptype class alt::Array<class alt::StringView> &
// Reference type
// cpptype class alt::Array<class alt::StringView>
// cpptype const class alt::Array<class alt::StringView> &
// Reference type
// cpptype class alt::Array<class alt::StringView>
CAPI void alt_ArrayStringView_Assign_constArrayStringViewRef(struct alt_ArrayStringView* _instance, struct alt_ArrayStringView* that);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:73:10
// alt::Array<alt::StringView>::operator=
// Overloaded operator
// Return type
// cpptype class alt::Array<class alt::StringView> &
// Reference type
// cpptype class alt::Array<class alt::StringView>
// cpptype class alt::Array<class alt::StringView> &&
// Reference type
// cpptype class alt::Array<class alt::StringView>
CAPI void alt_ArrayStringView_Assign_ArrayStringViewRefRef(struct alt_ArrayStringView* _instance, struct alt_ArrayStringView* that);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:86:8
// alt::Array<alt::StringView>::Push
// Return type
// cpptype void
// fundamental
// cpptype const class alt::StringView &
// Reference type
// cpptype class alt::StringView
CAPI void alt_ArrayStringView_Push(struct alt_ArrayStringView* _instance, struct alt_StringView* el);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:93:8
// alt::Array<alt::StringView>::GetSize
// Return type
// cpptype unsigned long long
// fundamental
CAPI unsigned long long alt_ArrayStringView_GetSize(struct alt_ArrayStringView* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:94:8
// alt::Array<alt::StringView>::GetCapacity
// Return type
// cpptype unsigned long long
// fundamental
CAPI unsigned long long alt_ArrayStringView_GetCapacity(struct alt_ArrayStringView* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:96:6
// alt::Array<alt::StringView>::operator[]
// Overloaded operator
// Return type
// cpptype class alt::StringView &
// Reference type
// cpptype class alt::StringView
// cpptype unsigned long long
// fundamental
CAPI struct alt_StringView* alt_ArrayStringView_Access_uint64_t(struct alt_ArrayStringView* _instance, unsigned long long key);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:97:12
// alt::Array<alt::StringView>::operator[]
// Overloaded operator
// Return type
// cpptype const class alt::StringView &
// Reference type
// cpptype class alt::StringView
// cpptype unsigned long long
// fundamental
CAPI struct alt_StringView* alt_ArrayStringView_Access_uint64_t_1(struct alt_ArrayStringView* _instance, unsigned long long key);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:99:6
// alt::Array<alt::StringView>::begin
// Return type
// cpptype class alt::StringView *
// Pointer type
// cpptype class alt::StringView
CAPI struct alt_StringView* alt_ArrayStringView_begin(struct alt_ArrayStringView* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:100:12
// alt::Array<alt::StringView>::begin
// Return type
// cpptype const class alt::StringView *
// Pointer type
// cpptype class alt::StringView
CAPI struct alt_StringView* alt_ArrayStringView_begin_1(struct alt_ArrayStringView* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:101:6
// alt::Array<alt::StringView>::end
// Return type
// cpptype class alt::StringView *
// Pointer type
// cpptype class alt::StringView
CAPI struct alt_StringView* alt_ArrayStringView_end(struct alt_ArrayStringView* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:102:12
// alt::Array<alt::StringView>::end
// Return type
// cpptype const class alt::StringView *
// Pointer type
// cpptype class alt::StringView
CAPI struct alt_StringView* alt_ArrayStringView_end_1(struct alt_ArrayStringView* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/Array.h:109:8
// alt::Array<alt::StringView>::Realloc
// Not public

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:14:8
// class alt::MValue
    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:119:8
    // enum alt::MValue::Type type

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:120:13
    // struct alt::MValue::_Storage * storage

struct alt_MValue {
    enum alt_MValue_Type type;
    struct alt_MValue_Storage* storage;
};

// functions from class alt::MValue
// has no accessible destructor for 'free' function

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:93:8
// alt::MValue::CreateNil
// Not public

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:99:8
// alt::MValue::Copy
// Not public

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:108:8
// alt::MValue::Destroy
// Not public

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:123:3
// alt::MValue::MValue
// Constructor
// Return type
// cpptype void
// fundamental
// Return ptr must be manually freed with alt_MValue_free()
CAPI struct alt_MValue* alt_MValue_Create();

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:124:3
// alt::MValue::MValue
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype const _Bool &
// Reference type
// cpptype _Bool
// fundamental
// Return ptr must be manually freed with alt_MValue_free()
CAPI struct alt_MValue* alt_MValue_Create_1(_Bool* val);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:125:3
// alt::MValue::MValue
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype const long long &
// Reference type
// cpptype long long
// fundamental
// Return ptr must be manually freed with alt_MValue_free()
CAPI struct alt_MValue* alt_MValue_Create_2(long long* val);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:126:3
// alt::MValue::MValue
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype const unsigned long long &
// Reference type
// cpptype unsigned long long
// fundamental
// Return ptr must be manually freed with alt_MValue_free()
CAPI struct alt_MValue* alt_MValue_Create_3(unsigned long long* val);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:127:3
// alt::MValue::MValue
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype const double &
// Reference type
// cpptype double
// fundamental
// Return ptr must be manually freed with alt_MValue_free()
CAPI struct alt_MValue* alt_MValue_Create_4(double* val);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:128:3
// alt::MValue::MValue
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype const class alt::String &
// Reference type
// cpptype class alt::String
// Return ptr must be manually freed with alt_MValue_free()
CAPI struct alt_MValue* alt_MValue_Create_5(struct alt_String* val);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:129:3
// alt::MValue::MValue
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype const class alt::Array<class alt::MValue> &
// Reference type
// cpptype class alt::Array<class alt::MValue>
// Return ptr must be manually freed with alt_MValue_free()
CAPI struct alt_MValue* alt_MValue_Create_6(struct alt_ArrayMValue* val);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:130:3
// alt::MValue::MValue
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype const class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > > &
// type is in STD

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:131:3
// alt::MValue::MValue
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype class alt::IBaseObject *const &
// Reference type
// cpptype class alt::IBaseObject *
// Pointer type
// cpptype class alt::IBaseObject
// Return ptr must be manually freed with alt_MValue_free()
CAPI struct alt_MValue* alt_MValue_Create_8(struct alt_IBaseObject** val);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:132:3
// alt::MValue::MValue
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype const struct alt::MValue::Function &
// Reference type
// cpptype struct alt::MValue::Function
// Return ptr must be manually freed with alt_MValue_free()
CAPI struct alt_MValue* alt_MValue_Create_9(struct alt_MValue_Function* val);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:134:3
// alt::MValue::MValue
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype int
// fundamental
// Return ptr must be manually freed with alt_MValue_free()
CAPI struct alt_MValue* alt_MValue_Create_10(int val);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:135:3
// alt::MValue::MValue
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype unsigned int
// fundamental
// Return ptr must be manually freed with alt_MValue_free()
CAPI struct alt_MValue* alt_MValue_Create_11(unsigned int val);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:136:3
// alt::MValue::MValue
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype const char *
// Pointer type
// cpptype char
// fundamental
// Return ptr must be manually freed with alt_MValue_free()
CAPI struct alt_MValue* alt_MValue_Create_12(char* val);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:137:3
// alt::MValue::MValue
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype const class std::basic_string<char, struct std::char_traits<char>, class std::allocator<char> > &
// type is in STD

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:139:3
// alt::MValue::MValue
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype const class alt::MValue &
// Reference type
// cpptype class alt::MValue
// Return ptr must be manually freed with alt_MValue_free()
CAPI struct alt_MValue* alt_MValue_Create_14(struct alt_MValue* that);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:141:11
// alt::MValue::operator=
// Overloaded operator
// Return type
// cpptype class alt::MValue &
// Reference type
// cpptype class alt::MValue
// cpptype const class alt::MValue &
// Reference type
// cpptype class alt::MValue
CAPI void alt_MValue_Assign_constMValueRef(struct alt_MValue* _instance, struct alt_MValue* that);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:149:8
// alt::MValue::ToBool
// Return type
// cpptype _Bool
// fundamental
CAPI _Bool alt_MValue_ToBool(struct alt_MValue* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:154:7
// alt::MValue::ToInt
// Return type
// cpptype long long
// fundamental
CAPI long long alt_MValue_ToInt(struct alt_MValue* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:171:8
// alt::MValue::ToUInt
// Return type
// cpptype unsigned long long
// fundamental
CAPI unsigned long long alt_MValue_ToUInt(struct alt_MValue* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:188:10
// alt::MValue::ToString
// Return type
// cpptype class alt::String
// Return ptr must be manually freed with alt_String_free()
CAPI struct alt_String* alt_MValue_ToString(struct alt_MValue* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:207:8
// alt::MValue::GetType
// Return type
// cpptype enum alt::MValue::Type
// enumaral type
CAPI enum alt_MValue_Type alt_MValue_GetType(struct alt_MValue* _instance);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:225:3
// alt::MValue::~MValue
// Destructor

enum alt_MValue_Type {
    ALT_MVALUE_TYPE_NIL = 0,
    ALT_MVALUE_TYPE_BOOL = 1,
    ALT_MVALUE_TYPE_INT = 2,
    ALT_MVALUE_TYPE_UINT = 3,
    ALT_MVALUE_TYPE_DOUBLE = 4,
    ALT_MVALUE_TYPE_STRING = 5,
    ALT_MVALUE_TYPE_LIST = 6,
    ALT_MVALUE_TYPE_DICT = 7,
    ALT_MVALUE_TYPE_ENTITY = 8,
    ALT_MVALUE_TYPE_FUNCTION = 9
};

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:31:9
// alt::MValue::Nil
// Canonical decl: alt::MValue::Nil
// tdtd
// tdtd incomplete type
// using alt::MValue::Nil = void
// Not trivial type

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:32:9
// alt::MValue::Bool
// Canonical decl: alt::MValue::Bool
// tdtd
// using alt::MValue::Bool = _Bool
typedef _Bool alt_MValue_Bool;

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:33:9
// alt::MValue::Int
// Canonical decl: alt::MValue::Int
// tdtd
// using alt::MValue::Int = long long
typedef long long alt_MValue_Int;

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:34:9
// alt::MValue::UInt
// Canonical decl: alt::MValue::UInt
// tdtd
// using alt::MValue::UInt = unsigned long long
typedef unsigned long long alt_MValue_UInt;

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:35:9
// alt::MValue::Double
// Canonical decl: alt::MValue::Double
// tdtd
// using alt::MValue::Double = double
typedef double alt_MValue_Double;

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:36:9
// alt::MValue::String
// Canonical decl: alt::MValue::String
// tdtd
// using alt::MValue::String = class alt::String
// alt_String is already typedefed

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:37:9
// alt::MValue::List
// Canonical decl: alt::MValue::List
// tdtd
// using alt::MValue::List = class alt::Array<class alt::MValue>
// alt_ArrayMValue is already typedefed

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:38:9
// alt::MValue::Dict
// Canonical decl: alt::MValue::Dict
// tdtd
// using alt::MValue::Dict = class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >
typedef struct std_unordered_mapStringMValuestd_hashStringstd_equal_toStringstd_allocatorstd_pairconstStringMValue std_unordered_mapStringMValuestd_hashStringstd_equal_toStringstd_allocatorstd_pairconstStringMValue;

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:39:9
// alt::MValue::Entity
// Canonical decl: alt::MValue::Entity
// tdtd
// using alt::MValue::Entity = class alt::IBaseObject *
typedef struct alt_IBaseObject* alt_MValue_Entity;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:40:10
// struct alt::MValue::Function
    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:40:27
    // void * invoker

struct alt_MValue_Function {
    void * invoker;
};

// functions from struct alt::MValue::Function
CAPI void alt_MValue_Function_free(struct alt_MValue_Function* ptr);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:40:10
// alt::MValue::Function::Function
// Constructor
// Return type
// cpptype void
// fundamental
// Return ptr must be manually freed with alt_MValue_Function_free()
CAPI struct alt_MValue_Function* alt_MValue_Function_Create();

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:40:10
// alt::MValue::Function::Function
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype const struct alt::MValue::Function &
// Reference type
// cpptype struct alt::MValue::Function
// Return ptr must be manually freed with alt_MValue_Function_free()
CAPI struct alt_MValue_Function* alt_MValue_Function_Create_1(struct alt_MValue_Function* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:40:10
// alt::MValue::Function::Function
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype struct alt::MValue::Function &&
// Reference type
// cpptype struct alt::MValue::Function
// Return ptr must be manually freed with alt_MValue_Function_free()
CAPI struct alt_MValue_Function* alt_MValue_Function_Create_2(struct alt_MValue_Function* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:40:10
// alt::MValue::Function::~Function
// Destructor

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:40:10
// alt::MValue::Function::operator=
// Overloaded operator
// Return type
// cpptype struct alt::MValue::Function &
// Reference type
// cpptype struct alt::MValue::Function
// cpptype const struct alt::MValue::Function &
// Reference type
// cpptype struct alt::MValue::Function
CAPI void alt_MValue_Function_Assign_constMValue_FunctionRef(struct alt_MValue_Function* _instance, struct alt_MValue_Function* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:40:10
// alt::MValue::Function::operator=
// Overloaded operator
// Return type
// cpptype struct alt::MValue::Function &
// Reference type
// cpptype struct alt::MValue::Function
// cpptype struct alt::MValue::Function &&
// Reference type
// cpptype struct alt::MValue::Function
CAPI void alt_MValue_Function_Assign_MValue_FunctionRefRef(struct alt_MValue_Function* _instance, struct alt_MValue_Function* _p0);

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:42:9
// class alt::MValue::TypeMismatchException
// derives from std::exception
// Parent is in STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:53:10
// _TypeTag<Args...>
// isTemplated || isTemplateDecl.

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:56:11
// _Type<idx, _T, _Args...>
// isTemplated || isTemplateDecl.

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:59:11
// _Type<0, type-parameter-1-0, type-parameter-1-1...>
// Is ClassTemplatePartialSpecialization.

// Template Alias
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:62:4
// alt::MValue::_TypeTag::Type = alt::MValue::_TypeTag::Type

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:62:10
// alt::MValue::_TypeTag::Type
// Canonical decl: alt::MValue::_TypeTag::Type
// Describes template
// using alt::MValue::_TypeTag::Type = typename _Type<(uint64_t)type, type-parameter-0-0...>::Type
// Not trivial type

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// _TypeId<idx, U, _T, _Args...>
// isTemplated || isTemplateDecl.

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:68:11
// _TypeId<idx, type-parameter-1-1, type-parameter-1-1, type-parameter-1-2...>
// Is ClassTemplatePartialSpecialization.

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:53:10
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Template Alias
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:62:4
// alt::MValue::_TypeTag<void, bool, long long, unsigned long long, double, alt::String, alt::Array<alt::MValue>, std::unordered_map<alt::String, alt::MValue, std::hash<alt::String>, std::equal_to<alt::String>, std::allocator<std::pair<const alt::String, alt::MValue> > >, alt::IBaseObject *, alt::MValue::Function>::Type = alt::MValue::_TypeTag<void, bool, long long, unsigned long long, double, alt::String, alt::Array<alt::MValue>, std::unordered_map<alt::String, alt::MValue, std::hash<alt::String>, std::equal_to<alt::String>, std::allocator<std::pair<const alt::String, alt::MValue> > >, alt::IBaseObject *, alt::MValue::Function>::Type

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:62:10
// alt::MValue::_TypeTag<void, bool, long long, unsigned long long, double, alt::String, alt::Array<alt::MValue>, std::unordered_map<alt::String, alt::MValue, std::hash<alt::String>, std::equal_to<alt::String>, std::allocator<std::pair<const alt::String, alt::MValue> > >, alt::IBaseObject *, alt::MValue::Function>::Type
// Canonical decl: alt::MValue::_TypeTag<void, bool, long long, unsigned long long, double, alt::String, alt::Array<alt::MValue>, std::unordered_map<alt::String, alt::MValue, std::hash<alt::String>, std::equal_to<alt::String>, std::allocator<std::pair<const alt::String, alt::MValue> > >, alt::IBaseObject *, alt::MValue::Function>::Type
// Describes template
// using alt::MValue::_TypeTag<void, bool, long long, unsigned long long, double, alt::String, alt::Array<alt::MValue>, std::unordered_map<alt::String, alt::MValue, std::hash<alt::String>, std::equal_to<alt::String>, std::allocator<std::pair<const alt::String, alt::MValue> > >, alt::IBaseObject *, alt::MValue::Function>::Type = typename _Type<(uint64_t)type, void, _Bool, long long, unsigned long long, double, class String, class Array<class MValue>, class unordered_map<class String, class MValue, struct hash<alt::String>, struct equal_to<class String>, class allocator<struct pair<const class String, class MValue> > >, class IBaseObject *, struct Function>::Type
// Not trivial type

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<0, _Bool, void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:68:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<1, _Bool, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<0, long long, void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<1, long long, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:68:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<2, long long, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<0, unsigned long long, void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<1, unsigned long long, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<2, unsigned long long, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:68:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<3, unsigned long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<0, double, void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<1, double, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<2, double, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<3, double, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:68:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<4, double, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<0, class alt::String, void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<1, class alt::String, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<2, class alt::String, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<3, class alt::String, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<4, class alt::String, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:68:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<5, class alt::String, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<0, class alt::Array<class alt::MValue>, void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<1, class alt::Array<class alt::MValue>, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<2, class alt::Array<class alt::MValue>, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<3, class alt::Array<class alt::MValue>, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<4, class alt::Array<class alt::MValue>, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<5, class alt::Array<class alt::MValue>, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:68:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<6, class alt::Array<class alt::MValue>, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<0, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<1, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<2, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<3, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<4, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<5, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<6, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:68:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<7, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<0, class alt::IBaseObject *, void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<1, class alt::IBaseObject *, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<2, class alt::IBaseObject *, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<3, class alt::IBaseObject *, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<4, class alt::IBaseObject *, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<5, class alt::IBaseObject *, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<6, class alt::IBaseObject *, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<7, class alt::IBaseObject *, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:68:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<8, class alt::IBaseObject *, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<0, struct alt::MValue::Function, void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<1, struct alt::MValue::Function, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<2, struct alt::MValue::Function, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<3, struct alt::MValue::Function, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<4, struct alt::MValue::Function, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<5, struct alt::MValue::Function, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<6, struct alt::MValue::Function, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<7, struct alt::MValue::Function, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:65:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<8, struct alt::MValue::Function, class alt::IBaseObject *, struct alt::MValue::Function>
// Has relations with STD namespace

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:68:11
// struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>::_TypeId<9, struct alt::MValue::Function, struct alt::MValue::Function>
// Has relations with STD namespace

// Typedef
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:74:9
// alt::MValue::TypeTag
// Canonical decl: alt::MValue::TypeTag
// tdtd
// tdstruct
// using alt::MValue::TypeTag = struct alt::MValue::_TypeTag<void, _Bool, long long, unsigned long long, double, class alt::String, class alt::Array<class alt::MValue>, class std::unordered_map<class alt::String, class alt::MValue, struct std::hash<alt::String>, struct std::equal_to<class alt::String>, class std::allocator<struct std::pair<const class alt::String, class alt::MValue> > >, class alt::IBaseObject *, struct alt::MValue::Function>
typedef struct alt_MValue_TypeTagvoid_BoollonglongunsignedlonglongdoubleStringArrayMValuestd_unordered_mapStringMValuestd_hashStringstd_equal_toStringstd_allocatorstd_pairconstStringMValueIBaseObjectPtrMValue_Function alt_MValue_TypeTagvoid_BoollonglongunsignedlonglongdoubleStringArrayMValuestd_unordered_mapStringMValuestd_hashStringstd_equal_toStringstd_allocatorstd_pairconstStringMValueIBaseObjectPtrMValue_Function;

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:76:10
// struct alt::MValue::_Storage
    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:76:30
    // uint64_t refCount

struct alt_MValue_Storage {
    unsigned long long refCount;
};

// the record and its methods are not publicly accessible

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:79:10
// Storage<T>
// isTemplated || isTemplateDecl.

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:79:10
// struct alt::MValue::Storage<_Bool>
// derives from struct alt::MValue::_Storage
    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:76:30
    // uint64_t refCount

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:79:33
    // _Bool value

struct alt_MValue_Storage_Bool {
    unsigned long long refCount;
    _Bool value;
};

// functions from struct alt::MValue::Storage<_Bool>
CAPI void alt_MValue_Storage_Bool_free(struct alt_MValue_Storage_Bool* ptr);

// derived record _Storage is not publicly accessible

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:79:10
// alt::MValue::Storage<bool>::Storage
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype const struct alt::MValue::Storage<_Bool> &
// Reference type
// cpptype struct alt::MValue::Storage<_Bool>
// Return ptr must be manually freed with alt_MValue_Storage_Bool_free()
CAPI struct alt_MValue_Storage_Bool* alt_MValue_Storage_Bool_Create(struct alt_MValue_Storage_Bool* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:79:10
// alt::MValue::Storage<bool>::Storage
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype struct alt::MValue::Storage<_Bool> &&
// Reference type
// cpptype struct alt::MValue::Storage<_Bool>
// Return ptr must be manually freed with alt_MValue_Storage_Bool_free()
CAPI struct alt_MValue_Storage_Bool* alt_MValue_Storage_Bool_Create_1(struct alt_MValue_Storage_Bool* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:79:10
// alt::MValue::Storage<bool>::operator=
// Overloaded operator
// Return type
// cpptype struct alt::MValue::Storage<_Bool> &
// Reference type
// cpptype struct alt::MValue::Storage<_Bool>
// cpptype const struct alt::MValue::Storage<_Bool> &
// Reference type
// cpptype struct alt::MValue::Storage<_Bool>
CAPI void alt_MValue_Storage_Bool_Assign_constMValue_Storage_BoolRef(struct alt_MValue_Storage_Bool* _instance, struct alt_MValue_Storage_Bool* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:79:10
// alt::MValue::Storage<bool>::operator=
// Overloaded operator
// Return type
// cpptype struct alt::MValue::Storage<_Bool> &
// Reference type
// cpptype struct alt::MValue::Storage<_Bool>
// cpptype struct alt::MValue::Storage<_Bool> &&
// Reference type
// cpptype struct alt::MValue::Storage<_Bool>
CAPI void alt_MValue_Storage_Bool_Assign_MValue_Storage_BoolRefRef(struct alt_MValue_Storage_Bool* _instance, struct alt_MValue_Storage_Bool* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:79:10
// alt::MValue::Storage<bool>::~Storage
// Destructor

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:79:10
// alt::MValue::Storage<bool>::Storage
// Constructor
// Return type
// cpptype void
// fundamental
// Return ptr must be manually freed with alt_MValue_Storage_Bool_free()
CAPI struct alt_MValue_Storage_Bool* alt_MValue_Storage_Bool_Create_2();

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:79:10
// struct alt::MValue::Storage<long long>
// derives from struct alt::MValue::_Storage
    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:76:30
    // uint64_t refCount

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:79:33
    // long long value

struct alt_MValue_Storagelonglong {
    unsigned long long refCount;
    long long value;
};

// functions from struct alt::MValue::Storage<long long>
CAPI void alt_MValue_Storagelonglong_free(struct alt_MValue_Storagelonglong* ptr);

// derived record _Storage is not publicly accessible

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:79:10
// alt::MValue::Storage<long long>::Storage
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype const struct alt::MValue::Storage<long long> &
// Reference type
// cpptype struct alt::MValue::Storage<long long>
// Return ptr must be manually freed with alt_MValue_Storagelonglong_free()
CAPI struct alt_MValue_Storagelonglong* alt_MValue_Storagelonglong_Create(struct alt_MValue_Storagelong_long* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:79:10
// alt::MValue::Storage<long long>::Storage
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype struct alt::MValue::Storage<long long> &&
// Reference type
// cpptype struct alt::MValue::Storage<long long>
// Return ptr must be manually freed with alt_MValue_Storagelonglong_free()
CAPI struct alt_MValue_Storagelonglong* alt_MValue_Storagelonglong_Create_1(struct alt_MValue_Storagelong_long* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:79:10
// alt::MValue::Storage<long long>::operator=
// Overloaded operator
// Return type
// cpptype struct alt::MValue::Storage<long long> &
// Reference type
// cpptype struct alt::MValue::Storage<long long>
// cpptype const struct alt::MValue::Storage<long long> &
// Reference type
// cpptype struct alt::MValue::Storage<long long>
CAPI void alt_MValue_Storagelonglong_Assign_constMValue_StoragelonglongRef(struct alt_MValue_Storagelonglong* _instance, struct alt_MValue_Storagelong_long* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:79:10
// alt::MValue::Storage<long long>::operator=
// Overloaded operator
// Return type
// cpptype struct alt::MValue::Storage<long long> &
// Reference type
// cpptype struct alt::MValue::Storage<long long>
// cpptype struct alt::MValue::Storage<long long> &&
// Reference type
// cpptype struct alt::MValue::Storage<long long>
CAPI void alt_MValue_Storagelonglong_Assign_MValue_StoragelonglongRefRef(struct alt_MValue_Storagelonglong* _instance, struct alt_MValue_Storagelong_long* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:79:10
// alt::MValue::Storage<long long>::~Storage
// Destructor

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:79:10
// alt::MValue::Storage<long long>::Storage
// Constructor
// Return type
// cpptype void
// fundamental
// Return ptr must be manually freed with alt_MValue_Storagelonglong_free()
CAPI struct alt_MValue_Storagelonglong* alt_MValue_Storagelonglong_Create_2();

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:79:10
// struct alt::MValue::Storage<unsigned long long>
// derives from struct alt::MValue::_Storage
    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:76:30
    // uint64_t refCount

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:79:33
    // unsigned long long value

struct alt_MValue_Storageunsignedlonglong {
    unsigned long long refCount;
    unsigned long long value;
};

// functions from struct alt::MValue::Storage<unsigned long long>
CAPI void alt_MValue_Storageunsignedlonglong_free(struct alt_MValue_Storageunsignedlonglong* ptr);

// derived record _Storage is not publicly accessible

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:79:10
// alt::MValue::Storage<unsigned long long>::Storage
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype const struct alt::MValue::Storage<unsigned long long> &
// Reference type
// cpptype struct alt::MValue::Storage<unsigned long long>
// Return ptr must be manually freed with alt_MValue_Storageunsignedlonglong_free()
CAPI struct alt_MValue_Storageunsignedlonglong* alt_MValue_Storageunsignedlonglong_Create(struct alt_MValue_Storageunsigned_long_long* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:79:10
// alt::MValue::Storage<unsigned long long>::Storage
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype struct alt::MValue::Storage<unsigned long long> &&
// Reference type
// cpptype struct alt::MValue::Storage<unsigned long long>
// Return ptr must be manually freed with alt_MValue_Storageunsignedlonglong_free()
CAPI struct alt_MValue_Storageunsignedlonglong* alt_MValue_Storageunsignedlonglong_Create_1(struct alt_MValue_Storageunsigned_long_long* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:79:10
// alt::MValue::Storage<unsigned long long>::operator=
// Overloaded operator
// Return type
// cpptype struct alt::MValue::Storage<unsigned long long> &
// Reference type
// cpptype struct alt::MValue::Storage<unsigned long long>
// cpptype const struct alt::MValue::Storage<unsigned long long> &
// Reference type
// cpptype struct alt::MValue::Storage<unsigned long long>
CAPI void alt_MValue_Storageunsignedlonglong_Assign_constMValue_StorageunsignedlonglongRef(struct alt_MValue_Storageunsignedlonglong* _instance, struct alt_MValue_Storageunsigned_long_long* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:79:10
// alt::MValue::Storage<unsigned long long>::operator=
// Overloaded operator
// Return type
// cpptype struct alt::MValue::Storage<unsigned long long> &
// Reference type
// cpptype struct alt::MValue::Storage<unsigned long long>
// cpptype struct alt::MValue::Storage<unsigned long long> &&
// Reference type
// cpptype struct alt::MValue::Storage<unsigned long long>
CAPI void alt_MValue_Storageunsignedlonglong_Assign_MValue_StorageunsignedlonglongRefRef(struct alt_MValue_Storageunsignedlonglong* _instance, struct alt_MValue_Storageunsigned_long_long* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:79:10
// alt::MValue::Storage<unsigned long long>::~Storage
// Destructor

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:79:10
// alt::MValue::Storage<unsigned long long>::Storage
// Constructor
// Return type
// cpptype void
// fundamental
// Return ptr must be manually freed with alt_MValue_Storageunsignedlonglong_free()
CAPI struct alt_MValue_Storageunsignedlonglong* alt_MValue_Storageunsignedlonglong_Create_2();

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:79:10
// struct alt::MValue::Storage<double>
// derives from struct alt::MValue::_Storage
    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:76:30
    // uint64_t refCount

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:79:33
    // double value

struct alt_MValue_Storagedouble {
    unsigned long long refCount;
    double value;
};

// functions from struct alt::MValue::Storage<double>
CAPI void alt_MValue_Storagedouble_free(struct alt_MValue_Storagedouble* ptr);

// derived record _Storage is not publicly accessible

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:79:10
// alt::MValue::Storage<double>::Storage
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype const struct alt::MValue::Storage<double> &
// Reference type
// cpptype struct alt::MValue::Storage<double>
// Return ptr must be manually freed with alt_MValue_Storagedouble_free()
CAPI struct alt_MValue_Storagedouble* alt_MValue_Storagedouble_Create(struct alt_MValue_Storagedouble* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:79:10
// alt::MValue::Storage<double>::Storage
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype struct alt::MValue::Storage<double> &&
// Reference type
// cpptype struct alt::MValue::Storage<double>
// Return ptr must be manually freed with alt_MValue_Storagedouble_free()
CAPI struct alt_MValue_Storagedouble* alt_MValue_Storagedouble_Create_1(struct alt_MValue_Storagedouble* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:79:10
// alt::MValue::Storage<double>::operator=
// Overloaded operator
// Return type
// cpptype struct alt::MValue::Storage<double> &
// Reference type
// cpptype struct alt::MValue::Storage<double>
// cpptype const struct alt::MValue::Storage<double> &
// Reference type
// cpptype struct alt::MValue::Storage<double>
CAPI void alt_MValue_Storagedouble_Assign_constMValue_StoragedoubleRef(struct alt_MValue_Storagedouble* _instance, struct alt_MValue_Storagedouble* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:79:10
// alt::MValue::Storage<double>::operator=
// Overloaded operator
// Return type
// cpptype struct alt::MValue::Storage<double> &
// Reference type
// cpptype struct alt::MValue::Storage<double>
// cpptype struct alt::MValue::Storage<double> &&
// Reference type
// cpptype struct alt::MValue::Storage<double>
CAPI void alt_MValue_Storagedouble_Assign_MValue_StoragedoubleRefRef(struct alt_MValue_Storagedouble* _instance, struct alt_MValue_Storagedouble* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:79:10
// alt::MValue::Storage<double>::~Storage
// Destructor

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:79:10
// alt::MValue::Storage<double>::Storage
// Constructor
// Return type
// cpptype void
// fundamental
// Return ptr must be manually freed with alt_MValue_Storagedouble_free()
CAPI struct alt_MValue_Storagedouble* alt_MValue_Storagedouble_Create_2();

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:79:10
// struct alt::MValue::Storage<class alt::String>
// derives from struct alt::MValue::_Storage
    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:76:30
    // uint64_t refCount

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:79:33
    // class alt::String value

struct alt_MValue_StorageString {
    unsigned long long refCount;
    struct alt_String value;
};

// functions from struct alt::MValue::Storage<class alt::String>
CAPI void alt_MValue_StorageString_free(struct alt_MValue_StorageString* ptr);

// derived record _Storage is not publicly accessible

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:79:10
// alt::MValue::Storage<alt::String>::Storage
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype const struct alt::MValue::Storage<class alt::String> &
// Reference type
// cpptype struct alt::MValue::Storage<class alt::String>
// Return ptr must be manually freed with alt_MValue_StorageString_free()
CAPI struct alt_MValue_StorageString* alt_MValue_StorageString_Create(struct alt_MValue_StorageString* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:79:10
// alt::MValue::Storage<alt::String>::Storage
// Constructor
// Return type
// cpptype void
// fundamental
// cpptype struct alt::MValue::Storage<class alt::String> &&
// Reference type
// cpptype struct alt::MValue::Storage<class alt::String>
// Return ptr must be manually freed with alt_MValue_StorageString_free()
CAPI struct alt_MValue_StorageString* alt_MValue_StorageString_Create_1(struct alt_MValue_StorageString* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:79:10
// alt::MValue::Storage<alt::String>::operator=
// Overloaded operator
// Return type
// cpptype struct alt::MValue::Storage<class alt::String> &
// Reference type
// cpptype struct alt::MValue::Storage<class alt::String>
// cpptype const struct alt::MValue::Storage<class alt::String> &
// Reference type
// cpptype struct alt::MValue::Storage<class alt::String>
CAPI void alt_MValue_StorageString_Assign_constMValue_StorageStringRef(struct alt_MValue_StorageString* _instance, struct alt_MValue_StorageString* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:79:10
// alt::MValue::Storage<alt::String>::operator=
// Overloaded operator
// Return type
// cpptype struct alt::MValue::Storage<class alt::String> &
// Reference type
// cpptype struct alt::MValue::Storage<class alt::String>
// cpptype struct alt::MValue::Storage<class alt::String> &&
// Reference type
// cpptype struct alt::MValue::Storage<class alt::String>
CAPI void alt_MValue_StorageString_Assign_MValue_StorageStringRefRef(struct alt_MValue_StorageString* _instance, struct alt_MValue_StorageString* _p0);

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:79:10
// alt::MValue::Storage<alt::String>::~Storage
// Destructor

// Method
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:79:10
// alt::MValue::Storage<alt::String>::Storage
// Constructor
// Return type
// cpptype void
// fundamental
// Return ptr must be manually freed with alt_MValue_StorageString_free()
CAPI struct alt_MValue_StorageString* alt_MValue_StorageString_Create_2();

// Record
// D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:79:10
// struct alt::MValue::Storage<class alt::Array<class alt::MValue> >
// derives from struct alt::MValue::_Storage
    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:76:30
    // uint64_t refCount

    // D:\src\llvm-project\clang-tools-extra\altv-capi\cpp-sdk/events/../types/MValue.h:79:33
    // class alt::Array<class alt::MValue> value

struct alt_MValue_StorageArrayMValue {
    unsigned long long refCount;
    struct alt_ArrayMValue value;
};

